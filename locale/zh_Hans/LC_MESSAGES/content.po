# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019-2020 Rother OSS GmbH, https://otobo.de/
# This file is distributed under the same license as the OTOBO Installation Guide package.
# Grit Rother <mr@otobo.de>, 2020.
# Paul Yang <paul.yang@itservice.com.cn>, 2020, 2021.
msgid ""
msgstr ""
"Project-Id-Version: OTOBO Installation Guide 10.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-03-04 00:14+0100\n"
"PO-Revision-Date: 2021-01-06 03:17+0000\n"
"Last-Translator: Paul Yang <paul.yang@itservice.com.cn>\n"
"Language-Team: Chinese (Simplified) <https://translate.otobo.org/projects/"
"otobo10/installation-manual/zh_Hans/>\n"
"Language: zh_Hans\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Weblate 4.2.2\n"

#: ../../content/backup-restore.rst:12
msgid "Backup and Restore"
msgstr "备份和恢复"

#: ../../content/backup-restore.rst:14
msgid ""
"OTOBO has built in scripts for backup and restore. Execute the scripts with "
"the option ``-h`` for more information."
msgstr ""
"OTOBO有内置的脚本用于备份和恢复，执行脚本时加入``-h``可以看到更详细的信息。"

#: ../../content/backup-restore.rst:17
msgid "Backup"
msgstr "备份"

#: ../../content/backup-restore.rst:21
msgid ""
"To create a new backup, write permission for the destination directory is "
"needed for the user ``otobo``."
msgstr "创建一个新的备份，需要用户 ``otobo``具备对目的目录有写的权限。"

#: ../../content/backup-restore.rst:27 ../../content/backup-restore.rst:80
msgid "The output of the script:"
msgstr "脚本的输出结果为："

#: ../../content/backup-restore.rst:70
msgid "Restore"
msgstr "恢复"

#: ../../content/backup-restore.rst:74
#: ../../content/backup-restore-docker.rst:65
msgid ""
"To restore the database make sure that the database ``otobo`` exists and "
"contains no tables."
msgstr "恢复数据库时，请确认数据库``otobo`` 存在并且不包含表单。"

#: ../../content/backup-restore.rst:96
#: ../../content/backup-restore-docker.rst:17
msgid "Considerations for running OTOBO under Docker"
msgstr "在Docker下运行OTOBO的考量"

#: ../../content/backup-restore.rst:98
msgid ""
"The same scripts can be used with OTOBO running under Docker. However some "
"Docker specific limitation must be considered."
msgstr ""
"相同的脚本可以用于OTOBO在Docker下的运行，不过要考虑一些Docker特定的限制。"

#: ../../content/backup-restore.rst:100
msgid ""
"First we need to make sure that the backup files are not created in the file "
"system that is internal to the container. Because in that case all data "
"would be lost when the container is stopped. Therefore the backup directory "
"must be in a volume. For now we only consider the most simple case, where "
"the backup dir is a local dir on the Docker host. The location of the backup "
"dir in the container can be arbitrarily chosen. In this example we choose "
"the local dir ``otobo_backup`` as the location on the host, and ``/"
"otobo_backup`` as the location in the container."
msgstr ""
"首先我们要确认备份文件创建时所在的文件系统，不是一个容器内部的文件系统。因为"
"在那种情况下，当容器被停止后，所有的数据都会丢失。所以，备份目录必须在一个"
"卷。现在我们先考虑最简单的一种情况，备份目录是Docker主机的一个本地目录。备份"
"目录在容器中的位置可以随意选择。在本例中我们选择本地目录``otobo_backup``作为"
"备份目录在主机的位置， 而在容器中的位置就是``/otobo_backup`` 。"

#: ../../content/backup-restore.rst:106
#: ../../content/backup-restore-docker.rst:32
msgid "First we need to create the volume."
msgstr "首先我们需要创建卷。"

#: ../../content/backup-restore.rst:119
msgid ""
"For creating the backup we need a running database and the volumes "
"``otobo_opt_otobo`` and ``otobo_backup``. This means that the webserver and "
"the Daemon may, but don't have to, be stopped."
msgstr ""
"为了创建备份，我们需要一个运行的数据库和卷``otobo_opt_otobo`` 以及 "
"``otobo_backup``，这意味着网站服务器和Daemon可能，不是必须，被停掉。"

#: ../../content/backup-restore.rst:130
#: ../../content/backup-restore-docker.rst:83
msgid ""
"For restoring the backup we also need to specify which backup should be "
"restored. The placeholder ``<TIMESTAMP>`` is something like "
"``2020-09-07_09-38``."
msgstr ""
"为了把备份文件恢复回来，我们需要确认恢复哪个备份文件。占位符``<TIMESTAMP>`` "
"就如同``2020-09-07_09-38``的标记一样。"

#: ../../content/backup-restore-docker.rst:12
msgid "Backup and Restore using Docker"
msgstr "备份和恢复"

#: ../../content/backup-restore-docker.rst:14
#, fuzzy
msgid ""
"Please read to the chapter :doc:`backup-restore` for basic information about "
"the backup and restore scripts."
msgstr ""
"请阅读备份和恢复的介绍文档：`backup-restore` 了解备份和恢复脚本的基本信息。"

#: ../../content/backup-restore-docker.rst:19
#, fuzzy
msgid ""
"The standard scripts ``backup.pl`` and ``restore.pl`` can also be used with "
"OTOBO running under Docker. However some Docker specific limitations have to "
"be considered."
msgstr ""
"相同的脚本可以用于OTOBO在Docker下的运行，不过要考虑一些Docker特定的限制。"

#: ../../content/backup-restore-docker.rst:22
#, fuzzy
msgid ""
"First, we need to make sure that the backup files are not created in the "
"file system that is internal to a Docker container. Because in that case the "
"created files would be lost when the container is stopped. This means that "
"the backup directory must located within in a volume. For this manual we "
"only consider the most simple case, where the backup directory is a local "
"directory on the Docker host. The location of the backup dir in the "
"container can be arbitrarily chosen. In this example we choose the local dir "
"``otobo_backup`` as the location on the host and ``/otobo_backup`` as the "
"location in the container."
msgstr ""
"首先我们要确认备份文件创建时所在的文件系统，不是一个容器内部的文件系统。因为"
"在那种情况下，当容器被停止后，所有的数据都会丢失。所以，备份目录必须在一个"
"卷。现在我们先考虑最简单的一种情况，备份目录是Docker主机的一个本地目录。备份"
"目录在容器中的位置可以随意选择。在本例中我们选择本地目录``otobo_backup``作为"
"备份目录在主机的位置， 而在容器中的位置就是``/otobo_backup`` 。"

#: ../../content/backup-restore-docker.rst:29
msgid ""
"Secondly, commands in the Docker container usually run as the user `otobo` "
"with the user id 1000 and the group id 1000. It must be made sure, that this "
"user can write in the backup directory."
msgstr ""

#: ../../content/backup-restore-docker.rst:48
#, fuzzy
msgid ""
"For creating the backup we need a running database and the volumes "
"``otobo_opt_otobo`` and ``otobo_backup``. This means that the webserver and "
"the OTOBO daemon may, but don't have to, be stopped."
msgstr ""
"为了创建备份，我们需要一个运行的数据库和卷``otobo_opt_otobo`` 以及 "
"``otobo_backup``，这意味着网站服务器和Daemon可能，不是必须，被停掉。"

#: ../../content/backup-restore-docker.rst:67
msgid ""
"To drop an existing otobo database and create a new one you can use the "
"following commands. First, you have to connect to the MySQL CLI of the `db` "
"container."
msgstr ""

#: ../../content/backup-restore-docker.rst:75
msgid ""
"As soon as you are connected to the MySQL server, you can drop and recreate "
"the `otobo` database."
msgstr ""

#: ../../content/customer-interface-ci.rst:12
msgid "Adapt customer interface with corporate identity"
msgstr ""

#: ../../content/customer-interface-ci.rst:14
msgid ""
"In OTOBO it is very easy to adapt the customer area to your own corporate "
"identity. Follow this tutorial step by step and OTOBO will shine in your own "
"design in a short time."
msgstr ""

#: ../../content/customer-interface-ci.rst:20
msgid ""
"Currently, it is not so easy to adapt the agent area to one's own CI. "
"Changes in the OTOBO .css files would be necessary here. One exception is "
"the logo on the agent login page and the agent header. The logos can be "
"easily exchanged by copying the logos to the server and then adjusting the "
"options ``AgentLoginLogo`` and ``AgentLogo`` under ``Admin -> System "
"Configuration``."
msgstr ""

#: ../../content/customer-interface-ci.rst:26
msgid "Change colors in Customer Area"
msgstr ""

#: ../../content/customer-interface-ci.rst:28
msgid ""
"To change the colors for the OTOBO customer interface, please go to ``Admin -"
"> System Configuration`` and change the following settings:"
msgstr ""

#: ../../content/customer-interface-ci.rst:30
msgid "CustomerColorDefinitions"
msgstr ""

#: ../../content/customer-interface-ci.rst:31
msgid ""
"To change the colours on the Customer Dashboard, please go to `Admin -> "
"System Configuration`` and search for CustomerDashboard. In the search "
"result you will find all the options you need with colour definitions."
msgstr ""

#: ../../content/customer-interface-ci.rst:35
msgid "Change Logos and Pictures"
msgstr ""

#: ../../content/customer-interface-ci.rst:37
msgid ""
"In the first step please copy your Logos and Pictures to the OTOBO Server. "
"Please use an SCP client (WinSCP) for this purpose. Often you do not have "
"the permissions to copy the logos to the right place. In this case, it is "
"best to use the folder /tmp/."
msgstr ""

#: ../../content/customer-interface-ci.rst:41
msgid "In the next step copy the Logo into the OTOBO Home directory:"
msgstr ""

#: ../../content/customer-interface-ci.rst:52
msgid ""
"Now change inside the OTOBO Agent Interface to ``Admin -> System "
"Configuration`` and change the following settings:"
msgstr ""

#: ../../content/customer-interface-ci.rst:56
msgid "Change Customer Login Pictures and Text"
msgstr ""

#: ../../content/customer-interface-ci.rst:61
msgid "1 and 2 - System Configuration Option **CustomerLogin::Settings**"
msgstr ""

#: ../../content/customer-interface-ci.rst:63
msgid "**Remove Opacity and Watermark**"
msgstr ""

#: ../../content/customer-interface-ci.rst:65
msgid ""
"At the moment it is not possible to remove the overlay and watermark used in "
"the image on the right by system configuration."
msgstr ""

#: ../../content/customer-interface-ci.rst:67
msgid ""
"To remove the opacity, please adjust the option **#oooLoginBG > .oooBG** in "
"the file"
msgstr ""

#: ../../content/customer-interface-ci.rst:69
msgid "``var/httpd/htdocs/skins/Customer/default/css/Core.Login.css``"
msgstr ""

#: ../../content/customer-interface-ci.rst:82
msgid ""
"To remove the watermark, please remove the following line inside the file:"
msgstr ""

#: ../../content/customer-interface-ci.rst:84
msgid "``Kernel/Output/HTML/Templates/Standard/CustomerLogin.tt``"
msgstr ""

#: ../../content/customer-interface-ci.rst:100
msgid ""
"Please add the files to a opm package in the next step, so that the changes "
"remain persistent. You can find instructions on how to do this in our Admin "
"Manual: https://doc.otobo.org/manual/developer/10.1/en/content/how-to-"
"publish-otobo-extensions.html"
msgstr ""

#: ../../content/customer-interface-ci.rst:104
msgid "Change Customer Dashboard tiles and options"
msgstr ""

#: ../../content/customer-interface-ci.rst:106
msgid ""
"To change the colours on the Customer Dashboard, please go to ``Admin -> "
"System Configuration`` and search for **CustomerDashboard**."
msgstr ""

#: ../../content/customer-interface-ci.rst:108
msgid ""
"In the search result you will find all the options you need with colour "
"definitions."
msgstr ""

#: ../../content/customer-interface-ci.rst:113
msgid ""
"1 - To change the picture, link and text please use the System Configuration "
"Option **CustomerDashboard::Tiles###FeaturedLink-01**"
msgstr ""

#: ../../content/customer-interface-ci.rst:114
msgid ""
"2 - To change the toplevel text please use the System Configuration Option "
"**CustomerDashboard::Configuration::Text**"
msgstr ""

#: ../../content/customer-interface-ci.rst:118
msgid "Please disable the config options from not needed tiles."
msgstr ""

#: ../../content/history.rst:13
msgid "Documentation History"
msgstr "文档历史"

#: ../../content/history.rst:15
msgid "2019 - OTRS Installation Guide - OTRS AG (https://otrs.com)"
msgstr "2019 - OTRS安装指南 - OTRS AG (https://otrs.com)"

#: ../../content/history.rst:16
msgid "2020 - OTOBO Installation Tutorial - Rother OSS GmbH (https://otobo.de)"
msgstr "2020 - OTOBO安装教程 - Rother OSS GmbH (https://otobo.de)"

#: ../../content/history.rst:18
msgid ""
"Published by: Rother OSS GmbH, (https://otobo.de), Oberwalting 31, 94339 "
"Leiblfing, Germany. Authors: OTRS AG (original version), Rother OSS GmbH "
"(https://otobo.de)"
msgstr ""
"由Rother OSS GmbH出版，地址：德国莱布芬市 Oberwalting 31, 94339。作者：OTRS "
"AG (original version)，Rother OSS GmbH (https://rother-oss.com)"

#: ../../content/history.rst:21
msgid ""
"Permission is granted to copy, distribute and/or modify this document under "
"the terms of the GNU Free Documentation License, Version 1.3 or any later "
"version published by the Free Software Foundation; with no Invariant "
"Sections, no Front-Cover Texts, and no Back-Cover Texts. A copy of the "
"license can be found on the `GNU website <https://www.gnu.org/licenses/"
"fdl-1.3.txt>`__."
msgstr ""
"在GNU免费文档许可条款（版本1.3或之后由自由软件基金会发布更新版）的要求下，没"
"有不变动的章节，没有前后封面文字。授权文件可以在`GNU网站：<https://www.gnu."
"org/licenses/fdl-1.3.txt>`上找到。"

#: ../../content/index.rst:17
msgid "OTOBO Installation Tutorial"
msgstr "OTOBO安装教程"

#: ../../content/index.rst:19
msgid ""
"This work is copyrighted by OTRS AG (https://otrs.com), Zimmersmühlenweg 11, "
"61440 Oberursel, Germany."
msgstr ""
"本著作版权属于OTRS AG (https://otrs.com), Zimmersmühlenweg 11, 61440 "
"Oberursel, Germany."

#: ../../content/index.rst:22
#, fuzzy
msgid ""
"Copyright © for modifications and amendments 2019-2022 ROTHER OSS GmbH "
"(https://otobo.de), Oberwalting 31, 94339 Leiblfing, Germany"
msgstr ""
"2019-2020更改和修订版权：ROTHER OSS GmbH (https://otobo.de), Oberwalting 31, "
"94339 Leiblfing, Germany"

#: ../../content/index.rst:25
msgid ""
"Terms and Conditions OTRS: Permission is granted to copy, distribute and/or "
"modify this document under the terms of the GNU Free Documentation License, "
"Version 1.3 or any later version published by the Free Software Foundation; "
"with no Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts. A "
"copy of the license can be found on the GNU website."
msgstr ""
"OTRS条款：在GNU免费文档许可条款（版本1.3或之后由自由软件基金会发布更新版）的"
"要求下，没有不变动的章节，没有前后封面文字。授权文件的拷贝可以在`GNU网站上找"
"到。"

#: ../../content/index.rst:32
msgid ""
"Terms and Conditions Rother OSS: Permission is granted to copy, distribute "
"and/or modify this document under the terms of the GNU Free Documentation "
"License, Version 1.3 or any later version published by the Free Software "
"Foundation; with no Invariant Sections, no Front-Cover Texts, and no Back-"
"Cover Texts. A copy of the license is included in the section entitled "
"\"COPYING\"."
msgstr ""
"Rother OSS条款：在GNU免费文档许可条款（版本1.3或之后由自由软件基金会发布更新"
"版）的要求下，没有不变动的章节，没有前后封面文字。授权文件可以在GNU网站上找"
"到。"

#: ../../content/index.rst:39
msgid ""
"Published by: Rother OSS GmbH, (https://otobo.de), Oberwalting 31, 94339 "
"Leiblfing, Germany."
msgstr ""
"出版人：Rother OSS GmbH, (https://otobo.de), Oberwalting 31, 94339 "
"Leiblfing, Germany."

#: ../../content/index.rst:42
msgid ""
"Authors: OTRS AG (original version), Rother OSS GmbH (https://otobo.de)."
msgstr "作者：OTRS AG (original version), Rother OSS GmbH (https://otobo.de)。"

#: ../../content/index.rst:44
msgid "Contents"
msgstr "内容"

#: ../../content/installation.rst:12
msgid "OTOBO Installation"
msgstr "OTOBO安装"

#: ../../content/installation.rst:14
msgid ""
"This chapter describes the installation and basic configuration of the "
"central OTOBO framework."
msgstr "本章讲述了OTOBO构架核心部分的安装和基本设置。"

#: ../../content/installation.rst:16
msgid ""
"Follow the detailed steps in this chapter to install OTOBO on your server. "
"You can then use its web interface to login and administer the system."
msgstr ""
"按照本章的详细步骤在你的服务器上安装OTOBO，而后你就可以从网络接口登陆并管理系"
"统了。"

#: ../../content/installation.rst:20
msgid ""
"As of OTOBO version 10.0.7, we recommend Docker and Docker Compose for the "
"OTOBO installation. By using the provided Docker images, all recommended "
"dependencies (such as Elasticsearch, Redis Cache, etc.) are installed and "
"configured automatically. Updates are thus greatly simplified and the "
"performance has been improved. You can find the instructions for Docker-"
"based installation at https://doc.otobo.org/manual/installation/10.1/en/"
"content/installation-docker.html ."
msgstr ""

#: ../../content/installation.rst:28
msgid "Preparation: Disable SELinux when it is installed and enabled"
msgstr "准备工作：SELinux完成安装和激活后，关闭它"

#: ../../content/installation.rst:32
msgid ""
"If your system uses SELinux, you should disable it, otherwise OTOBO will not "
"work correctly."
msgstr "如果你的系统是SELinux，需要禁用它，否则OTOBO不能正确运行。"

#: ../../content/installation.rst:34
msgid ""
"Try the command ``sestatus`` and ``getenforce`` when you are not sure "
"whether SELinux is installed and enabled on your system."
msgstr ""
"如果你不能确认SELinux是否已经在你的系统上安装激活，可以试一下命令"
"``sestatus`` 和 ``getenforce`` 。"

#: ../../content/installation.rst:36
msgid ""
"The ``sestatus`` command returns the SELinux status and the SELinux policy "
"being used. SELinux status: enabled is returned when SELinux is enabled. "
"Current mode: enforcing is returned when SELinux is running in enforcing "
"mode. Policy from config file: targeted is returned when the SELinux "
"targeted policy is used."
msgstr ""
"命令``sestatus`` 可以返回SELinux的状态和应用的策略。SELinux的状态如果返回“被"
"激活”，就说明SELinux已经激活；当前模式如果返回“强制模式”就说明SELinux是运行在"
"强制模式下；配置文件策略如果返回“目标”，就说明SELinux的目标策略已经激活。"

#: ../../content/installation.rst:41
msgid "Here's how to disable SELinux for RHEL/CentOS/Fedora."
msgstr "这里是如何在RHEL/CentOS/Fedora中禁用SELinux。"

#: ../../content/installation.rst:43
msgid "Configure ``SELINUX=disabled`` in the ``/etc/selinux/config`` file:"
msgstr "在``/etc/selinux/config``文件中设置 ``SELINUX=disabled``："

#: ../../content/installation.rst:58
msgid ""
"Reboot your system. After reboot, confirm that the ``getenforce`` command "
"returns *Disabled*:"
msgstr "重启你的系统，重启后，确认一下``getenforce`` 命令返回的是不是“禁用”："

#: ../../content/installation.rst:69
msgid "Step 1: Unpack and Install OTOBO"
msgstr "步骤1：打开OTOBO封装和安装"

#: ../../content/installation.rst:71
msgid ""
"Download the latest otobo release from https://ftp.otobo.org/pub/otobo/. "
"Unpack the source archive (for example, using ``tar``) into the directory ``/"
"opt/otobo-install``:"
msgstr ""
"从https://ftp.otobo.org/pub/otobo/下载最新的OTOBO版本软件，打开封装文档（例如"
"使用``tar``命令），并存到目录``/root/otobo-update``："

#: ../../content/installation.rst:84
msgid "Step 2: Install Additional Programs and Perl Modules"
msgstr "步骤2：安装其他程序和Perl模块"

#: ../../content/installation.rst:86
msgid ""
"Use the following script to get an overview of all installed and required "
"CPAN modules and other external dependencies."
msgstr ""
"用下面的脚本可以对所有已经安装的，以及必须要的CPAN模块和其他外部环境，有一个"
"通盘的了解。"

#: ../../content/installation.rst:90
msgid "On Debian systems you may need to manually install some perl packages:"
msgstr ""

#: ../../content/installation.rst:107
msgid ""
"Please note that OTOBO requires a working Perl installation with all *core* "
"modules such as the module ``version``. These modules are not explicitly "
"checked by the script. You may need to install a ``perl-core`` package on "
"some systems like RHEL that do not install the Perl core packages by default."
msgstr ""
"请注意OTOBO需要一个安装了所有*核心*模块的可以运行的Perl，例如``version``模"
"块。脚本不会对这些模块进行核查，所以针对一些像RHEL的系统，他们不会去默认安装"
"Perl核心模块，你可能需要自己去安装这些 ``perl-core``软件包。"

#: ../../content/installation.rst:109
msgid ""
"To install the required and optional packages, you can use either CPAN or "
"the package manager of your Linux distribution."
msgstr "你可以用CPAN或者Linux的软件包管理系统，安装必须的以及可选的软件模块。"

#: ../../content/installation.rst:111
msgid ""
"Execute this command to get an install command to install the missing "
"dependencies:"
msgstr "执行这个命令就可以取得一个安装命令，去安装那些缺失的外部环境软件："

#: ../../content/installation.rst:119
msgid ""
"There are a number of optional or alternative modules which can be "
"installed, mostly for more customized versions of OTOBO. Calling "
"CheckModules.pl without any argument will list its full functionality."
msgstr ""
"有一些可选的或者可替换的模块，在大多数定制化的OTOBO版本中，也可以安装上。调用"
"CheckModules.pl 毫无疑问可以列出所有功能。"

#: ../../content/installation.rst:123
msgid "Step 3: Create the OTOBO User"
msgstr "步骤3：创建OTOBO用户"

#: ../../content/installation.rst:125
msgid "Create a dedicated user for OTOBO within its own group:"
msgstr "在用户自己的组中，创建一个专用的OTOBO用户："

#: ../../content/installation.rst:131
msgid ""
"Add the user to web server group (if the web server is not running as otobo "
"user):"
msgstr "把这个用户加入网站服务器组（如果网站服务器不是作为OTOBO用户运行）："

#: ../../content/installation.rst:140
msgid "Step 4: Activate the Default Configuration File"
msgstr "步骤4：激活默认的配置文件"

#: ../../content/installation.rst:142
msgid ""
"There is an OTOBO configuration file bundled in ``$OTOBO_HOME/Kernel/Config."
"pm.dist``. You must activate it by copying it without the ``.dist`` file "
"name extension."
msgstr ""
"有一个OTOBO配置文件是捆绑在``$OTOBO_HOME/Kernel/Config.pm.dist``中的，你需要"
"拷贝这个文件并去掉``.dist`` ，以便激活它。"

#: ../../content/installation.rst:150
msgid "Step 5: Configure the Apache Web Server"
msgstr "步骤5：配置Apache网站服务器"

#: ../../content/installation.rst:152
msgid ""
"First of all, you should install the Apache2 web server and mod_perl; you'd "
"typically do this from your system's package manager. Below you'll find the "
"commands needed to set up Apache on the most popular Linux distributions."
msgstr ""
"首先，你需要安装Apache2网站服务器和mod_perl：通常你会通过系统的软件管理系统来"
"进行。在下面你看会看到在当前流行的Linux版本上，安装Apache需要的一些命令。"

#: ../../content/installation.rst:166
msgid ""
"A critical setting of the Apache web server is the choice of the multi-"
"processing module. For running OTOBO, the recommended choice is the module "
"**mpm_prefork**. Like other Apache modules the multi-processing module can "
"be managed with the tools a2dismod and a2enmod."
msgstr ""

#: ../../content/installation.rst:175
msgid "All is fine whem mpm_prefork already is enabled."
msgstr ""

#: ../../content/installation.rst:177
msgid "Disable mpm_event when it is currently active."
msgstr ""

#: ../../content/installation.rst:183
msgid "Disable mpm_worker in case that MPM is enabled."
msgstr ""

#: ../../content/installation.rst:189
msgid "Finally activate mpm_prefork."
msgstr ""

#: ../../content/installation.rst:195
#, fuzzy
msgid ""
"OTOBO requires a few more Apache modules to be active for optimal operation. "
"Again, on most platforms you can make sure they are active via the tool "
"a2enmod."
msgstr ""
"OTOBO为了实现最优运行，需要一些Apache模块。在大多数平台上，你可以通过a2enmod"
"工具确认这些模块是否已经激活。"

#: ../../content/installation.rst:206
msgid ""
"On some platforms not all Apache modules exist and an error is displayed "
"when installing. Do not worry and finish the installation, in most cases the "
"module will not be needed."
msgstr ""
"在一些平台上，不是所有的Apache模块都存在，这样在安装的时候就会显示错误信息。"
"这种情况不用着急，继续完成安装，大部分情况下，没有成功安装的模块往往都不需"
"要。"

#: ../../content/installation.rst:208
msgid ""
"Most Apache installations have a ``conf.d`` directory included. On Linux "
"systems you can usually find this directory under ``/etc/apache`` or ``/etc/"
"apache2``."
msgstr ""
"大部分的Apache安装都包括一个``conf.d``目录，在Linux系统中你可以在``/etc/"
"apache`` 或者 ``/etc/apache2``下面找到这个目录。"

#: ../../content/installation.rst:211
msgid "Configure Apache without SSL support"
msgstr "在没有SSL支持的情况下配置Apache"

#: ../../content/installation.rst:213
#, fuzzy
msgid ""
"Copy the template file ``/opt/otobo/scripts/apache2-httpd.include.conf`` to "
"the apache ``sites-available`` directory. In most cases no further editing "
"of the template is required. Then enable the new configuration."
msgstr ""
"在Apache配置目录中（先确认一下在完成其他配置后是否被加载了），从``/opt/otobo/"
"scripts/apache2-httpd.include.conf``拷贝合适的模板到文件``zzz_otobo.conf`` 。"

#: ../../content/installation.rst:226
msgid "Configure Apache **with** SSL support"
msgstr "在 **有** SSL 支持的情况下配置Apache"

#: ../../content/installation.rst:228
#, fuzzy
msgid ""
"Copy the template files ``/opt/otobo/scripts/apache2-httpd-vhost-80.include."
"conf`` and ``/opt/otobo/scripts/apache2-httpd-vhost-443.include.conf`` to "
"the apache ``sites-available`` directory."
msgstr ""
"把模板文件 ``/opt/otobo/scripts/apache2-httpd-vhost-80.include.conf``和``/"
"opt/otobo/scripts/apache2-httpd-vhost-443.include.conf`` 拷贝到Apache的"
"``sites-available``目录下。"

#: ../../content/installation.rst:237
msgid ""
"Please edit the files and add the required information like SSL certificate "
"storage path. After that, enable the OTOBO Apache configuration:"
msgstr ""
"请编辑文件并加入一些必须的信息，例如SSL认证存储路径。之后，激活OTOBO Apache配"
"置："

#: ../../content/installation.rst:244
msgid ""
"Now you can restart your web server to load the new configuration settings. "
"On most systems you can use the following command to do so:"
msgstr ""
"现在你可以重启你的网站服务器，载入新的配置设定了。在多数系统中，你可以用下面"
"的命令来实现："

#: ../../content/installation.rst:252
msgid "Step 6: Set File Permissions"
msgstr "步骤6：设置文件许可"

#: ../../content/installation.rst:254 ../../content/updating.rst:121
msgid ""
"Please execute the following command to set the file and directory "
"permissions for OTOBO. It will try to detect the correct user and group "
"settings needed for your setup."
msgstr ""
"请执行下面的命令设置OTOBO的文件和目录许可。系统会尝试为你检测正确的用户和组。"

#: ../../content/installation.rst:262
msgid "Step 7: Setup the Database"
msgstr "步骤7：建立数据库"

#: ../../content/installation.rst:264
msgid ""
"First of all, you should install the database package. It is recommended to "
"use the MySQL or MariaDB package, which will be delivered with your Linux "
"system, but it is possible to use PostgreSQL or Oracle as well."
msgstr ""
"首先，你需要安装数据库软件。建议使用你的Linux系统自带的MySQL或者MariaDB，也可"
"以使用PostgreSQL或者Oracle。"

#: ../../content/installation.rst:267
msgid ""
"You'd typically do this from your systems package manager. Below you'll find "
"the commands needed to set up MySQL on the most popular Linux distributions."
msgstr ""
"你可以通过系统的软件管理进行安装，下面是在常用的Linux版本上安装MySQL数据库的"
"一些命令。"

#: ../../content/installation.rst:281
msgid "After installing the MySQL server you need configure it."
msgstr "安装了MySQL服务器后，需要进行配置。"

#: ../../content/installation.rst:283
msgid ""
"In MySQL higher or equal version 5.7  a new authentication module is active, "
"and it is not possible to use the OTOBO web installer for database creation. "
"Please login to the mysql console and set a different authentication module "
"and password for the user ``root`` if this is the case:"
msgstr ""
"在MySQL 5.7及更高版本中，激活了一个新的认证模块，这样就不能用OTOBO的网络安装"
"软件建立数据库了。这种情况下， 请登陆进入MySQL控制台，设置不同的认证模块和用"
"户``root`` 的密码："

#: ../../content/installation.rst:291
msgid "For MariaDB > 10.1 use instead the following command:"
msgstr "对MariaDBM 10.1以上版本，用下面的命令："

#: ../../content/installation.rst:298
msgid "If this command not work, please try the following commands:"
msgstr "如果此命令不起作用，请尝试以下命令："

#: ../../content/installation.rst:307
msgid ""
"After OTOBO installation it is possible to change the authentication module "
"again, if needed."
msgstr "在OTOBO完成安装后，在需要时也可以更改认证模块。"

#: ../../content/installation.rst:311
msgid ""
"The following configuration settings are minimum requirements for MySQL "
"setups. Please add the following lines to the MySQL Server configuration "
"file ``/etc/my.cnf``, ``/etc/mysql/my.cnf`` or ``/etc/mysql/mysql.conf.d/"
"mysqld.cnf`` under the ``[mysqld]`` section:"
msgstr ""
"下面的配置设定是MySQL安装的最低要求。请将下面的脚本加入``[mysqld]`` 下面的"
"MySQL服务器配置文件``/etc/my.cnf``，``/etc/mysql/my.cnf`` 或者 ``/etc/mysql/"
"mysql.conf.d/mysqld.cnf``："

#: ../../content/installation.rst:318
msgid "For MySQL prior to MySQL 8.0 the query cache size should also be set:"
msgstr "对MySQL 8.0之前的版本，查询缓存尺寸需要设定："

#: ../../content/installation.rst:324
msgid ""
"Also add the following lines to the MySQL Server configuration file ``/etc/"
"my.cnf``, ``/etc/mysql/my.cnf`` or ``/etc/mysql/mysql.conf.d/mysqldump.cnf`` "
"under the ``[mysqldump]`` section:"
msgstr ""
"下面的配置设定是MySQL安装的最低要求。请将下面的脚本加入``[mysqld]`` 下面的"
"MySQL服务器配置文件``/etc/my.cnf``，``/etc/mysql/my.cnf`` 或者 ``/etc/mysql/"
"mysql.conf.d/mysqld.cnf``："

#: ../../content/installation.rst:331
msgid ""
"For production purposes we recommend to use the tool ``mysqltuner`` to find "
"the perfect setup. You can download the script from github ``https://github."
"com/major/MySQLTuner-perl`` or install it on Debian or Ubuntu systems via "
"package manager:"
msgstr ""
"出于生产率考虑，我们建议用``mysqltuner`` 工具实现优化。你可以从Github "
"``https://github.com/major/MySQLTuner-perl``下载脚本，或者通过软件管理在"
"Debian或Ubuntu系统上安装："

#: ../../content/installation.rst:338
msgid "After installing execute the script:"
msgstr "安装后运行下面的脚本："

#: ../../content/installation.rst:346
msgid "Step 8: Setup Elasticsearch"
msgstr "步骤8：安装Elasticsearch弹性搜索"

#: ../../content/installation.rst:348
msgid ""
"OTOBO recommends an active installation of Elasticsearch for quick search. "
"The easiest way is to setup Elasticsearch on the same host as OTOBO and "
"binding it to its default port."
msgstr ""
"OTOBO建议活性安装Elasticsearch以便快速搜索，最简单的办法就是将Elasticsearch和"
"OTOBO安装在一台主机上，并绑定默认端口。"

#: ../../content/installation.rst:351
msgid "Elasticsearch installation example based on Ubuntu 18.04 LTS"
msgstr "基于Ubuntu 18.04 LTS的Elasticsearch安装范例"

#: ../../content/installation.rst:353
msgid "JDK Installation"
msgstr "JDK安装"

#: ../../content/installation.rst:360
msgid "Elasticsearch Installation"
msgstr "Elasticsearch安装"

#: ../../content/installation.rst:370
msgid "Elasticsearch Installation on another Linux distribution"
msgstr "在其他Linux版本中的Elasticsearch安装"

#: ../../content/installation.rst:372
msgid ""
"Please follow the installation tutorial found at https://www.elastic.co/"
"guide/en/elasticsearch/reference/current/setup.html."
msgstr ""
"请遵照 https://www.elastic.co/guide/en/elasticsearch/reference/current/setup."
"html中的安装教程进行。"

#: ../../content/installation.rst:375
msgid "Elasticsearch Module Installation"
msgstr "Elasticsearch模块安装"

#: ../../content/installation.rst:376
msgid ""
"Additionally, OTOBO requires plugins to be installed into Elasticsearch:"
msgstr "另外，OTOBO需要在Elasticsearch上安装插件："

#: ../../content/installation.rst:385
msgid "Elasticsearch Configuration"
msgstr "Elasticsearch配置"

#: ../../content/installation.rst:387
msgid ""
"Elasticsearch has a multitude of configuration options and possibilities."
msgstr "Elasticsearch的配置有很多选择和可能。"

#: ../../content/installation.rst:389
msgid ""
"In order to ensure error-free operation, you should adjust the jvm heap "
"space for larger OTOBO systems. Please adjust the settings in the file ``/"
"etc/elasticsearch/jvm.options``. You should always set the min and max JVM "
"heap size to the same value. For example, to set the heap to 4 GB, set:"
msgstr ""
"为了确保无故障运行，你需要调整大型OTOBO系统的jvm堆空间尺寸。这个配置在文件``/"
"etc/elasticsearch/jvm.options``中进行调整。一定要吧JVM堆空间的最大和最小值设"
"置为同一个，例如都设为4GB，设置："

#: ../../content/installation.rst:397
msgid ""
"In our tests, a value between 4 and 10 GB for medium-sized installations has "
"proven to be the best."
msgstr "在我们的测试中，对于中型安装，这个值设为4-10GB是最好的。"

#: ../../content/installation.rst:401
msgid ""
"See ``https://www.elastic.co/guide/en/elasticsearch/reference/current/heap-"
"size.html`` for more information."
msgstr ""
"请遵照 https://www.elastic.co/guide/en/elasticsearch/reference/current/setup."
"html中的安装教程进行。"

#: ../../content/installation.rst:403
msgid ""
"Now you can restart your Elasticsearch server to load the new configuration "
"settings. On most systems you can use the following command to do so:"
msgstr ""
"现在你可以重启你的Elasticsearch服务器，以便新的配置生效。对于大部分系统，可以"
"用下面的命令实现："

#: ../../content/installation.rst:411
#, fuzzy
msgid "Step 9: Basic System Configuration"
msgstr "步骤8：系统基础配置"

#: ../../content/installation.rst:413
msgid ""
"Please use the web installer at http://localhost/otobo/installer.pl (replace "
"\"localhost\" with your OTOBO hostname) to set up your database and basic "
"system settings such as email accounts."
msgstr ""
"请用 http://localhost/otobo/installer.pl （请用你的主机名替换“localhost”）中"
"的网络安装软件，设置你的数据库和基本系统配置，例如电子邮件账户。"

#: ../../content/installation.rst:417
#, fuzzy
msgid "Step 10: First Login"
msgstr "步骤9：首次登陆"

#: ../../content/installation.rst:419
msgid ""
"Now you are ready to login to your system at http://localhost/otobo/index.pl "
"as user ``root@localhost`` with the password that was generated (see above)."
msgstr ""
"现在你可以通过http://localhost/otobo/index.pl登陆你的系统了，用户名"
"``root@localhost`` ，密码是上面生成的（请参考之前描述）。"

#: ../../content/installation.rst:423
#, fuzzy
msgid "Step 11: Start the OTOBO Daemon"
msgstr "步骤10：启动OTOBO Daemon"

#: ../../content/installation.rst:425
msgid ""
"OTOBO daemon is responsible for handling any asynchronous and recurring "
"tasks in OTOBO. What has been in cron file definitions previously is now "
"handled by the OTOBO daemon, which is required to operate OTOBO. The daemon "
"also handles all GenericAgent jobs and must be started from the OTOBO user."
msgstr ""
"OTOBO守护程序的任务是处理OTOBO系统中的不同步的和重复性的工作。之前在cron文件"
"定义中描述的现在由OTOBO守护程序处理，这是运行OTOBO的需要。守护程序还要处理由"
"用户发起的GenericAgent任务。"

#: ../../content/installation.rst:432
#, fuzzy
msgid "Step 12: Cron jobs for the OTOBO user"
msgstr "步骤11：OTOBO用户的cron任务"

#: ../../content/installation.rst:434
msgid ""
"There are two default OTOBO cron files in ``/opt/otobo/var/cron/\\*.dist``, "
"and their purpose is to make sure that the OTOBO Daemon is running. They "
"need to be be activated by copying them without the \".dist\" filename "
"extension."
msgstr ""
"在``/opt/otobo/var/cron/\\*.dist``中有两个默认的cron文件，目的是确保OTOBO "
"Daemon守护程序已经运行起来了。激活这两个文件只需要不带“.dist\"扩展名进行拷贝"
"就好。"

#: ../../content/installation.rst:444
msgid "With this step, the basic system setup is finished."
msgstr "到这一步，基本的系统配置就完成了。"

#: ../../content/installation.rst:448
#, fuzzy
msgid "Step 13: Setup Bash Auto-Completion (optional)"
msgstr "步骤12：设置Bash Auto-Completion （可选）"

#: ../../content/installation.rst:450
msgid ""
"All regular OTOBO command line operations happen via the OTOBO console "
"interface. This provides an auto-completion for the bash shell which makes "
"finding the right command and options much easier."
msgstr ""
"所有正常的OTOBO命令行的执行都是通过OTOBO管理接口，管理接口可以实现Linux内核任"
"务的自动完成，从而更方便地找到合适的命令和选项。"

#: ../../content/installation.rst:452
msgid ""
"You can activate the bash auto-completion by installing the package ``bash-"
"completion``. It will automatically detect and load the file ``/opt/otobo/."
"bash_completion`` for the ``otobo`` user."
msgstr ""
"你可以通过安装软件包``bash-completion``来激活内核任务自动完成，它将为"
"``otobo`` 用户自动检测并调用``/opt/otobo/.bash_completion``文件。"

#: ../../content/installation.rst:454
msgid ""
"After restarting your shell, you can just type this command followed by TAB, "
"and it will list all available commands:"
msgstr "重启你的shell后，你可以键入这个命令再加上TAB，就会列出所有可用的命令："

#: ../../content/installation.rst:460
msgid ""
"If you type a few characters of the command name, TAB will show all matching "
"commands. After typing a complete command, all possible options and "
"arguments will be shown by pressing TAB."
msgstr ""
"如果你只键入命令名字的几个字母，TAB将会列出所有匹配的命令。键入完整命令，按下"
"TAB键将显示所有的可选项和相应信息。"

#: ../../content/installation.rst:464
msgid ""
"If you have problems, you can execute the following line as user ``otobo`` "
"and add it to your ``~/.bashrc`` to execute the commands from the file."
msgstr ""
"如果有问题，你可以作为用户``otobo`` 执行下面的命令行，并将它加入你的``~/."
"bashrc`` ，执行文件中的命令。"

#: ../../content/installation.rst:472
#, fuzzy
msgid "Step 14: Further Information"
msgstr "步骤13：更多信息"

#: ../../content/installation.rst:474
msgid "We advise you to read the OTOBO :doc:`performance-tuning` chapter."
msgstr "我们建议你阅读OTOBO文档中的：`performance-tuning` 章节。"

#: ../../content/installation-docker.rst:12
msgid "Installing using Docker and Docker Compose"
msgstr "安装应用 Docker和Docker Compose"

#: ../../content/installation-docker.rst:14
#, fuzzy
msgid ""
"With the dockerized OTOBO deployment you can get your personal OTOBO "
"instance up and running within minutes. All of OTOBO´s dependencies are "
"already included in the provided collection of Docker images."
msgstr ""
"用容器虚拟化实施你的OTOBO系统，你可以马上建立你的个人OTOBO并在几分钟内开始运"
"行，因为所有的OTOBO需要的外部环境软件都已经包括在内了。"

#: ../../content/installation-docker.rst:17
#, fuzzy
msgid "Service *db*: MariaDB is set up as the default database."
msgstr "MariaDB被设置为默认数据库。"

#: ../../content/installation-docker.rst:18
#, fuzzy
msgid "Service *elastic*: Elasticsearch is set up for the OTOBO power search."
msgstr "为OTOBO建立Elasticsearch进行强力搜索。"

#: ../../content/installation-docker.rst:19
#, fuzzy
msgid "Service *redis*: Redis is enabled for fast caching."
msgstr "启用Redis进行快速缓存。"

#: ../../content/installation-docker.rst:20
#, fuzzy
msgid "Service *web*: Gazelle is used as fast Perl webserver."
msgstr "Gazelle用来作为快速Perl网站服务器。"

#: ../../content/installation-docker.rst:21
#, fuzzy
msgid ""
"Service *nginx*: Nginx is used as optional reverse proxy for HTTPS support."
msgstr "nginx作为HTTPS支持的可选网络代理。"

#: ../../content/installation-docker.rst:23
#, fuzzy
msgid ""
"We think that this setup is the perfect environment for an OTOBO "
"installation."
msgstr "我们认为这将成为OTOBO安装的最优环境。"

#: ../../content/installation-docker.rst:26
msgid "Requirements"
msgstr "需求"

#: ../../content/installation-docker.rst:28
msgid ""
"The minimal versions of required software, that have been tested, are listed "
"here:"
msgstr "经过测试的所需软件最低版本，请参考下面列表："

#: ../../content/installation-docker.rst:30
msgid "Docker 19.03.13"
msgstr "Docker 19.03.08"

#: ../../content/installation-docker.rst:31
msgid "Docker Compose 1.25.0"
msgstr "DockerCompose 1.25.0"

#: ../../content/installation-docker.rst:32
msgid "Git 2.17.1"
msgstr "Git 2.25.1"

#: ../../content/installation-docker.rst:36
msgid ""
"To get the required minimal versions on Ubuntu 18.04 follow the instructions "
"in https://www.digitalocean.com/community/tutorials/how-to-install-docker-"
"compose-on-ubuntu-18-04 and https://www.digitalocean.com/community/tutorials/"
"how-to-install-and-use-docker-on-ubuntu-18-04."
msgstr ""
"要得到所需的Ubuntu18.04最低版本，请按照https://www.digitalocean.com/"
"community/tutorials/how-to-install-docker-compose-on-ubuntu-18-04和https://"
"wwwdigitalocean.com/community/tutorials/how-to-install-and-use-docker-on-"
"ubuntu-18-04中的说明进行操作。"

#: ../../content/installation-docker.rst:40
msgid ""
"git, Docker, and Docker Compose can be installed with the standard system "
"tools. Here is an example for installation on Ubuntu 20.04:"
msgstr ""
"可以使用标准系统工具来安装git，Docker和Docker Compose。这是在Ubuntu 20.04上安"
"装的示例："

#: ../../content/installation-docker.rst:48
msgid ""
"Please check the Git and the Docker documentation for instructions on "
"further setup."
msgstr "请查看Git和Docker文档，得到更多步骤的说明。"

#: ../../content/installation-docker.rst:51
msgid "Installation"
msgstr "安装"

#: ../../content/installation-docker.rst:53
msgid ""
"The following instructions assume that all requirements are met, that you "
"have a working Docker environment. We assume here that the user "
"**docker_admin** is used for interacting with Docker. The Docker admin may "
"be either the **root** user of the Docker host or a dedicated user with the "
"required permissions."
msgstr ""
"下面的介绍是在假设所有需要的系统都已经安装，并且你已经有了一个工作的Docker环"
"境。我们假设用户**root**被用来和Docker互动，请注意针对一个生产环境，需要有一"
"个专用用户作为Docker管理员。"

#: ../../content/installation-docker.rst:58
msgid "1. Clone the otobo-docker repo"
msgstr "1.  克隆otobo-docker存储"

#: ../../content/installation-docker.rst:60
#, fuzzy
msgid ""
"The Docker images will eventually be fetched from the repository https://hub."
"docker.com. But there are some setup and command files that need to be "
"cloned from the *otobo-docker* Github repository. Make sure that you specify "
"the branch that corresponds to the current version of OTOBO. For example, "
"when *OTOBO 10.0.15* is the current version then please use the branch "
"*rel-10_0*."
msgstr ""
"Docker映像最终将从https://hub.docker.com获取，但是需要从otobo-docker Github存"
"储库中克隆一些设置和命令文件。请确保使用这些文件的合适版本，其中git标签必须对"
"应OTOBO的版本，这里以OTOBO 10.0.4为例。"

#: ../../content/installation-docker.rst:67
msgid ""
"The location of the cloned repository does not matter. For these "
"instructions we chose */opt/otobo-docker* as the working dir."
msgstr ""
"克隆副本的位置并不重要，在介绍中我们选择 */opt/otobo-docker*作为工作目录。"

#: ../../content/installation-docker.rst:77
msgid "2. Create an initial *.env* file"
msgstr "2. 创建初始*.env*文件"

#: ../../content/installation-docker.rst:79
#, fuzzy
msgid ""
"The Docker Compose configuration file *.env* is your primary interface for "
"managing your installation of OTOBO. This file must first be created and "
"then be adapted by yourself. In order to simplify the task there are several "
"example files that should be used as starting point. Which sample file it "
"the best fit depends on your use case. In most cases the decision is between "
"*.docker_compose_env_http* and *.docker_compose_env_https*, depending on "
"whether TLS must be supported or not. The other files are for more "
"specialised use cases."
msgstr ""
"Docker Compose配置文件* .env *让你可以管理OTOBO的安装。你必须先创建此文件，然"
"后根据情况修改。为了简化工作，这里有两个示例文件可以作为起始点。如果要通过"
"HTTPS访问OTOBO Web应用程序，请使用* .docker_compose_env_https *，我们建议使用"
"HTTPS进行访问操作。如果不需要HTTPS，可以使用* .docker_compose_env_http *作为"
"起点。"

#: ../../content/installation-docker.rst:87
#, fuzzy
msgid ".docker_compose_env_http"
msgstr "*.docker_compose_env_http*"

#: ../../content/installation-docker.rst:87
msgid "The OTOBO web app provides HTTP."
msgstr ""

#: ../../content/installation-docker.rst:90
#, fuzzy
msgid ".docker_compose_env_https"
msgstr "*.docker_compose_env_https*"

#: ../../content/installation-docker.rst:90
msgid ""
"The OTOBO web app provides HTTPS by runnning Nginx as a reverse proxy "
"webserver."
msgstr ""

#: ../../content/installation-docker.rst:93
#, fuzzy
msgid ".docker_compose_env_https_custom_nginx"
msgstr "*.docker_compose_env_https*"

#: ../../content/installation-docker.rst:93
msgid ""
"Like *.docker_compose_env_https* but with support for a custom Nginx "
"configuration."
msgstr ""

#: ../../content/installation-docker.rst:96
#, fuzzy
msgid ".docker_compose_env_https_kerberos"
msgstr "*.docker_compose_env_https*"

#: ../../content/installation-docker.rst:96
msgid ""
"Like *.docker_compose_env_https* but with sample setup for single sign on. "
"Note that Kerberos support is still **experimental**."
msgstr ""

#: ../../content/installation-docker.rst:99
msgid ""
".docker_compose_env_http_selenium and .docker_compose_env_https_selenium"
msgstr ""

#: ../../content/installation-docker.rst:99
msgid "These are used only for development when Selenium testing is activated."
msgstr ""

#: ../../content/installation-docker.rst:103
#, fuzzy
msgid "Use ``ls -a`` for listing the hidden sample files."
msgstr "用``ls -a`` 列出隐藏的模板文件。"

#: ../../content/installation-docker.rst:105
msgid ""
"Per default OTOBO is served on the standard ports. Port 443 for HTTPS and "
"port 80 for HTTP. When HTTPS is activated then the OTOBO web application "
"actually still runs with HTTP. HTTPS support is achieved by an additional "
"reverse proxy, which is implemented as a nginx service."
msgstr ""
"默认情况下，OTOBO在标准端口上提供， HTTPS的端口443和端口80。激活HTTPS后，"
"OTOBO Web应用程序实际上始终使用HTTP运行。 HTTPS的支持通过另外的反向代理来实"
"现，该代理通过nginx服务实现。"

#: ../../content/installation-docker.rst:109
msgid "For the following commands we assume that HTTPS should be supported."
msgstr "我们假定以下命令都支持HTTPS。"

#: ../../content/installation-docker.rst:117
msgid "3. Configure the password for the database admin user"
msgstr "3. 为数据库管理员用户设置密码"

#: ../../content/installation-docker.rst:119
msgid "Change the following setting inside your *.env* file:"
msgstr "调整*.env*文件中的以下数值："

#: ../../content/installation-docker.rst:121
#, fuzzy
msgid "``OTOBO_DB_ROOT_PASSWORD=<your_secret_password>``"
msgstr "``OTOBO_DB_ROOT_PASSWORD``"

#: ../../content/installation-docker.rst:123
msgid ""
"The password for the database admin user may be chosen freely. The database "
"admin user is needed to create the database user **otobo** and the database "
"schema **otobo**. OTOBO will actually use the dedicated database user "
"**otobo**."
msgstr ""
"``OTOBO_DB_ROOT_PASSWORD``数据库管理员的密码可以自由选择，数据库管理员创建了"
"数据库用户**otobo**和数据库模式**otobo**。"

#: ../../content/installation-docker.rst:128
msgid ""
"4. Set up a volume with SSL configuration for the nginx webproxy (optional)"
msgstr "4. 为nginx网络代理建立一个带有SSL设置的卷（可选）"

#: ../../content/installation-docker.rst:130
msgid "This step can be skipped when OTOBO should be available only via HTTP."
msgstr "如果OTOBO只能通过HTTP进行，这个步骤就可以跳过。"

#: ../../content/installation-docker.rst:132
msgid "nginx needs for SSL encryption a certificate and a private key."
msgstr "nginx需要SSL加密的证书和私钥。"

#: ../../content/installation-docker.rst:136
msgid ""
"For testing and development a self-signed certificate can be used. However "
"for productive use you should work with regular registered certificates."
msgstr ""
"为了进行测试和开发，可以使用自签名证书。在一般情况下，必须使用注册证书。"

#: ../../content/installation-docker.rst:139
msgid ""
"See e.g. https://www.digitalocean.com/community/tutorials/how-to-create-a-"
"self-signed-ssl-certificate-for-nginx-in-ubuntu-18-04 on how to create self-"
"signed certificates."
msgstr ""
"参考<https://www.digitalocean.com/community/tutorials/how-to-create-a-self-"
"signed-ssl-certificate-for-nginx-in-ubuntu-18-04>`中的案例，如何创建自己签名"
"的证书。"

#: ../../content/installation-docker.rst:144
msgid ""
"To specify a CA chain with a certificate in nginx, it is necessary to copy "
"the CA chain file with the actual certificate into a file."
msgstr ""
"在nginx中指定一个带有证书的CA链，需要将这个带有实际证书的CA链文件考入一个文件"
"中去。"

#: ../../content/installation-docker.rst:147
msgid ""
"The certificate and the private key are stored in a volume, so that they can "
"be used by nginx later on. In any case the volume needs to be generated "
"manually, and we need to copy the certificate and key to the volume:"
msgstr ""
"证书和私钥存储在一个卷中，以便以后Nginx使用，在任何情况下，都需要手动生成该"
"卷，并且需要将证书和密钥复制到该卷："

#: ../../content/installation-docker.rst:157
msgid ""
"The names of the copied files need to be set in our newly created *.env* "
"file. E.g."
msgstr "需要在我们新创建的* .env *文件中设置复制文件的名称，例如。"

#: ../../content/installation-docker.rst:159
#, fuzzy
msgid ""
"``OTOBO_NGINX_SSL_CERTIFICATE=/etc/nginx/ssl/ssl-cert.crt`` and "
"``OTOBO_NGINX_SSL_CERTIFICATE_KEY=/etc/nginx/ssl/ssl-key.key``"
msgstr ""
"``OTOBO_NGINX_SSL_CERTIFICATE=/etc/nginx/ssl/ssl-cert.crt`` "
"``OTOBO_NGINX_SSL_CERTIFICATE_KEY=/etc/nginx/ssl/ssl-key.key``"

#: ../../content/installation-docker.rst:162
msgid ""
"Please adapt only the name of the files as the path */etc/nginx/ssl/* is "
"hard coded in the Docker image."
msgstr ""
"请仅调整文件名，因为路径* / etc / nginx / ssl / *在Docker映像中是硬编码的。"

#: ../../content/installation-docker.rst:165
msgid "5. Start the Docker containers with Docker Compose"
msgstr "安装应用 Docker和Docker Compose"

#: ../../content/installation-docker.rst:167
#, fuzzy
msgid ""
"Now we start the Docker containers using ``docker-compose``. Per default the "
"Docker images will be fetched from https://hub.docker.com/u/rotheross."
msgstr ""
"现在我们使用``docker-compose``启动Docker容器。默认情况下，将从https://hub."
"docker.com/u/rotheross获取Docker映像。"

#: ../../content/installation-docker.rst:174
msgid ""
"To verify that the six required services (five in the case of HTTP only) are "
"actually running, type:"
msgstr "在使用HTTP的情况下，要验证六个或五个服务是否正在实际运行，请输入："

#: ../../content/installation-docker.rst:182
msgid "6. Install and start OTOBO"
msgstr "6. 安装和启动OTOBO"

#: ../../content/installation-docker.rst:184
msgid "Run the OTOBO installer at http://yourIPorFQDN/otobo/installer.pl."
msgstr "在http：//yourIPorFQDN/otobo/installer.pl中运行OTOBO安装程序。"

#: ../../content/installation-docker.rst:188
#, fuzzy
msgid ""
"Please configure OTOBO inside the installer with a new MySQL database. As "
"MySQL database root password please use the password you configured in the "
"variable ``OTOBO_DB_ROOT_PASSWORD`` of your *.env* file. Please leave the "
"value ``db`` for the MySQL hostname untouched."
msgstr ""
"请使用新的MySQL数据库在安装程序中配置OTOBO。作为MySQL数据库的根密码，请使用您"
"在* .env *文件的变量``OTOBO_DB_ROOT_PASSWORD''中配置的密码。请保持MySQL主机名"
"的``db''值不变。"

#: ../../content/installation-docker.rst:193
msgid "**Have fun with OTOBO!**"
msgstr "**与OTOBO玩得开心吧！**"

#: ../../content/installation-docker.rst:197
#, fuzzy
msgid ""
"To change to the OTOBO directory, inside the running container, to work on "
"command line as usual, you can use the following Docker command: ``docker-"
"compose exec web bash``."
msgstr ""
"要切换到运行容器内的OTOBO目录，以便正常在命令行下工作，可以使用以下Docker命"
"令：``docker exec -it otobo_web_1 bash``。"

#: ../../content/installation-docker.rst:201
msgid "Additional technical information"
msgstr "附加技术信息"

#: ../../content/installation-docker.rst:203
msgid ""
"This section gives some more technical insight into what is happing under "
"the hood."
msgstr "本节对隐含的内容提供了更多的技术见解。"

#: ../../content/installation-docker.rst:206
msgid "List of Docker containers"
msgstr "Docker容器列表"

#: ../../content/installation-docker.rst:209
msgid "Container otobo_web_1"
msgstr "容器otobo_web_1"

#: ../../content/installation-docker.rst:209
msgid "OTOBO webserver on internal port 5000."
msgstr "内部端口5000上的OTOBO Web服务器。"

#: ../../content/installation-docker.rst:212
msgid "Container otobo_daemon_1"
msgstr "容器otobo_daemon_1"

#: ../../content/installation-docker.rst:212
msgid "OTOBO daemon. The OTOBO daemon is started and periodically checked."
msgstr "OTOBO守护程序。 OTOBO守护程序已启动并定期检查。"

#: ../../content/installation-docker.rst:215
msgid "Container otobo_db_1"
msgstr "容器otobo_db_1"

#: ../../content/installation-docker.rst:215
msgid "Run the database MariaDB on internal port 3306."
msgstr "在内部端口3306上运行数据库MariaDB。"

#: ../../content/installation-docker.rst:218
msgid "Container otobo_elastic_1"
msgstr "容器otobo_elastic_1"

#: ../../content/installation-docker.rst:218
msgid "Elasticsearch on the internal ports 9200 and 9300."
msgstr "在内部端口9200和9300上运行Elasticsearch。"

#: ../../content/installation-docker.rst:221
msgid "Container otobo_redis_1"
msgstr "容器otobo_redis_1"

#: ../../content/installation-docker.rst:221
msgid "Run Redis as caching service."
msgstr "将Redis作为缓存服务运行。"

#: ../../content/installation-docker.rst:224
msgid "Optional container otobo_nginx_1"
msgstr "可选容器otobo_nginx_1"

#: ../../content/installation-docker.rst:224
msgid "Run nginx as reverse proxy for providing HTTPS support."
msgstr "运行nginx作为反向代理以提供HTTPS支持。"

#: ../../content/installation-docker.rst:227
msgid "Overview over the Docker volumes"
msgstr "Docker卷概述"

#: ../../content/installation-docker.rst:229
msgid ""
"The Docker volumes are created on the host for persistent data. These allow "
"starting and stopping the services without losing data. Keep in mind that "
"containers are temporary and only data in the volumes is permanent."
msgstr ""
"Docker卷是在主机上创建的，用于持久性数据。这些允许启动和停止服务而不会丢失数"
"据。请记住，容器是临时的，只有卷中的数据是永久的。"

#: ../../content/installation-docker.rst:234
msgid "otobo_opt_otobo"
msgstr "otobo_opt_otobo"

#: ../../content/installation-docker.rst:234
#, fuzzy
msgid "contains */opt/otobo* in the container **web** and **daemon**."
msgstr "容器 `web` 和 `daemon`中包含`/opt/otobo` 。"

#: ../../content/installation-docker.rst:237
msgid "otobo_mariadb_data"
msgstr "otobo_mariadb_data"

#: ../../content/installation-docker.rst:237
#, fuzzy
msgid "contains */var/lib/mysql* in the container **db**."
msgstr "容器`db`包含`/var/lib/mysql`。"

#: ../../content/installation-docker.rst:240
msgid "otobo_elasticsearch_data"
msgstr "otobo_elasticsearch_data"

#: ../../content/installation-docker.rst:240
#, fuzzy
msgid "contains */usr/share/elasticsearch/datal* in the container **elastic**."
msgstr "容器`elastic`包含`/usr/share/elasticsearch/datal`。"

#: ../../content/installation-docker.rst:243
msgid "otobo_redis_data"
msgstr "otobo_redis_data"

#: ../../content/installation-docker.rst:243
msgid "contains data for the container `redis`."
msgstr "包含容器“ redis”的数据。"

#: ../../content/installation-docker.rst:246
msgid "otobo_nginx_ssl"
msgstr "otobo_nginx_ssl"

#: ../../content/installation-docker.rst:246
msgid ""
"contains the TLS files, certificate and private key, must be initialized "
"manually."
msgstr "包含TLS文件，证书和私钥，必须手动初始化。"

#: ../../content/installation-docker.rst:249
msgid "Docker environment variables"
msgstr "Docker环境变量"

#: ../../content/installation-docker.rst:251
#, fuzzy
msgid ""
"In the instructions we did only minimal configuration. But the file *.env* "
"allows to set more variables. Here is a short list of the most important "
"environment variables. Note that more environment variables are supported by "
"the base images."
msgstr ""
"在说明中，我们仅进行了最少的配置。但是文件* .env *允许设置更多变量。这是所有"
"支持的环境变量的列表："

#: ../../content/installation-docker.rst:255
msgid "**MariaDB settings**"
msgstr "**MariaDB设置**"

#: ../../content/installation-docker.rst:258
#, fuzzy
msgid "OTOBO_DB_ROOT_PASSWORD"
msgstr "``OTOBO_DB_ROOT_PASSWORD``"

#: ../../content/installation-docker.rst:258
#, fuzzy
msgid ""
"The root password for MariaDB. This setting is required for running the "
"service *db*."
msgstr "MySQL的根密码。必须设置为运行otobo db。"

#: ../../content/installation-docker.rst:260
msgid "**Elasticsearch settings**"
msgstr "**Elasticsearch设置**"

#: ../../content/installation-docker.rst:262
msgid ""
"Elasticsearch needs some settings for productive environments. Please read "
"https://www.elastic.co/guide/en/elasticsearch/reference/7.8/docker."
"html#docker-prod-prerequisites for detailed information."
msgstr ""
"Elasticsearch需要在生产环境中进行一些设置。请阅读https://www.elastic.co/"
"guide/zh-CN/elasticsearch/reference/7.8/docker.html#docker-prod-prerequisites"
"了解详细信息。"

#: ../../content/installation-docker.rst:269
#, fuzzy
msgid "OTOBO_Elasticsearch_ES_JAVA_OPTS"
msgstr "``OTOBO_Elasticsearch_ES_JAVA_OPTS``"

#: ../../content/installation-docker.rst:267
msgid ""
"Example setting: *OTOBO_Elasticsearch_ES_JAVA_OPTS=-Xms512m -Xmx512m* Please "
"adjust this value for production env to a value up to 4g."
msgstr ""
"设置案例：* OTOBO_Elasticsearch_ES_JAVA_OPTS = -Xms512m -Xmx512m *，在生产环"
"境中，请将该值提高为4G。"

#: ../../content/installation-docker.rst:271
msgid "**Webserver settings**"
msgstr "**Webserver设置**"

#: ../../content/installation-docker.rst:275
#: ../../content/installation-docker.rst:283
#, fuzzy
msgid "OTOBO_WEB_HTTP_PORT"
msgstr "``OTOBO_WEB_HTTP_PORT``"

#: ../../content/installation-docker.rst:274
msgid ""
"Set in case the HTTP port should deviate from the standard port 80. When "
"HTTPS is enabled, the HTTP port will redirect to HTTPS."
msgstr "设置以防HTTP端口偏离标准端口80。启用HTTPS时，HTTP端口将重定向到HTTPS。"

#: ../../content/installation-docker.rst:277
#, fuzzy
msgid "**Nginx webproxy settings**"
msgstr "**nginx网络代理设置**"

#: ../../content/installation-docker.rst:279
msgid "These setting are used when HTTPS is enabled."
msgstr "这些设置在启用HTTPS时使用。"

#: ../../content/installation-docker.rst:282
msgid ""
"Set in case the HTTP port should deviate from the standard port 80. Will "
"redirect to HTTPS."
msgstr "设置以防HTTP端口偏离标准端口80。将重定向到HTTPS。"

#: ../../content/installation-docker.rst:286
#, fuzzy
msgid "OTOBO_WEB_HTTPS_PORT"
msgstr "``OTOBO_WEB_HTTPS_PORT``"

#: ../../content/installation-docker.rst:286
msgid "Set in case the HTTPS port should deviate from the standard port 443."
msgstr "设置以防HTTPS端口偏离标准端口443。"

#: ../../content/installation-docker.rst:290
#: ../../content/installation-docker.rst:361
#, fuzzy
msgid "OTOBO_NGINX_SSL_CERTIFICATE"
msgstr "``OTOBO_NGINX_SSL_CERTIFICATE``"

#: ../../content/installation-docker.rst:289
msgid ""
"SSL cert for the nginx webproxy. Example: *OTOBO_NGINX_SSL_CERTIFICATE=/etc/"
"nginx/ssl/acme.crt*"
msgstr ""
"Nginx Webproxy的SSL证书。例如：* OTOBO_NGINX_SSL_CERTIFICATE = / etc / "
"nginx / ssl / acme.crt *"

#: ../../content/installation-docker.rst:294
#: ../../content/installation-docker.rst:364
#, fuzzy
msgid "OTOBO_NGINX_SSL_CERTIFICATE_KEY"
msgstr "``OTOBO_NGINX_SSL_CERTIFICATE_KEY``"

#: ../../content/installation-docker.rst:293
msgid ""
"SSL key for the nginx webproxy. Example: *OTOBO_NGINX_SSL_CERTIFICATE_KEY=/"
"etc/nginx/ssl/acme.key*"
msgstr ""
"Nginx Webproxy的SSL密钥。例如：* OTOBO_NGINX_SSL_CERTIFICATE_KEY = / etc / "
"nginx / ssl / acme.key *"

#: ../../content/installation-docker.rst:296
#, fuzzy
msgid "**Nginx webproxy settings for Kerberos**"
msgstr "**nginx网络代理设置**"

#: ../../content/installation-docker.rst:298
msgid ""
"This settings are used by Nginx when Kerberos is used for single sign on."
msgstr ""

#: ../../content/installation-docker.rst:301
#, fuzzy
msgid "OTOBO_NGINX_KERBEROS_KEYTAB"
msgstr "``OTOBO_WEB_HTTP_PORT``"

#: ../../content/installation-docker.rst:301
msgid "Kerberos keytab file. The default is */etc/krb5.keytab*."
msgstr ""

#: ../../content/installation-docker.rst:304
#, fuzzy
msgid "OTOBO_NGINX_KERBEROS_CONFIG"
msgstr "``OTOBO_WEB_HTTP_PORT``"

#: ../../content/installation-docker.rst:304
msgid ""
"Kerberos config file. The default is */etc/krb5.conf*, usually generated "
"from *krb5.conf.template*"
msgstr ""

#: ../../content/installation-docker.rst:307
#, fuzzy
msgid "OTOBO_NGINX_KERBEROS_SERVICE_NAME"
msgstr "``OTOBO_NGINX_SSL_CERTIFICATE``"

#: ../../content/installation-docker.rst:307
msgid ""
"Kerberos Service Name. It is not clear where this setting is actually used "
"anywhere."
msgstr ""

#: ../../content/installation-docker.rst:310
#, fuzzy
msgid "OTOBO_NGINX_KERBEROS_REALM"
msgstr "``OTOBO_WEB_HTTP_PORT``"

#: ../../content/installation-docker.rst:310
msgid "Kerberos REALM. Used in */etc/krb5.conf*."
msgstr ""

#: ../../content/installation-docker.rst:313
#, fuzzy
msgid "OTOBO_NGINX_KERBEROS_KDC"
msgstr "``OTOBO_WEB_HTTP_PORT``"

#: ../../content/installation-docker.rst:313
msgid "Kerberos kdc / AD Controller. Used in */etc/krb5.conf*."
msgstr ""

#: ../../content/installation-docker.rst:316
#, fuzzy
msgid "OTOBO_NGINX_KERBEROS_ADMIN_SERVER"
msgstr "``OTOBO_WEB_HTTP_PORT``"

#: ../../content/installation-docker.rst:316
msgid "Kerberos Admin Server. Used in */etc/krb5.conf*."
msgstr ""

#: ../../content/installation-docker.rst:319
#, fuzzy
msgid "OTOBO_NGINX_KERBEROS_DEFAULT_DOMAIN"
msgstr "``OTOBO_WEB_HTTP_PORT``"

#: ../../content/installation-docker.rst:319
msgid "Kerberos Default Domain. Used in */etc/krb5.conf*."
msgstr ""

#: ../../content/installation-docker.rst:322
msgid "NGINX_ENVSUBST_TEMPLATE_DIR"
msgstr ""

#: ../../content/installation-docker.rst:322
msgid "Provide a custom Nginx config template dir. Gives extra flexibility."
msgstr ""

#: ../../content/installation-docker.rst:324
msgid "**Docker Compose settings**"
msgstr "**docker-compose设置**"

#: ../../content/installation-docker.rst:326
msgid "These settings are used by Docker Compose directly."
msgstr "这些设置由docker-compose直接使用。"

#: ../../content/installation-docker.rst:331
#, fuzzy
msgid "COMPOSE_PROJECT_NAME"
msgstr "``COMPOSE_PROJECT_NAME``"

#: ../../content/installation-docker.rst:329
msgid ""
"The project name is used as the prefix for the volumes and containers. Per "
"default this prefix is set to `otobo`, resulting in container names like "
"`otobo_web_1` and `otobo_db_1`. Change this name when you want to run more "
"then one instance of OTOBO on the same server."
msgstr ""

#: ../../content/installation-docker.rst:334
#, fuzzy
msgid "COMPOSE_PATH_SEPARATOR"
msgstr "``COMPOSE_PATH_SEPARATOR``"

#: ../../content/installation-docker.rst:334
msgid "Separator for the value of COMPOSE_FILE"
msgstr "COMPOSE_FILE数值的分隔符"

#: ../../content/installation-docker.rst:338
#, fuzzy
msgid "COMPOSE_FILE"
msgstr "``COMPOSE_FILE``"

#: ../../content/installation-docker.rst:337
msgid ""
"Use *docker-compose/otobo-base.yml* as the base and add the wanted extension "
"files. E.g *docker-compose/otobo-override-http.yml* or *docker-compose/otobo-"
"override-https.yml*."
msgstr ""
"使用* docker-compose / otobo-base.yml *作为基础，并添加所需的扩展文件。例如* "
"docker-compose / otobo-override-http.yml *或* docker-compose / otobo-"
"override-https.yml *。"

#: ../../content/installation-docker.rst:341
#, fuzzy
msgid ""
"OTOBO_IMAGE_OTOBO, OTOBO_IMAGE_OTOBO_ELASTICSEARCH, "
"OTOBO_IMAGE_OTOBO_NGINX, ..."
msgstr ""
"``OTOBO_IMAGE_OTOBO``, ``OTOBO_IMAGE_OTOBO_ELASTICSEARCH``, "
"``OTOBO_IMAGE_OTOBO_NGINX``"

#: ../../content/installation-docker.rst:341
#, fuzzy
msgid ""
"Used for specifying alternative Docker images. Useful for testing local "
"builds or for using updated versions of the images."
msgstr "用于指定备用Docker映像，这对测试本地版本很有用。"

#: ../../content/installation-docker.rst:344
msgid "Advanced topics"
msgstr "进阶主题"

#: ../../content/installation-docker.rst:347
msgid "Custom configuration of the nginx webproxy"
msgstr "Nginx网络代理的自定义配置"

#: ../../content/installation-docker.rst:349
msgid ""
"The container ``otobo_nginx_1`` provides HTTPS support by running Nginx as a "
"reverse proxy. The Docker image that runs in the container is composed of "
"the official Nginx Docker image, https://hub.docker.com/_/nginx, along with "
"a OTOBO specific configuration of Nginx."
msgstr ""

#: ../../content/installation-docker.rst:354
#, fuzzy
msgid ""
"The default OTOBO specific configuration can be found within the Docker "
"image at */etc/nginx/template/otobo_nginx.conf.template*. Actually, this is "
"only a template for the final configuration. There is a process, provided by "
"the Nginx base image, that replaces the macros in the template with the "
"corresponding environment variable. This process runs when the container "
"starts up. In the default template file, the following macros are used:"
msgstr ""
"基于Docker的默认OTOBO安装提供了容器otobo_nginx_1，为基于HTTP的OTOBO Web应用程"
"序提供HTTPS支持。 nginx的默认配置模板可以在Docker映像中找到，特别是在文件* / "
"etc / nginx / template / otobo_nginx.conf.template *中。启动容器后，将从模板"
"生成实际使用的配置文件。这是通过用相应的环境变量替换模板中的每个宏来完成的。"
"在默认模板文件中，仅使用以下宏：*`$ {OTOBO_NGINX_SSL_CERTIFICATE}`*`$ "
"{OTOBO_NGINX_SSL_CERTIFICATE_KEY} *`$ {OTOBO_NGINX_WEB_HOST}`*`$ "
"{OTOBO_NGINX_WEB_PORT}`"

#: ../../content/installation-docker.rst:361
#: ../../content/installation-docker.rst:364
msgid "For configuring SSL."
msgstr ""

#: ../../content/installation-docker.rst:367
#, fuzzy
msgid "OTOBO_NGINX_WEB_HOST"
msgstr "``OTOBO_WEB_HTTP_PORT``"

#: ../../content/installation-docker.rst:367
msgid "The internally used HTTP host."
msgstr ""

#: ../../content/installation-docker.rst:370
#, fuzzy
msgid "OTOBO_NGINX_WEB_PORT"
msgstr "``OTOBO_WEB_HTTP_PORT``"

#: ../../content/installation-docker.rst:370
msgid "The internally used HTTP port."
msgstr ""

#: ../../content/installation-docker.rst:372
msgid ""
"See step `4.` for how this configuration possibility was used for setting up "
"the SSL certificate."
msgstr ""

#: ../../content/installation-docker.rst:376
msgid "The following approach is only supported in OTOBO 10.0.4 or later."
msgstr "只有OTOBO 10.0.4或更高版本支持以下方法。"

#: ../../content/installation-docker.rst:378
msgid ""
"When the standard macros are not sufficient, then the customisation can go "
"further. This can be achieved by replacing the default config template with "
"a customized version. It is best practice to not simple change the "
"configuration in the running container. Instead we first create a persistent "
"volume that contains the custom config. Then we tell the *otobo_nginx_1* to "
"mount the new volume and to use the customized configuration."
msgstr ""

#: ../../content/installation-docker.rst:383
msgid ""
"First comes generation of the new volume. In these sample commands, we use "
"the existing template as a starting point."
msgstr ""

#: ../../content/installation-docker.rst:410
msgid ""
"Your adapted nginx configuration usually contains the directive **listen**, "
"which declares the ports of the webserver. The internally used ports have "
"changed between OTOBO 10.0.3 and OTOBO 10.0.4. This change must be reflected "
"in the adapted nginx configuration. So for version 10.0.3 or earlier listen "
"to the ports 80 and 443. For OTOBO 10.0.4 listen to the ports 8080 and 8443."
msgstr ""
"调整后的Nginx配置通常包含指令** listen **，以明确Web服务器的端口。在OTOBO "
"10.0.3和OTOBO 10.0.4两个版本中，内部使用的端口有所变化。这个变化必须体现在调"
"整后的nginx配置中。因此，对于10.0.3或更早版本，请使用端口80和443。对于OTOBO "
"10.0.4，请使用端口8080和8443。"

#: ../../content/installation-docker.rst:415
msgid ""
"After setting up the volume, the adapted configuration must be activated. "
"The new volume is set up in *docker-compose/otobo-nginx-custom-config.yml*. "
"Therefore this file must be added to **COMPOSE_FILE**. Then Nginx must be "
"directed to use the new config. This is done by setting "
"**NGINX_ENVSUBST_TEMPLATE_DIR** in the environment. In order to achieve "
"this, uncomment or add the following lines in your *.env* file:"
msgstr ""

#: ../../content/installation-docker.rst:425
msgid "The changed Docker Compose configuration can be inspected with:"
msgstr "更改后的Docker Compose配置可以通过以下方式进行检查："

#: ../../content/installation-docker.rst:431
msgid "Finally, the containers can be started again:"
msgstr "最后，可以再次启动容器："

#: ../../content/installation-docker.rst:437
msgid ""
"See also the section \"Using environment variables in nginx configuration "
"(new in 1.19)\" in https://hub.docker.com/_/nginx."
msgstr ""
"另请参见https://hub.docker.com/_/nginx中的“在nginx配置中使用环境变量（1.19中"
"的新功能）”部分。"

#: ../../content/installation-docker.rst:440
msgid "Single Sign On Using the Kerberos Support in Nginx"
msgstr ""

#: ../../content/installation-docker.rst:442
msgid "**Short Description**"
msgstr ""

#: ../../content/installation-docker.rst:444
msgid ""
"For enabling authentication with Kerberos please base you *.env file* on the "
"sample file *.docker_compose_env_https_kerberos*. This activates the special "
"configuration in *docker-compose/otobo-override-https-kerberos.yml*. This "
"Docker compose configuration file selects a Nginx image that supports "
"Kerberos. It also passes some Kerberos specific settings as environment "
"values to the running Nginx container. These settings are listed above."
msgstr ""

#: ../../content/installation-docker.rst:449
msgid ""
"As usual, the values for these setting can be specified in the *.env* file. "
"Most of ghese setting will be used as replacement values for the template  "
"https://github.com/RotherOSS/otobo/blob/rel-10_1/scripts/nginx/kerberos/"
"templates/krb5.conf.template . The replacement takes place during the "
"startup of the container. In the running container the adapted config will "
"be available in */etc/krb5.conf*."
msgstr ""

#: ../../content/installation-docker.rst:453
msgid ""
"Providing an user specific */etc/krb5.conf* file is still possible. This can "
"be done by mounting a volume that overrides */etc/krb5.conf* in the "
"container. This can be achieved by setting OTOBO_NGINX_KERBEROS_CONFIG in "
"the *.env* file and by activating the mount directove in *docker-compose/"
"otobo-override-https-kerberos.yml*."
msgstr ""

#: ../../content/installation-docker.rst:457
msgid ""
"*/etc/krb5.keytab* is always installation specific and must therefore always "
"be mounted from the host system."
msgstr ""

#: ../../content/installation-docker.rst:459
#, fuzzy
msgid "**Kerberos SSO Installation Tutorial**"
msgstr "OTOBO安装教程"

#: ../../content/installation-docker.rst:461
msgid ":doc:`sso-kerberos`"
msgstr ""

#: ../../content/installation-docker.rst:465
msgid "Choosing non-standard ports"
msgstr "选择非标准端口"

#: ../../content/installation-docker.rst:467
msgid ""
"Per default the ports 443 and 80 serve HTTPS and HTTP respectively. There "
"can be cases where one or both of these ports are already used by other "
"services. In these cases the default ports can be overridden by specifying "
"`OTOBO_WEB_HTTP_PORT` and `OTOBO_WEB_HTTPS_PORT` in the *.env* file."
msgstr ""
"默认情况下，端口443和80分别为HTTPS和HTTP服务。在某些情况下，其他服务可能已经"
"使用了这些端口中的一个或两个。在这些情况下，可以通过在* .env *文件中指定"
"`OTOBO_WEB_HTTP_PORT`和`OTOBO_WEB_HTTPS_PORT`来覆盖默认端口。"

#: ../../content/installation-docker.rst:472
msgid "Skip startup of specific services"
msgstr ""

#: ../../content/installation-docker.rst:474
msgid ""
"The current Docker compose setup start five, six when HTTPS is activated, "
"services. But there are valid use cases where one or more of these services "
"are not needed. The prime example is when the database should not run as a "
"Docker service, but as an external database. Unfortunately there is no "
"dedicated Docker compose option for skipping specific services. But the "
"option `--scale` can be abused for this purpose. So for an installation with "
"an external database the following command can be used:"
msgstr ""

#: ../../content/installation-docker.rst:484
msgid ""
"Of course the same goal can also be achieved by editing the file *docker-"
"compose/otobo-base.yml* and removing the relevant service definitions."
msgstr ""

#: ../../content/installation-docker.rst:488
#, fuzzy
msgid "Prepare offline installation"
msgstr "自动安装"

#: ../../content/installation-docker.rst:490
msgid ""
"Please download `the latest version of otobo-docker <https://doc.otobo.org/"
"manual/installation/10.1/en/content/installation-docker.html#clone-the-otobo-"
"docker-repo>`__ on a system that has internet access and where docker is "
"installed. Then navigate to the following folder *otobo-docker/docker-"
"compose*."
msgstr ""

#: ../../content/installation-docker.rst:499
msgid ""
"Now you can run the following command to download all Docker images from a "
"specific file, in my example I use the *otobo-base.yml*."
msgstr ""

#: ../../content/installation-docker.rst:505
msgid ""
"After that, the images (.docker) are located in the docker-compose folder "
"and can be uploaded to the target system via e.g `SCP <https://en.wikipedia."
"org/wiki/Secure_copy_protocol>`__."
msgstr ""

#: ../../content/installation-docker.rst:507
msgid ""
"On the offline target system, go to the folder where the docker images are "
"stored. And enter the following command to import them one by one."
msgstr ""

#: ../../content/installation-docker.rst:509
msgid "In the following example I import the mariadb image:"
msgstr ""

#: ../../content/installation-docker.rst:516
#, fuzzy
msgid "Customizing OTOBO Docker Compose"
msgstr "在Docker情况下"

#: ../../content/installation-docker.rst:518
msgid ""
"Instead of editing the files under *docker-compose/* and risking to "
"overwrite your own options with the `next update <https://doc.otobo.org/"
"manual/installation/10.1/en/content/updating-docker.html#updating-the-docker-"
"compose-files>`_ of the otobo-docker folder, it is advisable to create an "
"extra YAML file where the specific services are overwritten with additional "
"options."
msgstr ""

#: ../../content/installation-docker.rst:522
msgid ""
"A common example would be to make the database container accessible from the "
"outside via port 3306. For this you could create an extra docker compose "
"file thats look like:"
msgstr ""

#: ../../content/installation-docker.rst:533
msgid ""
"Now we have to tell *docker-compose* to include our new file. For this you "
"have to add your YAML file to the *COMPOSE_FILE* variable in the *.env* "
"file, for example:"
msgstr ""

#: ../../content/installation-docker.rst:540
msgid "Now we can use *docker-compose* to recreate our container"
msgstr ""

#: ../../content/installation-docker.rst:547
msgid "With this procedure you can customize any service or volumes."
msgstr ""

#: ../../content/installation-docker.rst:550
#, fuzzy
msgid "Customizing the OTOBO Docker image"
msgstr "在Docker情况下"

#: ../../content/installation-docker.rst:552
msgid ""
"Many customizations can be done in the external volume *otobo_opt_otobo* "
"which corresponds to the directory */opt/otobo* in the Docker image. This "
"works e.g. for local Perl modules which can be installed into */opt/otobo/"
"local*. Here is an example that installs the not very useful CPAN module "
"`Acme::123`."
msgstr ""

#: ../../content/installation-docker.rst:570
msgid ""
"The nice thing of this approach is that the Docker image itself does not "
"have to be modified."
msgstr ""

#: ../../content/installation-docker.rst:572
msgid ""
"Installing extra Debian packages is a little bit trickier. One approach is "
"to create a custom *Dockerfile* and use the OTOBO image as the base image. "
"Another approach is to create a modified image directly from a running "
"container. This can be done with the command `docker commit`, https://docs."
"docker.com/engine/reference/commandline/commit/. A nice writeup of that "
"process is available at https://phoenixnap.com/kb/how-to-commit-changes-to-"
"docker-image."
msgstr ""

#: ../../content/installation-docker.rst:577
msgid ""
"But for the latter approach there are two hurdles to overcome. First, the "
"image *otobo* runs per default as the user *otobo* with the UID 1000. The "
"problem is that the user *otobo* is not allowed to install system packages. "
"Thus, the first part of the solution is to pass the option `--user root` "
"when running the image. However the second hurdle is that the default "
"entrypoint script */opt/otobo_install/entrypoint.sh* exits immediately when "
"it is called as *root*. The reasoning behind that design decision is that "
"running inadvertently as *root* should be discouraged. So, the second part "
"of the solution is to specify a different entrypoint script that does not "
"care who the caller is. This leaves us with following example commands, "
"where we add fortune cookies to otobo:"
msgstr ""

#: ../../content/installation-docker.rst:586
msgid ""
"Pull a tagged OTOBO image, if we don't have it yet, and check whether the "
"image already provides fortune cookies:"
msgstr ""

#: ../../content/installation-docker.rst:593
msgid ""
"Add fortune cookies to a named container running the original OTOBO image. "
"This is done in an interactive session as the user *root*:"
msgstr ""

#: ../../content/installation-docker.rst:604
msgid ""
"Create an image from the stopped container and give it a name. Take into "
"account that the default user and entrypoint script must be restored:"
msgstr ""

#: ../../content/installation-docker.rst:611
msgid "Finally we can doublecheck:"
msgstr ""

#: ../../content/installation-docker.rst:620
msgid ""
"The modified image can be specified in your *.env* file and then be used for "
"fun and profit."
msgstr ""

#: ../../content/installation-docker.rst:623
msgid "Building local images"
msgstr "创建本地镜像"

#: ../../content/installation-docker.rst:627
#, fuzzy
msgid ""
"Building Docker images locally is usually only needed during development. "
"Other use cases are when more current base images should be used for an "
"installation or when extra functionality must be added to the images."
msgstr "通常仅在开发期间才需要在本地构建Docker映像。"

#: ../../content/installation-docker.rst:631
#, fuzzy
msgid ""
"The Docker files needed for creating Docker images locally are part of the "
"the git repository https://github.com/RotherOSS/otobo:"
msgstr ""
"在本地创建Docker映像所需的文件是git存储库https://github.com/RotherOSS/otobo的"
"一部分："

#: ../../content/installation-docker.rst:633
msgid "*otobo.web.dockerfile*"
msgstr "*otobo.web.dockerfile*"

#: ../../content/installation-docker.rst:634
msgid "*otobo.nginx.dockerfile*"
msgstr "*otobo.nginx.dockerfile*"

#: ../../content/installation-docker.rst:635
msgid "*otobo.elasticsearch.dockerfile*"
msgstr "*otobo.elasticsearch.dockerfile*"

#: ../../content/installation-docker.rst:637
msgid ""
"The script for the actual creation of the images is *bin/docker/"
"build_docker_images.sh*."
msgstr ""

#: ../../content/installation-docker.rst:649
msgid ""
"The locally built Docker images are tagged as ``local-<OTOBO_VERSION>`` "
"using the version set up the file *RELEASE*."
msgstr ""

#: ../../content/installation-docker.rst:651
#, fuzzy
msgid ""
"After building the local images, one can return to the *docker-compose* "
"directory. The local images are declared by setting ``OTOBO_IMAGE_OTOBO``, "
"``OTOBO_IMAGE_OTOBO_ELASTICSEARCH``, ``OTOBO_IMAGE_OTOBO_NGINX`` in *.env*."
msgstr ""
"使用设置文件* RELEASE *中的版本，将创建的本地镜像标记为“ local- "
"<OTOOB_VERSION>”。建立本地镜像后，可以通过在* .env *中设置"
"`OTOBO_IMAGE_OTOBO'，`OTOBO_IMAGE_OTOBO_ELASTICSEARCH，"
"`OTOBO_IMAGE_OTOBO_NGINX'来指定要使用的镜像。"

#: ../../content/installation-docker.rst:655
msgid "Automatic Installation"
msgstr "自动安装"

#: ../../content/installation-docker.rst:657
#, fuzzy
msgid ""
"Instead of going through http://yourIPorFQDN/otobo/installer.pl, one can "
"take a short cut. This is useful for running the test suite on a fresh "
"installation."
msgstr ""
"您可以通过捷径来代替http：//yourIPorFQDN/otobo/installer.pl。这对于在全新安装"
"上运行测试套件非常有用。"

#: ../../content/installation-docker.rst:662
msgid "``docker-compose down -v`` will remove all previous setup and data."
msgstr "``docker-compose down -v`` 将清除所有之前的配置和数据。"

#: ../../content/installation-docker.rst:677
msgid "List of useful commands"
msgstr "常用命令列表"

#: ../../content/installation-docker.rst:679
msgid "**Docker**"
msgstr "** Docker **"

#: ../../content/installation-docker.rst:681
#, fuzzy
msgid ""
"``docker system prune -a`` system clean-up (removes all unused images, "
"containers, volumes, networks)"
msgstr ""
"``docker system prune -a`` 系统清理（清除所有未使用的镜像、容器、卷和网络）"

#: ../../content/installation-docker.rst:682
#, fuzzy
msgid "``docker version`` show version"
msgstr "``docker version`` 显示版本"

#: ../../content/installation-docker.rst:683
#, fuzzy
msgid ""
"``docker build --tag otobo --file=otobo.web.Dockerfile .`` build an image"
msgstr ""
"``docker build --tag otobo --file=otobo.web.Dockerfile .`` 创建一个镜像"

#: ../../content/installation-docker.rst:684
#, fuzzy
msgid "``docker run --publish 80:5000 otobo`` run the new image"
msgstr "``docker run --publish 80:5000 otobo``运行新的镜像"

#: ../../content/installation-docker.rst:685
#, fuzzy
msgid ""
"``docker run -it -v opt_otobo:/opt/otobo otobo bash`` log into the new image"
msgstr "``docker run -it -v opt_otobo:/opt/otobo otobo bash`` 登陆新的镜像"

#: ../../content/installation-docker.rst:686
#, fuzzy
msgid ""
"``docker run -it -v opt_otobo:/opt/otobo --entrypoint bash otobo`` try that "
"in case entrypoint.sh is broken"
msgstr ""
"如果entrypoint.sh被破坏了，可以尝试一下 ``docker run -it -v opt_otobo:/opt/"
"otobo --entrypoint bash otobo``"

#: ../../content/installation-docker.rst:687
#, fuzzy
msgid "``docker ps`` show running images"
msgstr "``docker ps`` 显示正在运行的镜像"

#: ../../content/installation-docker.rst:688
#, fuzzy
msgid "``docker images`` show available images"
msgstr "``docker images`` 显示可用的镜像"

#: ../../content/installation-docker.rst:689
#, fuzzy
msgid "``docker volume ls`` list volumes"
msgstr "``docker volume ls``列出卷名"

#: ../../content/installation-docker.rst:690
#, fuzzy
msgid "``docker volume inspect otobo_opt_otobo`` inspect a volume"
msgstr "``docker volume inspect otobo_opt_otobo`` 检查一个卷"

#: ../../content/installation-docker.rst:691
#, fuzzy
msgid ""
"``docker volume inspect --format '{{ .Mountpoint }}' otobo_nginx_ssl`` get "
"volume mountpoint"
msgstr ""
"``docker volume inspect --format '{{ .Mountpoint }}' otobo_nginx_ssl`` 获取卷"
"挂载点"

#: ../../content/installation-docker.rst:692
#, fuzzy
msgid "``docker volume rm tmp_volume`` remove a volume"
msgstr "``docker volume rm tmp_volume``清除一个卷"

#: ../../content/installation-docker.rst:693
#, fuzzy
msgid "``docker inspect <container>`` inspect a container"
msgstr "``docker inspect <container>`` 检查一个容器"

#: ../../content/installation-docker.rst:694
#, fuzzy
msgid ""
"``docker save --output otobo.tar otobo:latest-10_0 && tar -tvf otobo.tar`` "
"list files in an image"
msgstr ""
"``docker save --output otobo.tar otobo:latest && tar -tvf otobo.tar``显示一个"
"镜像中的文件列表"

#: ../../content/installation-docker.rst:695
#, fuzzy
msgid "``docker exec -it nginx-server nginx -s reload`` reload nginx"
msgstr "``docker exec -it nginx-server nginx -s reload`` 重新加载 nginx"

#: ../../content/installation-docker.rst:697
msgid "**Docker Compose**"
msgstr "**docker-compose设置**"

#: ../../content/installation-docker.rst:699
#, fuzzy
msgid "``docker-compose config`` check and show the configuration"
msgstr "``docker-compose config``检查并显示相应配置"

#: ../../content/installation-docker.rst:700
#, fuzzy
msgid "``docker-compose ps`` show the running containers"
msgstr "``docker-compose ps`` 显示正在运行的容器"

#: ../../content/installation-docker.rst:701
#, fuzzy
msgid "``docker-compose exec nginx nginx -s reload`` reload nginx"
msgstr "``docker exec -it nginx-server nginx -s reload`` 重新加载 nginx"

#: ../../content/installation-docker.rst:704
msgid "Resources"
msgstr "资源"

#: ../../content/installation-docker.rst:706
msgid "Finally, here is a highly subjective collection of links."
msgstr ""

#: ../../content/installation-docker.rst:708
msgid "**General info and tutorials**"
msgstr ""

#: ../../content/installation-docker.rst:710
#, fuzzy
msgid ""
"`Perl Maven: Getting Started with Perl on Docker <https://perlmaven.com/"
"getting-started-with-perl-on-docker>`_"
msgstr ""
"`Perl Maven： <https://perlmaven.com/getting-started-with-perl-on-docker>`_"

#: ../../content/installation-docker.rst:711
msgid ""
"`Dockerfile best practices <https://www.docker.com/blog/intro-guide-to-"
"dockerfile-best-practices/>`_"
msgstr ""
"`Dockerfile 最佳实践： <https://www.docker.com/blog/intro-guide-to-"
"dockerfile-best-practices/>`_"

#: ../../content/installation-docker.rst:712
msgid "`Environment <https://vsupalov.com/docker-arg-env-variable-guide/>`_"
msgstr "`环境： <https://vsupalov.com/docker-arg-env-variable-guide/>`_"

#: ../../content/installation-docker.rst:714
msgid "**Tips and hints**"
msgstr ""

#: ../../content/installation-docker.rst:716
msgid ""
"`Newer version of Docker Compose on Ubuntu 18.04 LTS <https://www."
"digitalocean.com/community/tutorials/how-to-install-docker-compose-on-"
"ubuntu-18-04>`_"
msgstr ""
"`在Ubuntu 18.04 LTS上运行的Docker Compose更新版本请参考 <https://www."
"digitalocean.com/community/tutorials/how-to-install-docker-compose-on-"
"ubuntu-18-04>`_"

#: ../../content/installation-docker.rst:717
msgid ""
"`Newer version of Docker on Ubuntu 18.04 LTS <https://www.digitalocean.com/"
"community/tutorials/how-to-install-and-use-docker-on-ubuntu-18-04>`_"
msgstr ""
"`在Ubuntu 18.04 LTS上运行的Docker更新版本请参考 <https://www.digitalocean."
"com/community/tutorials/how-to-install-and-use-docker-on-ubuntu-18-04>`_"

#: ../../content/installation-docker.rst:718
#, fuzzy
msgid ""
"`Clean up unused images <https://forums.docker.com/t/command-to-remove-all-"
"unused-images>`_"
msgstr ""
"`清理： <https://forums.docker.com/t/command-to-remove-all-unused-images>`_"

#: ../../content/installation-docker.rst:719
msgid ""
"`Docker Host IP <https://nickjanetakis.com/blog/docker-tip-65-get-your-"
"docker-hosts-ip-address-from-in-a-container>`_"
msgstr ""
"`Docker主机IP地址： <https://nickjanetakis.com/blog/docker-tip-65-get-your-"
"docker-hosts-ip-address-from-in-a-container>`_"

#: ../../content/installation-docker.rst:720
msgid ""
"`Self signed certificate <https://www.digitalocean.com/community/tutorials/"
"how-to-create-a-self-signed-ssl-certificate-for-nginx-in-ubuntu-18-04>`_"
msgstr ""
"`自己签名的证书：<https://www.digitalocean.com/community/tutorials/how-to-"
"create-a-self-signed-ssl-certificate-for-nginx-in-ubuntu-18-04>`_"

#: ../../content/installation-docker.rst:722
msgid "**Troubleshooting**"
msgstr ""

#: ../../content/installation-docker.rst:724
msgid ""
"`Docker cache invalidation <https://stackoverflow.com/questions/34814669/"
"when-does-docker-image-cache-invalidation-occur>`_"
msgstr ""
"`Docker缓存失效：<https://stackoverflow.com/questions/34814669/when-does-"
"docker-image-cache-invalidation-occur>`_"

#: ../../content/installation-docker.rst:725
msgid ""
"`Using tcpdump <https://rmoff.net/2019/11/29/using-tcpdump-with-docker/>`_"
msgstr ""

#: ../../content/installation-docker.rst:726
msgid ""
"`Inspect failed builds <https://pythonspeed.com/articles/debugging-docker-"
"build/>`_"
msgstr ""
"`检查失败的创建 <https://pythonspeed.com/articles/debugging-docker-build/>`_"

#: ../../content/installing-perl-modules.rst:12
#, fuzzy
msgid "Installing Perl Modules from CPAN"
msgstr "安装Perl模块"

#: ../../content/installing-perl-modules.rst:14
#, fuzzy
msgid ""
"When there are special requirements then the need for additional Perl "
"modules may arise. Fortunately, Perl has an excellent package repository "
"that can satisfy almost all needs. That repository is called CPAN and is "
"available at https://metacpan.org/."
msgstr ""
"如果有特殊要求，则可能需要其他Perl模块。幸运的是，Perl具有出色的软件包存储"
"库，可以满足几乎所有需求。该存储库称为CPAN，可从https://metacpan.org/获得。"

#: ../../content/installing-perl-modules.rst:18
#, fuzzy
msgid ""
"It is recommended to use the command line client ``cpanm`` for installing "
"modules. ``cpanm`` is often already installed on your system. Please see "
"https://metacpan.org/pod/App::cpanminus for what to do when is isn't already "
"available."
msgstr ""
"应用程序``cpanm''通常已经安装在您的系统上，如果没有，请参阅https://metacpan."
"org/pod/App::cpanminus的处理方法。"

#: ../../content/installing-perl-modules.rst:22
#, fuzzy
msgid ""
"Alternatively, many Perl modules are also available as packages for your "
"operating system. These packages can be installed with your systems regular "
"package manager."
msgstr ""
"建议将CPAN中的模块与命令行客户端``cpanm''一起安装。另外，许多Perl模块也可以作"
"为操作系统的软件包使用。可以通过您的系统常规软件包管理器来安装这些软件包。"

#: ../../content/installing-perl-modules.rst:25
#, fuzzy
msgid ""
"Per default ``cpanm`` installs modules into a systemwide location. In this "
"case modules must be installed as the root user. For example, the command"
msgstr ""
"默认情况下，“ cpanm”会将模块安装到系统范围内的位置。在这种情况下，必须以root"
"用户身份安装模块。例如，命令"

#: ../../content/installing-perl-modules.rst:32
msgid "results in:"
msgstr "结果是："

#: ../../content/installing-perl-modules.rst:40
#, fuzzy
msgid "Docker-based installations"
msgstr "可以迁移到基于Docker的OTOBO 10"

#: ../../content/installing-perl-modules.rst:42
#, fuzzy
msgid ""
"Special care must be taken when OTOBO runs under Docker. In this case an "
"installation into a systemwide location would initially work as well. "
"However, due to how Docker works, this installed modules would be lost when "
"the container is restarted. Therefore the modules must be installed into a "
"location that does survive a restart. The directory ``/opt/otobo/local`` "
"within the volume **otobo_opt_otobo** can be used for that. Modules that are "
"installed in ``/opt/otobo/local`` will be picked up by Perl because the "
"environment variables ``PERL5LIB`` and ``PATH`` are preset accordingly."
msgstr ""
"当OTOBO在Docker下运行时，必须格外小心。在这种情况下，所需的模块可以轻松地安装"
"到系统Perl中。但是，由于Docker的工作方式，重新启动容器后，此更改将丢失。因"
"此，必须将模块安装到可以重新启动的位置。本地安装位置可以使用选项--local-lib来"
"指定。 Perl将找到已安装的模块，因为在Docker映像中已相应设置了环境变量“ "
"PERL5LIB”和“ PATH”。"

#: ../../content/installing-perl-modules.rst:49
msgid ""
"The installed Perl modules will also be available after an upgrade of OTOBO. "
"There is the general rule that files added to ``/opt/otobo`` won't be "
"removed by an upgrade."
msgstr ""

#: ../../content/installing-perl-modules.rst:52
msgid ""
"For installing Perl modules in a specific location we need to modify our "
"install command. Specifically, we need to add the option ``--local-lib``. "
"Here is a sample session in the container **web**."
msgstr ""

#: ../../content/introduction.rst:12
msgid "Introduction"
msgstr "介绍"

#: ../../content/introduction.rst:14
#, fuzzy
msgid ""
"OTOBO is an open source ticket request system with many features to manage "
"customer telephone calls and emails. It is distributed under the GNU General "
"Public License (GPL) and is tested on various Linux platforms."
msgstr ""
"OTOBO是一个开放源代码的工单管理系统，具有许多功能来管理客户的电话和电子邮件。"
"它是根据GNU通用公共许可证（GPL）进行授权使用，并在各种Linux平台上进行了测试。"

#: ../../content/introduction.rst:18
msgid "About This Manual"
msgstr "关于本手册"

#: ../../content/introduction.rst:20
msgid ""
"This manual is intended for use by system administrators. The chapters "
"describe the installation and updating of the OTOBO software."
msgstr "本手册供系统管理员使用，本章介绍了OTOBO软件的安装和更新。"

#: ../../content/introduction.rst:22
msgid ""
"There is no graphical user interface for installation and updating. System "
"administrators have to follow the steps described in the following chapters."
msgstr ""
"没有用于安装和更新的图形用户界面。系统管理员必须按照以下章节中描述的步骤进"
"行。"

#: ../../content/introduction.rst:24
msgid ""
"All console commands look like ``username> command-to-execute``. Username "
"indicates the user account of the operating system, which need to use to "
"execute the command. If a command starts with ``root>``, you have to execute "
"the command as a user with root permissions. If a command starts with "
"``otobo>``, you have to execute the command as the user created for OTOBO."
msgstr ""
"所有控制台命令看起来都是这种格式``username> command-to-execute``。其中用户名"
"表示操作系统的用户帐户，需要使用该帐户来执行命令。如果命令以``root>''开头，则"
"必须以具有root权限的用户身份执行命令。如果命令以“ʻotobo>”开头，则必须以为"
"OTOBO创建的用户身份执行。"

#: ../../content/introduction.rst:28
msgid ""
"Do not select ``username>`` when you copy the command and paste it to the "
"shell. Otherwise you will get an error."
msgstr ""
"复制命令并将其粘贴到外壳程序时，请勿选择``username>`` 。否则，您将得到一个错"
"误警示。"

#: ../../content/introduction.rst:30
#, fuzzy
msgid ""
"We assume that OTOBO will be installed to the directory ``/opt/otobo``. If "
"you want to install OTOBO to a different location, then you have to change "
"the path in the commands or create a symbolic link to this directory."
msgstr ""
"我们认为OTOBO将被安装到``/ opt / otobo``。如果要将OTOBO安装到其他目录，则必须"
"更改命令中的路径或创建指向该目录的符号链接。"

#: ../../content/migration-from-otrs-6.rst:12
#, fuzzy
msgid ""
"Migration from OTRS / ((OTRS)) Community Edition version 6 to OTOBO version "
"10.1"
msgstr "从 OTRS / ((OTRS)) Community Edition version 6 转移到 OTOBO version 10"

#: ../../content/migration-from-otrs-6.rst:14
msgid "Welcome and thank you for choosing OTOBO!"
msgstr "欢迎并感谢大家选择OTOBO！"

#: ../../content/migration-from-otrs-6.rst:16
msgid ""
"OTRS, ((OTRS)) Community Edition and OTOBO are very comprehensive and "
"flexible in their application. Thus, every migration to OTOBO requires "
"thorough preparation and possibly some rework, too."
msgstr ""
"OTRS，（（OTRS））Community Edition和OTOBO的应用都非常全面和灵活。因此，每次"
"迁移OTOBO都需要进行充分的准备，甚至还可能需要一些返工。"

#: ../../content/migration-from-otrs-6.rst:18
msgid ""
"Please take your time for the migration and follow these instructions step "
"by step."
msgstr "请预留时间进行迁移，并逐步按照这些说明进行操作。"

#: ../../content/migration-from-otrs-6.rst:20
#, fuzzy
msgid ""
"If you have any problem or question, please do not despair. Call our support "
"line, write an email, or post your query in the OTOBO Community forum at "
"https://forum.otobo.org/. We will find a way to help you!"
msgstr ""
"如果您有任何问题，请不要放弃:)致电我们的支持热线，写电子邮件或在OTOBO社区论坛"
"（https://forum.otobo.org/）上发布您的需求。"

#: ../../content/migration-from-otrs-6.rst:25
#, fuzzy
msgid ""
"After the migration the data previously available in OTRS 6 will be "
"available in OTOBO 10. We do not modify any data of the OTRS 6 installation "
"during the migration."
msgstr ""
"迁移后，OTOS 6中以前可用的所有数据将在OTOBO中可用。在迁移期间，我们不会修改任"
"何OTRS的任何数据。"

#: ../../content/migration-from-otrs-6.rst:29
#, fuzzy
msgid "Overview over the Supported Migration Szenarios"
msgstr "Docker卷概述"

#: ../../content/migration-from-otrs-6.rst:31
#, fuzzy
msgid ""
"With the OTOBO Migration Interface it is possible to employ the following "
"migration strategies:"
msgstr "使用OTOBO迁移界面，可以执行以下迁移："

#: ../../content/migration-from-otrs-6.rst:33
msgid "The general migration strategy."
msgstr ""

#: ../../content/migration-from-otrs-6.rst:35
msgid ""
"This is the regular way to perform a migration. Many different different "
"combinations are supported:"
msgstr ""

#: ../../content/migration-from-otrs-6.rst:38
msgid "Change server:"
msgstr ""

#: ../../content/migration-from-otrs-6.rst:38
#, fuzzy
msgid "Migrate and simultaneously move to a new application server."
msgstr "迁移并同时迁移到新的应用程序服务器和操作系统。"

#: ../../content/migration-from-otrs-6.rst:42
msgid "Separate application and web servers:"
msgstr ""

#: ../../content/migration-from-otrs-6.rst:41
#, fuzzy
msgid ""
"It's your choice whether you want to run application and database server on "
"the same host or each on a dedictated host. This choice is regardless of the "
"previous setup in OTRS / ((OTRS)) Community Edition."
msgstr ""
"2. 分开的应用程序和Web服务器：您是要在同一主机上运行应用程序还是数据库服务器"
"还是在专用主机上运行数据库服务器，这是您的选择。此选择与OTRS /（（OTRS））"
"Community Edition中的先前设置无关。"

#: ../../content/migration-from-otrs-6.rst:45
#, fuzzy
msgid "Different databases:"
msgstr "数据库"

#: ../../content/migration-from-otrs-6.rst:45
#, fuzzy
msgid ""
"Migrate from any of the supported databases to any other supported database."
msgstr "可以从任何系统支持的数据库迁移到任何另一个支持的数据库。"

#: ../../content/migration-from-otrs-6.rst:48
msgid "Different operating system:"
msgstr ""

#: ../../content/migration-from-otrs-6.rst:48
#, fuzzy
msgid ""
"Switch from any supported operating system to any other supported operating "
"system."
msgstr ""
"在迁移过程中，可以从任何系统支持的操作系统切换到任何另一个支持的操作系统。"

#: ../../content/migration-from-otrs-6.rst:51
#, fuzzy
msgid "Docker:"
msgstr "** Docker **"

#: ../../content/migration-from-otrs-6.rst:51
#, fuzzy
msgid "Migrate to a Docker-based installation of OTOBO 10."
msgstr "可以迁移到基于Docker的OTOBO 10。"

#: ../../content/migration-from-otrs-6.rst:53
msgid ""
"A variant of the general strategy where the database migration is "
"streamlined."
msgstr ""

#: ../../content/migration-from-otrs-6.rst:55
msgid ""
"Use the ETL-like migration when the source database mustn't suffer from "
"increased load or when access to the source database is a bottleneck. In the "
"general strategy, the data is row by row first read from the *otrs* database "
"and then inserted into the OTOBO database. In this variant, the complete "
"*otrs* database tables are first exported, then transformed, and then "
"imported into the *otobo* database."
msgstr ""

#: ../../content/migration-from-otrs-6.rst:61
msgid ""
"Migration from an Oracle based OTRS 6 installation to an Oracle based OTOBO "
"installation."
msgstr ""

#: ../../content/migration-from-otrs-6.rst:63
msgid ""
"This is a special case that is not supported by the general migration "
"strategy. This means that a variant of the streamlined strategy must be used."
msgstr ""

#: ../../content/migration-from-otrs-6.rst:68
msgid ""
"All strategies work for both Docker-based and native installations. But for "
"Docker-based installations some peculiarities have to be considered. These "
"peculiarities are handled in the optional steps."
msgstr ""

#: ../../content/migration-from-otrs-6.rst:73
msgid ""
"It is also feasible to clone the OTRS datase to the OTOBO database server "
"before the actual migration. This can speed up the general migration "
"strategy."
msgstr ""

#: ../../content/migration-from-otrs-6.rst:77
msgid "Migration Requirements"
msgstr "迁移的要求"

#: ../../content/migration-from-otrs-6.rst:79
#, fuzzy
msgid ""
"Basic requirement for a migration is that you already have an ((OTRS)) "
"Community Edition or OTRS 6.0.\\* running, and that you want to transfer "
"both configuration and data to OTOBO."
msgstr ""
"1.迁移的基本要求是，您已经在运行（（OTRS））Community Edition或OTRS 6.0。\\ "
"*，并且您希望将配置和数据传输到OTOBO。"

#: ../../content/migration-from-otrs-6.rst:84
#, fuzzy
msgid ""
"Please consider carefully whether you really need the data and "
"configuration. Experience shows that quite often a new start is the better "
"option. This is because in many cases the previously used installation and "
"configuration was rather suboptimal anyways. It might also make sense to "
"only transfer the ticket data and to change the basic configuration to OTOBO "
"Best Practice. We are happy to advise you, please get in touch at "
"hello@otobo.de or ask your question in the OTOBO Community forum at https://"
"forum.otobo.org/."
msgstr ""
"请认真考虑你是否真的需要这些数据和配置。经验表明，以前使用的安装和配置都不理"
"想，新的开始通常是更好的选择。仅传输工单数据并将基本配置更改为OTOBO Best "
"Practice也可能有用。我们很乐意为您提供建议，请联系hello@otobo.de或在OTOBO社区"
"论坛（https://forum.otobo.org/）上提问。"

#: ../../content/migration-from-otrs-6.rst:90
msgid ""
"You need a running OTOBO installation to start the migration from there!"
msgstr "您需要一个运行中的OTOBO安装程序，才能从那里开始迁移！"

#: ../../content/migration-from-otrs-6.rst:92
msgid ""
"This OTOBO installation must contain all OPM packages installed in your OTRS "
"that you want to use in OTOBO, too."
msgstr "此OTOBO安装必须还包含要在OTOBO中使用的，OTRS中安装的所有OPM软件包。"

#: ../../content/migration-from-otrs-6.rst:94
#, fuzzy
msgid ""
"If you are planning to migrate to another server, then the OTOBO webserver "
"must be able to access the location where your ((OTRS)) Community Edition or "
"OTRS 6.0.* is installed. In most cases, this is the directory */opt/otrs* on "
"the server running OTRS. The read access can be effected via SSH or via file "
"system mounts."
msgstr ""
"4.如果您打算迁移到另一台服务器，那么OTOBO Web服务器必须能够访问您的"
"（（OTRS））Community Edition或OTRS 6.0。*的安装位置。在大多数情况下，是运行"
"OTRS的服务器上的目录/ opt / otrs。访问可以通过SSH或通过文件系统挂载来进行。此"
"外，必须可以从运行OTOBO的服务器访问* otrs *数据库。必须为外部主机授予只读访问"
"权限。"

#: ../../content/migration-from-otrs-6.rst:99
#, fuzzy
msgid ""
"The *otrs* database must be accessible from the server running OTOBO. "
"Readonly access must be granted for external hosts. If access is not "
"possible, or when the speed of the migration should be optimised, then a "
"dump of the database is sufficient."
msgstr ""
"5. 必须可以从运行OTOBO的服务器访问* otrs *数据库，必须为外部主机授予只读访问"
"权限，如果无法访问，或者应该优化迁移速度，则转储数据库就足够了。"

#: ../../content/migration-from-otrs-6.rst:104
msgid ""
"If SSH and database access between the servers is not possible, please "
"migrate OTRS to OTOBO on the same server and only then move the new "
"installation."
msgstr ""
"如果无法在服务器之间进行SSH和数据库访问，请在同一台服务器上进行OTRS到OTOBO的"
"迁移，然后再移动新安装。"

#: ../../content/migration-from-otrs-6.rst:108
msgid "Step 1: Install the new OTOBO System"
msgstr "步骤 1：安装新的OTOBO系统"

#: ../../content/migration-from-otrs-6.rst:110
#, fuzzy
msgid ""
"Please start with installing a new OTOBO system. Your old OTRS / ((OTRS)) "
"Community Edition installation will be migrated to that new system. We "
"strongly recommend to read the chapter :doc:`installation`. For Docker-based "
"installations we refer to the chapter :doc:`installation-docker`."
msgstr ""
"请从安装新的OTOBO系统开始，将你的OTRS /（（OTRS））Community Edition迁移到该"
"系统。这里我们强烈建议你先阅读：doc：ʻinstallation`。"

#: ../../content/migration-from-otrs-6.rst:115
#, fuzzy
msgid ""
"Under Apache, there are pitfalls with running two independent *mod_perl* "
"applications under on the same webserver. Therefore, it is advised to run "
"OTRS and OTOBO on separate webservers. Alternatively remove the OTRS "
"configuration from Apache before installing OTOBO. Use the command ``a2query "
"-s`` and check the directories */etc/apache2/sites-available* and */etc/"
"apache2/sites-enabled* for inspecting which configurations are currently "
"available and which are enabled."
msgstr ""
"在Apache环境下，在同一服务器上的mod_perl之下运行两个独立的应用程序会有陷阱，"
"这些陷阱可以通过mod_perl去设置``PerlOptions + Parent''来缓解。此设置可确保应"
"用程序使用其自己的专用Perl解码器。请检查目录* / etc / apache2 / sites-"
"enabled *中的Apache配置文件，并添加设置以防丢失。"

#: ../../content/migration-from-otrs-6.rst:121
#, fuzzy
msgid ""
"After finishing the installation please log in as *root@localhost*. Navigate "
"to the OTOBO Admin Area ``Admin -> Packages`` and install all required OTOBO "
"OPM packages."
msgstr ""
"完成安装教程后，请登录到OTOBO管理员区域``Admin -> Packages`` ，安装所有需要的"
"OTOBO OPM软件包。"

#: ../../content/migration-from-otrs-6.rst:140
msgid ""
"The following OPM packages and OTRS \"Feature Addons\" need NOT and should "
"NOT be installed, as these features are already available in the OTOBO "
"standard:"
msgstr ""
"以下OPM软件包和OTRS“功能附加组件”不需要，也不应该安装，因为这些功能已在标准的"
"OTOBO版本中提供了："

#: ../../content/migration-from-otrs-6.rst:125
msgid "OTRSHideShowDynamicField"
msgstr "OTRSHideShowDynamicField"

#: ../../content/migration-from-otrs-6.rst:126
msgid "RotherOSSHideShowDynamicField"
msgstr "RotherOSSHideShowDynamicField"

#: ../../content/migration-from-otrs-6.rst:127
msgid "TicketForms"
msgstr "TicketForms"

#: ../../content/migration-from-otrs-6.rst:128
msgid "RotherOSS-LongEscalationPerformanceBoost"
msgstr "RotherOSS-LongEscalationPerformanceBoost"

#: ../../content/migration-from-otrs-6.rst:129
msgid "Znuny4OTRS-AdvancedDynamicFields"
msgstr "Znuny4OTRS - AdvancedDynamicFields"

#: ../../content/migration-from-otrs-6.rst:130
msgid "Znuny4OTRS-AutoSelect"
msgstr "Znuny4OTRS-AutoSelect"

#: ../../content/migration-from-otrs-6.rst:131
msgid "Znuny4OTRS-EscalationSuspend"
msgstr "Znuny4OTRS-EscalationSuspend"

#: ../../content/migration-from-otrs-6.rst:132
msgid "OTRSEscalationSuspend"
msgstr "OTRSEscalationSuspend"

#: ../../content/migration-from-otrs-6.rst:133
msgid "OTRSDynamicFieldDatabase"
msgstr "OTRSDynamicFieldDatabase"

#: ../../content/migration-from-otrs-6.rst:134
msgid "OTRSDynamicFieldWebService"
msgstr "OTRSDynamicFieldWebService"

#: ../../content/migration-from-otrs-6.rst:135
msgid "OTRSBruteForceAttackProtection"
msgstr "OTRSBruteForceAttackProtection"

#: ../../content/migration-from-otrs-6.rst:136
msgid "Znuny4OTRS-ExternalURLJump"
msgstr "Znuny4OTRS-ExternalURLJump"

#: ../../content/migration-from-otrs-6.rst:137
msgid "Znuny4OTRS-QuickClose"
msgstr "Znuny4OTRS-QuickClose"

#: ../../content/migration-from-otrs-6.rst:138
msgid "Znuny4OTRS-AutoCheckbox"
msgstr "Znuny4OTRS-AutoCheckbox"

#: ../../content/migration-from-otrs-6.rst:139
msgid "OTRSSystemConfigurationHistory"
msgstr "OTRSSystemConfigurationHistory"

#: ../../content/migration-from-otrs-6.rst:140
#, fuzzy
msgid "Znuny4OTRS-PasswordPolicy"
msgstr "密码策略规则"

#: ../../content/migration-from-otrs-6.rst:143
msgid "Step 2: Deactivate ``SecureMode`` on OTOBO"
msgstr ""

#: ../../content/migration-from-otrs-6.rst:145
#, fuzzy
msgid ""
"After installing OTOBO, please log in again to the OTOBO Admin Area ``Admin -"
"> System Configuration`` and deactivate the config option ``SecureMode``."
msgstr ""
"安装OTOBO后，请再次登录到OTOBO管理员区域``Admin -> System Configuration``，然"
"后停用配置选项“ SecureMode”。现在以``root''用户身份登录服务器并执行以下命令："

#: ../../content/migration-from-otrs-6.rst:149
msgid "Do not forget to actually deploy the changed setting."
msgstr ""

#: ../../content/migration-from-otrs-6.rst:152
#, fuzzy
msgid "Step 3: Stop the OTOBO Daemon"
msgstr "步骤10：启动OTOBO Daemon"

#: ../../content/migration-from-otrs-6.rst:154
msgid ""
"This is necessary when the OTOBO Daemon is actually running. Stopping the "
"Daemon is different between Docker-based and non-Docker-based installations."
msgstr ""

#: ../../content/migration-from-otrs-6.rst:157
msgid ""
"In the non-Docker case execute the following commands as the user *otobo*:"
msgstr ""

#: ../../content/migration-from-otrs-6.rst:167
#, fuzzy
msgid ""
"When OTOBO is running in Docker, you just need to stop the service "
"``daemon``:"
msgstr "当OTOBO在Docker下运行时，就可以停止Docker容器`otobo_daemon_1``："

#: ../../content/migration-from-otrs-6.rst:177
msgid ""
"It is recommended to run a backup of the whole OTOBO system at this point. "
"If something goes wrong during migration, you will then not have to repeat "
"the entire installation process, but can instead import the backup for a new "
"migration."
msgstr ""
"建议此时运行整个OTOBO系统的备份。如果在迁移过程中出现问题，则不必重复整个安装"
"过程，而可以导入备份以进行新的迁移。"

#: ../../content/migration-from-otrs-6.rst:182
msgid "We advise you to read the OTOBO :doc:`backup-restore` chapter."
msgstr "我们建议你阅读OTOBO：backup-restore`章节。"

#: ../../content/migration-from-otrs-6.rst:185
msgid "Optional Step: Mount /opt/otrs for Convenient Access"
msgstr ""

#: ../../content/migration-from-otrs-6.rst:187
msgid ""
"Often OTOBO should be running on a new server where */opt/otrs* isn't "
"available initially. In these cases the directory */opt/otrs* on the OTRS "
"server can be mounted into the file system of the OTOBO server. When a "
"regular network mount is not possible, then using ``sshfs`` might be an "
"option."
msgstr ""

#: ../../content/migration-from-otrs-6.rst:192
msgid ""
"Optional Step: Install ``sshpass`` and ``rsync`` when */opt/otrs* Should be "
"Copied via ssh"
msgstr ""

#: ../../content/migration-from-otrs-6.rst:194
msgid ""
"This step is only necessary when you want to migrate OTRS from another "
"server and when */opt/otrs* from the remote server hasn't been mounted on "
"the server running OTOBO."
msgstr ""

#: ../../content/migration-from-otrs-6.rst:197
#, fuzzy
msgid ""
"The tools ``sshpass`` and ``rsync`` are needed so that *migration.pl* can "
"copy files via ssh. For installing ``sshpass``, please log in on the server "
"as user ``root`` and execute one of the following commands:"
msgstr ""
"想要通过ssh复制文件，需要``sshpass''和``rsync''工具。要安装sshpass，请以root"
"用户身份登录服务器并执行以下命令之一："

#: ../../content/migration-from-otrs-6.rst:221
msgid "The same thing must be done for *rsync* when it isn't available yet."
msgstr "如果* rsysnc *不可用，则必须执行相同的操作。"

#: ../../content/migration-from-otrs-6.rst:224
#, fuzzy
msgid "Step 4: Preparing the OTRS / ((OTRS)) Community Edition system"
msgstr "步骤 3：准备OTRS / ((OTRS)) Community Edition系统"

#: ../../content/migration-from-otrs-6.rst:228
msgid ""
"Be sure to have a valid backup of your OTRS / ((OTRS)) Community Edition "
"system, too. Yes, we do not touch any OTRS data during the migration, but at "
"times a wrong entry is enough to cause trouble."
msgstr ""
"另外，你还要确保你的OTRS /（（OTRS））Community Edition系统具备有效的备份。是"
"的，在迁移过程中我们不会修改任何OTRS数据，但有时各种错误会造成一些麻烦。"

#: ../../content/migration-from-otrs-6.rst:231
msgid ""
"Now we are ready for the migration. First of all we need to make sure that "
"no more tickets are processed and no users log on to OTRS:"
msgstr ""
"现在我们已准备好进行迁移。首先，我们需要确保不再处理任何工单并且没有用户登录"
"到OTRS："

#: ../../content/migration-from-otrs-6.rst:234
msgid ""
"Please log in to the OTRS Admin Area ``Admin ->  System Maintenance`` and "
"add a new system maintenance slot for a few hours. After that, delete all "
"agent and user sessions (``Admin ->  Sessions``) and log out."
msgstr ""
"请登录到OTOBO管理员区域 ``Admin ->  System Maintenance``，并插入几个小时的新"
"系统维护。之后，删除所有话务员和用户的会话（“ Admin-> Sessions”），而后退出登"
"陆。"

#: ../../content/migration-from-otrs-6.rst:238
msgid "Stop All Relevant Services and the OTRS Daemon"
msgstr "停止所有相关服务和OTRS守护程序"

#: ../../content/migration-from-otrs-6.rst:240
msgid "Please make sure there are no running services or cron jobs."
msgstr "请确保没有正在运行的服务或cron作业。"

#: ../../content/migration-from-otrs-6.rst:249
msgid "Clear the Caches and the Operational Data"
msgstr ""

#: ../../content/migration-from-otrs-6.rst:251
msgid ""
"The cached data and the operational data doesn't have to be migrated. The "
"mail queue should at this point already be empty."
msgstr ""

#: ../../content/migration-from-otrs-6.rst:264
#, fuzzy
msgid "Optional Step for Docker: make required data available inside container"
msgstr "3b Docker步骤：在容器中准备好需要的数据"

#: ../../content/migration-from-otrs-6.rst:266
#, fuzzy
msgid ""
"There are some specifics to be considered when your OTOBO installation is "
"running under Docker. The most relevant: processes running in a Docker "
"container generally cannot access directories outside the container. There "
"is an exception though: directories mounted as volumes into the container "
"can be accessed. Also, note that the MariaDB database running in "
"``otobo_db_1`` is not directly accessible from outside the container network."
msgstr ""
"如果Web应用程序OTOBO在容器“ otobo_web_1”中运行，则OTOBO通常无法访问容器外部的"
"目录。但是有一个例外：可以访问作为卷装入到容器中的目录。这意味着迁移有两种可"
"能。"

#: ../../content/migration-from-otrs-6.rst:273
msgid ""
"In the sample commands, we assume that the user **docker_admin** is used for "
"interacting with Docker. The Docker admin may be either the **root** user of "
"the Docker host or a dedicated user with the required permissions."
msgstr ""
"下面的介绍是在假设所有需要的系统都已经安装，并且你已经有了一个工作的Docker环"
"境。我们假设用户**root**被用来和Docker互动，请注意针对一个生产环境，需要有一"
"个专用用户作为Docker管理员。"

#: ../../content/migration-from-otrs-6.rst:277
msgid "Copy */opt/otrs* into the volume *otobo_opt_otobo*"
msgstr "Docker：将* / opt / otrs *复制到卷* otobo_opt_otobo *"

#: ../../content/migration-from-otrs-6.rst:279
msgid ""
"In this section, we assume that the OTRS home directory */opt/otrs* is "
"available on the Docker host."
msgstr "在本节中，我们假设Docker主机上有* / opt / otrs *。"

#: ../../content/migration-from-otrs-6.rst:282
msgid "There are at least two viable possibilities:"
msgstr "最少有两种可能性："

#: ../../content/migration-from-otrs-6.rst:284
msgid "copy */opt/otrs* into the existing volume *otobo_opt_otobo*"
msgstr "Docker：将* / opt / otrs *复制到卷* otobo_opt_otobo *"

#: ../../content/migration-from-otrs-6.rst:285
msgid "mount */opt/otrs* as an additional volume"
msgstr "挂载* / opt / otrs *作为附加卷"

#: ../../content/migration-from-otrs-6.rst:287
msgid "Let's concentrate on option **a.** here."
msgstr "在这里我们集中讨论选项** a.**。"

#: ../../content/migration-from-otrs-6.rst:289
msgid ""
"First we need to find out where the volume *otobo_opt_otobo* is available on "
"the Docker host."
msgstr "在本节中，我们假设Docker主机上有* / opt / otrs *。"

#: ../../content/migration-from-otrs-6.rst:296
msgid ""
"For safe copying, we use ``rsync``. Depending on your Docker setup, the "
"command ``rsync`` might need to be run with ``sudo``."
msgstr ""
"我们用``rsync``进行安全复制，根据你的Docker设置，这个命令有可能需要和``sudo``"
"一起运行。"

#: ../../content/migration-from-otrs-6.rst:309
msgid ""
"This copied directory will be available as */opt/otobo/var/tmp/copied_otrs* "
"within the container."
msgstr "该复制的目录应该是容器中的* / opt / otobo / tmp / otrs *。"

#: ../../content/migration-from-otrs-6.rst:312
#, fuzzy
msgid "Step 5: Perform the Migration!"
msgstr "步骤 4：进行迁移！"

#: ../../content/migration-from-otrs-6.rst:314
#, fuzzy
msgid ""
"Please use the web migration tool at http://localhost/otobo/migration.pl. Be "
"aware that you might have to replace \"localhost\" with your OTOBO hostname "
"and you might have to add your non-standard port. The application then "
"guides you through the migration process."
msgstr ""
"请使用http：//localhost/otobo/migration.pl上的Web迁移工具（用OTOBO主机名替"
"换“ localhost”），然后按照此过程进行操作。"

#: ../../content/migration-from-otrs-6.rst:320
msgid ""
"Sometimes, a warning is shown that the deactivation of **SecureMode** has "
"not been detected. Please restart the webserver in this case. This forces "
"the webserver to read in the current configuration."
msgstr ""

#: ../../content/migration-from-otrs-6.rst:335
#, fuzzy
msgid ""
"If OTOBO runs inside a Docker container, keep the default settings "
"*localhost* for the OTRS server and */opt/otobo/var/tmp/copied_otrs* for the "
"OTRS home directory. This is the path of the data that was copied in the "
"optional step."
msgstr ""
"如果OTOBO在Docker容器中运行，请为OTRS服务器指定* localhost *，指定* / opt / "
"otobo / tmp / otrs *作为OTRS主目录。"

#: ../../content/migration-from-otrs-6.rst:341
msgid ""
"The default values for OTRS database user and password are taken from "
"*Kernel/Config.pm* in the OTRS home directory. Change the proposed settings "
"if you are using a dedicated database user for the migration. Also change "
"the settings when you work with a database that was copied into the "
"*otobo_db_1* Docker container."
msgstr ""

#: ../../content/migration-from-otrs-6.rst:347
msgid ""
"In the Docker case, a database running on the Docker host won't be reachable "
"via ``127.0.0.1`` from within the Docker container. This means that the "
"setting ``127.0.0.1`` won't be valid for the input field ``OTRS Server``. In "
"that case, enter one of the alternative IP-addresses reported by the command "
"``hostname --all-ip-addresses`` for ``OTRS Server``."
msgstr ""

#: ../../content/migration-from-otrs-6.rst:353
msgid ""
"When migrating to a new application server, or to a Docker-based "
"installation, quite often the database cannot be accessed from the target "
"installation. This is usually due to the fact that the otobo database user "
"can only connect from the host the database runs on. In order to allow "
"access anyways it is recommended to create a dedicated database user for the "
"migration. E.g. ``CREATE USER 'otrs_migration'@'%' IDENTIFIED BY "
"'otrs_migration';`` and ``GRANT SELECT, SHOW VIEW ON otrs.* TO "
"'otrs_migration'@'%';``. This user can be dropped again after the migration: "
"``DROP USER 'otrs_migration'@'%'``."
msgstr ""

#: ../../content/migration-from-otrs-6.rst:360
msgid ""
"Custom settings in *Kernel/Config.pm* are carried over from the old OTRS "
"installation to the new OTOBO installation. When you have custom settings, "
"then please take a look at the migrated file */opt/otobo/Kernel/Config.pm*. "
"You might want to adapt custom pathes or LDAP settings. In the best case you "
"might find that some custom setting are longer needed."
msgstr ""

#: ../../content/migration-from-otrs-6.rst:364
msgid ""
"When the migration is complete, please take your time and test the entire "
"system. Once you have decided that the migration was successful and that you "
"want to use OTOBO from now on, start the OTOBO Daemon:"
msgstr ""
"迁移完成后，请花点时间测试整个系统。一旦确定迁移成功并且要从现在开始使用"
"OTOBO，请启动OTOBO守护程序："

#: ../../content/migration-from-otrs-6.rst:374
msgid "In the Docker case:"
msgstr "在Docker情况下："

#: ../../content/migration-from-otrs-6.rst:382
#, fuzzy
msgid "Step 6: After Successful Migration!"
msgstr "步骤 5：成功迁移后！"

#: ../../content/migration-from-otrs-6.rst:384
msgid "Uninstall ``sshpass`` if you do not need it anymore."
msgstr "如果不再需要，卸载 ``sshpass``。"

#: ../../content/migration-from-otrs-6.rst:385
#, fuzzy
msgid ""
"Drop the databases and database users dedicated to the migration if you "
"created any."
msgstr "如果你为了迁移，创建了数据库用户，现在删除它。"

#: ../../content/migration-from-otrs-6.rst:386
msgid "Have fun with OTOBO!"
msgstr "享受OTOBO带来的快乐吧！"

#: ../../content/migration-from-otrs-6.rst:390
#, fuzzy
msgid "Known Migration Problems"
msgstr "步骤 6：了解迁移的问题"

#: ../../content/migration-from-otrs-6.rst:393
msgid "1. Login after migration not possible"
msgstr "1. 不能迁移后登陆系统"

#: ../../content/migration-from-otrs-6.rst:395
msgid ""
"During our migration tests, the browser used for the migration sometimes had "
"problems. After restarting the browser, this problem usually was solved. "
"With Safari it was sometimes necessary to manually delete the old OTRS "
"session."
msgstr ""
"在我们的迁移测试中，用于迁移的浏览器有时会出现问题。重新启动浏览器后，通常可"
"以解决此问题。使用Safari，有时需要手动删除旧的OTRS会话。"

#: ../../content/migration-from-otrs-6.rst:399
msgid ""
"2. Final page of the migration has a strange layout due to missing CSS files"
msgstr "2. 由于缺少CSS文件，迁移的最终页面出现布局异常"

#: ../../content/migration-from-otrs-6.rst:401
msgid ""
"This can happen when the setting ScriptAlias has a non-standard value. The "
"migration simply substitutes otrs for otobo. This might lead to the effect "
"that the CSS and JavaScript can no longer be retrieved in OTOBO. When that "
"happens, please check the settings in *Kernel/Config.pm* and revert them to "
"sane values."
msgstr ""
"当ScriptAlias的配置不是标准值时，可能会发生这种情况。迁移简单地用otrs代替"
"otobo可能会导致无法在OTOBO中检索CSS和JavaScript。发生这种情况时，请检查"
"Kernel / Config.pm中的设置并将其恢复为合理的值。"

#: ../../content/migration-from-otrs-6.rst:406
msgid "3. Migration stops due to MySQL errors"
msgstr ""

#: ../../content/migration-from-otrs-6.rst:408
msgid ""
"On systems that experienced problems with an upgrade in the past, the "
"migration process may stop due to MySQL errors in the tables *ticket* and "
"*ticket_history*. Usually these errors are NULL values in the source table "
"that are no longer allowed in the target table. These conflicts have to be "
"manually resolved before you can resume the migration."
msgstr ""

#: ../../content/migration-from-otrs-6.rst:412
msgid ""
"As of OTOBO 10.0.12 there is a check in *migration.pl* that checks for NULL "
"values before the data transfer is done. Note, that the resolution still "
"needs to be performed manually."
msgstr ""

#: ../../content/migration-from-otrs-6.rst:415
msgid "4. Errors in Step 5 when migrating to PostgreSQL"
msgstr ""

#: ../../content/migration-from-otrs-6.rst:417
msgid ""
"In these cases the not so helpful message \"System was unable to complete "
"data transfer.\" is shown by *migration.pl*. The Apache logfile, and the "
"OTOBO logfile, show a more meaningful message: \"Message: ERROR:  permission "
"denied to set parameter \"session_replication_role\", SQL: 'set "
"session_replication_role to replica;'\". In order to give the database user "
"**otobo** the needed superuser privileges, run the following statement as "
"the PostgreSQL admin: ``ALTER USER otobo WITH SUPERUSER;``. Then retry "
"running http://localhost/otobo/migration.pl. After the migration, return to "
"the normal state by running ``ALTER USER otobo WITH NOSUPERUSER``."
msgstr ""

#: ../../content/migration-from-otrs-6.rst:425
msgid ""
"It is not clear yet, whether the extended privileges have to be granted in "
"every setup."
msgstr ""

#: ../../content/migration-from-otrs-6.rst:429
msgid ""
"The discussion in https://otobo.de/de/forums/topic/otrs-6-mysql-migration-to-"
"otobo-postgresql/."
msgstr ""

#: ../../content/migration-from-otrs-6.rst:432
msgid "5. Problems with the Deployment the Merged System Configuration"
msgstr ""

#: ../../content/migration-from-otrs-6.rst:434
msgid ""
"The system configuration is migrated after the database tables were "
"migrated. In this context, migration means merging the default settings of "
"OTOBO with the system configuration of the source OTRS system. "
"Inconsistencies can arise in this step. An real life example is the setting "
"``Ticket::Frontend::AgentTicketQuickClose###State``. This setting is new in "
"OTOBO 10 and the default value is the state ``closed successful``. But this "
"setting is invalid when the state ``closed successful`` has been dropped or "
"renamed in the source system. This inconsistency is detected as an error in "
"the migration step **Migrate configuration settings**. Actually, the merged "
"system configuration is stored in the database, but additional validity "
"checks are performed during deployment."
msgstr ""

#: ../../content/migration-from-otrs-6.rst:442
msgid ""
"The problem must be alleviated manually by using OTOBO console commands."
msgstr ""

#: ../../content/migration-from-otrs-6.rst:444
msgid ""
"List the inconsistencies with the command ``bin/otobo.Console.pl Admin::"
"Config::ListInvalid``"
msgstr ""

#: ../../content/migration-from-otrs-6.rst:446
msgid ""
"Interactively fix the invalid values with ``bin/otobo.Console.pl Admin::"
"Config::FixInvalid``"
msgstr ""

#: ../../content/migration-from-otrs-6.rst:448
msgid ""
"Deploy the collected changes from migration.pl, including the deactivated "
"**SecureMode** with ``bin/otobo.Console.pl Maint::Config::Rebuild``"
msgstr ""

#: ../../content/migration-from-otrs-6.rst:451
msgid ""
"After these manual steps you should be able to run *migration.pl* again. The "
"migration will continue with the step where the error occurred."
msgstr ""

#: ../../content/migration-from-otrs-6.rst:455
msgid "Step 7: Manual Migration Tasks and Changes"
msgstr "步骤 7：手工迁移的任务和修改"

#: ../../content/migration-from-otrs-6.rst:458
msgid "1. Password policy rules"
msgstr "1. 密码策略规则"

#: ../../content/migration-from-otrs-6.rst:460
msgid ""
"With OTOBO 10 a new default password policy for agent and customer users is "
"in effect, if local authentication is used. The password policy rules can be "
"changed in the system configuration (``PreferencesGroups###Password`` and "
"``CustomerPersonalPreference###Password``)."
msgstr ""
"如果使用本地身份验证，对于OTOBO 10，代理和客户用户的新的默认密码策略将生效。"
"可以在系统配置（“ PreferencesGroups ### Password”和“ "
"CustomerPersonalPreference #### Password”）中更改密码策略规则。"

#: ../../content/migration-from-otrs-6.rst:463
msgid "Password Policy Rule"
msgstr "密码策略规则"

#: ../../content/migration-from-otrs-6.rst:463
msgid "Default"
msgstr "默认"

#: ../../content/migration-from-otrs-6.rst:465
msgid "``PasswordMinSize``"
msgstr "`` PasswordMinSize ``"

#: ../../content/migration-from-otrs-6.rst:465
msgid "8"
msgstr "8"

#: ../../content/migration-from-otrs-6.rst:467
msgid "``PasswordMin2Lower2UpperCharacters``"
msgstr "`` PasswordMin2Lower2UpperCharacters ``"

#: ../../content/migration-from-otrs-6.rst:467
#: ../../content/migration-from-otrs-6.rst:469
#: ../../content/migration-from-otrs-6.rst:477
msgid "Yes"
msgstr "是"

#: ../../content/migration-from-otrs-6.rst:469
msgid "``PasswordNeedDigit``"
msgstr "`` PasswordNeedDigit ``"

#: ../../content/migration-from-otrs-6.rst:471
msgid "``PasswordHistory``"
msgstr "`` PasswordHistory ``"

#: ../../content/migration-from-otrs-6.rst:471
msgid "10"
msgstr "10"

#: ../../content/migration-from-otrs-6.rst:473
msgid "``PasswordTTL``"
msgstr "`` PasswordTTL ``"

#: ../../content/migration-from-otrs-6.rst:473
msgid "30 days"
msgstr "30天"

#: ../../content/migration-from-otrs-6.rst:475
msgid "``PasswordWarnBeforeExpiry``"
msgstr "`` PasswordWarnBeforeExpiry ``"

#: ../../content/migration-from-otrs-6.rst:475
msgid "5 days"
msgstr "5天"

#: ../../content/migration-from-otrs-6.rst:477
msgid "``PasswordChangeAfterFirstLogin``"
msgstr "`` PasswordChangeAfterFirstLogin ``"

#: ../../content/migration-from-otrs-6.rst:481
msgid "2. Under Docker: Manually migrate cron jobs"
msgstr ""

#: ../../content/migration-from-otrs-6.rst:483
msgid ""
"In a non-Docker installation of OTOBO, there is at least one cron job which "
"checks the health of the Daemon. Under Docker, this cron job no longer "
"exists. Furthermore, there is no cron daemon running in any of the Docker "
"containers. This means that you have to look for an individual solution for "
"OTRS systems with customer-specific cron jobs (e. g. backing up the "
"database)."
msgstr ""

#: ../../content/migration-from-otrs-6.rst:490
msgid "Special topics"
msgstr ""

#: ../../content/migration-from-otrs-6.rst:493
msgid "Migration from Oracle to Oracle"
msgstr ""

#: ../../content/migration-from-otrs-6.rst:495
msgid ""
"For migration to Oracle the ETL-like strategy must be employed. This is "
"because Oracle provides no easy way to temporarily turn off foreign key "
"checks."
msgstr ""

#: ../../content/migration-from-otrs-6.rst:498
msgid ""
"On the OTOBO host a Oracle client and the Perl module ``DBD::Oracle`` must "
"be installed."
msgstr ""

#: ../../content/migration-from-otrs-6.rst:502
msgid ""
"When using the Oracle instant client, then the optional SDK is also needed "
"for installing DBD::Oracle."
msgstr ""

#: ../../content/migration-from-otrs-6.rst:504
msgid ""
"There are many ways of cloning a schema. In the sample commands we use "
"``expdb`` and ``impdb`` which use Data Pump under the hood."
msgstr ""

#: ../../content/migration-from-otrs-6.rst:509
msgid ""
"The connect strings shown in this documentation refer to the case when both "
"source and target database run in a Docker container. See also https://"
"github.com/bschmalhofer/otobo-ideas/blob/master/oracle.md ."
msgstr ""

#: ../../content/migration-from-otrs-6.rst:513
msgid "Clear out otobo"
msgstr ""

#: ../../content/migration-from-otrs-6.rst:515
msgid ""
"Stop the webserver for otobo, so that the DB connection for otobo is closed."
msgstr ""

#: ../../content/migration-from-otrs-6.rst:522
msgid "Export the complete OTRS schema."
msgstr ""

#: ../../content/migration-from-otrs-6.rst:538
msgid "Import the OTRS schema, renaming the schema to 'otobo'."
msgstr ""

#: ../../content/migration-from-otrs-6.rst:553
msgid "Adapt the cloned schema otobo"
msgstr ""

#: ../../content/migration-from-otrs-6.rst:562
msgid "Start the web server for otobo again"
msgstr ""

#: ../../content/migration-from-otrs-6.rst:564
msgid "Proceed with step 5, that is with running ``migration.pl``."
msgstr ""

#: ../../content/migration-from-otrs-6.rst:568
msgid ""
"If migrating to OTOBO version greater or equal 10.1 the script ``/opt/otobo/"
"scripts/DBUpdate-to-10.1.pl`` has to be executed, to create the tables "
"``stats_report`` & ``data_storage``, which were newly added in version 10.1."
msgstr ""

#: ../../content/migration-from-otrs-6.rst:572
msgid ""
"Optional Step: Streamlined migration of the database (only for experts and "
"spezial scenarios)"
msgstr ""

#: ../../content/migration-from-otrs-6.rst:574
msgid ""
"In the general migration strategy, all data in the database tables is copied "
"row by row from the OTRS database into the OTOBO database. Exporting the "
"data from the OTRS database and importing it into the OTOBO database might "
"save time and is more stable in some circumstances."
msgstr ""

#: ../../content/migration-from-otrs-6.rst:581
msgid "This variant works for both Docker-based and native installations."
msgstr ""

#: ../../content/migration-from-otrs-6.rst:585
msgid "These instructions assume that OTRS is using MySQL as its backend."
msgstr ""

#: ../../content/migration-from-otrs-6.rst:587
msgid ""
"First of all, we need a dump of the needed OTRS database tables. Then we "
"need to perform a couple of transformations:"
msgstr ""

#: ../../content/migration-from-otrs-6.rst:590
msgid "convert the character set to *utf8mb4*"
msgstr ""

#: ../../content/migration-from-otrs-6.rst:591
msgid "rename a couple of tables"
msgstr ""

#: ../../content/migration-from-otrs-6.rst:592
msgid "shorten some table columns"
msgstr ""

#: ../../content/migration-from-otrs-6.rst:594
msgid ""
"After the transfomation we can overwrite the tables in the OTOBO schema with "
"the transformed data from OTRS. Effectively we need not a single dump file, "
"but several SQL scripts."
msgstr ""

#: ../../content/migration-from-otrs-6.rst:597
msgid ""
"When ``mysqldump`` is installed and a connection to the OTRS database is "
"possible, you can create the database dump directly on the Docker host. This "
"case is supported by the script *bin/backup.pl*."
msgstr ""
"当安装了mysqldump并且可以连接到OTRS数据库时，您可以直接在Docker主机上创建数据"
"库转储。脚本* bin / backup.pl *支持这种情况。"

#: ../../content/migration-from-otrs-6.rst:603
msgid ""
"This requires that an OTOBO installation is available on the Docker host."
msgstr "在本节中，我们假设Docker主机上有* / opt / otrs *。"

#: ../../content/migration-from-otrs-6.rst:612
#, fuzzy
msgid ""
"Alternatively, the database can be dumped on another server and then be "
"transferred to the Docker host afterwards. An easy way to do this is to copy "
"*/opt/otobo* to the server running OTRS and perform the same command as "
"above."
msgstr ""
"或者，可以将数据库转储到另一台服务器上，然后再转移到Docker主机上。以下是实现"
"此目标的命令示例。"

#: ../../content/migration-from-otrs-6.rst:615
msgid ""
"The script *bin/backup.pl* generates four SQL scripts in a dump directory, e."
"g. in *2021-04-13_12-13-04* In order to execute the SQL scripts, we need to "
"run the command ``mysql``."
msgstr ""

#: ../../content/migration-from-otrs-6.rst:618
#, fuzzy
msgid "Native installation:"
msgstr "自动安装"

#: ../../content/migration-from-otrs-6.rst:628
#, fuzzy
msgid "Docker-based installation:"
msgstr "可以迁移到基于Docker的OTOBO 10"

#: ../../content/migration-from-otrs-6.rst:630
msgid ""
"Run the command ``mysql`` within the Docker container *db* for importing the "
"database dump files. Note that the password for the database root is now the "
"password that has been set up in the file *.env* on the Docker host."
msgstr ""

#: ../../content/migration-from-otrs-6.rst:642
msgid ""
"For a quick check whether the import worked, you can run the following "
"commands."
msgstr ""

#: ../../content/migration-from-otrs-6.rst:650
#, fuzzy
msgid "or when running under Docker"
msgstr "在Docker下运行OTOBO的考量"

#: ../../content/migration-from-otrs-6.rst:658
msgid ""
"The database is now migrated. This means that during the next step we can "
"skip the database migration. Watch out for the relevant checkbox."
msgstr ""

#: ../../content/performance-tuning.rst:12
msgid "Performance Tuning"
msgstr "性能调整"

#: ../../content/performance-tuning.rst:14
msgid ""
"This is a list of performance enhancing techniques for your OTOBO "
"installation. The topics include configuration, coding, memory use, and more."
msgstr "有一系列用于OTOBO安装的性能增强技术，包括配置，编码，内存使用等。"

#: ../../content/performance-tuning.rst:18
msgid "Ticket Index Module"
msgstr "工单索引模块"

#: ../../content/performance-tuning.rst:20
msgid ""
"Ticket index module can be set via system configuration setting ``Ticket::"
"IndexModule``. There are two back end modules building the index for the "
"ticket queue view:"
msgstr ""
"可以通过系统配置``Ticket :: IndexModule''设置工单索引模块，这里有两个后台模块"
"可以为工单队列视图建立索引："

#: ../../content/performance-tuning.rst:23
msgid "``Kernel::System::Ticket::IndexAccelerator::RuntimeDB``"
msgstr "`` Kernel::System::Ticket::IndexAccelerator::RuntimeDB ``"

#: ../../content/performance-tuning.rst:23
msgid ""
"This is the default option, which will generate each queue view on the fly "
"from the ticket table. You will not have performance trouble until you have "
"about 60,000 open tickets in your system."
msgstr ""
"默认选项是从工单列表动态生成队列，这样在你的系统中，未解决的工单数量不超过"
"60,000的情况下，你不会遇到性能问题。"

#: ../../content/performance-tuning.rst:31
msgid "``Kernel::System::Ticket::IndexAccelerator::StaticDB``"
msgstr "`` Kernel::System::Ticket::IndexAccelerator::StaticDB ``"

#: ../../content/performance-tuning.rst:26
msgid ""
"The most powerful module, should be used when you have above 80,000 open "
"tickets. It uses an extra ``ticket_index`` table, which will be populated "
"with keywords based on ticket data. Use the following command for generating "
"an initial index after switching back ends:"
msgstr ""
"当你有80,000张以上的工单时，应使用功能更强大的模块，它使用了额外的"
"``ticket_index``表，该表将根据工单数据提取关键字。切换回后台，使用以下命令生"
"成初始索引："

#: ../../content/performance-tuning.rst:34
msgid "Ticket Search Index"
msgstr "工单查询索引"

#: ../../content/performance-tuning.rst:36
msgid ""
"OTOBO uses a special search index to perform full-text searches across "
"fields in articles from different communication channels."
msgstr ""
"OTOBO使用特殊的搜索索引，对不同通信渠道的文章中的各个字段进行全文搜索。"

#: ../../content/performance-tuning.rst:38
msgid "To create an initial index, use this command:"
msgstr "要创建初始索引，请使用以下命令："

#: ../../content/performance-tuning.rst:46
msgid ""
"Actual article indexing happens via an OTOBO daemon job in the background. "
"While articles which were just added in the system are marked for indexing "
"immediately, it could happen their index is available only after a few "
"minutes."
msgstr ""
"实际的文章索引是通过OTOBO守护程序在后台进行，虽然刚刚添加到系统中的文章会马上"
"被添加初始索引标记，但可能它们的索引几分钟后才可以使用。"

#: ../../content/performance-tuning.rst:48
msgid "There are some options available for fine-tuning the search index:"
msgstr "有一些选项可以对搜索索引进行微调："

#: ../../content/performance-tuning.rst:51
msgid "``Ticket::SearchIndex::IndexArchivedTickets``"
msgstr "`` Ticket::SearchIndex::IndexArchivedTickets ``"

#: ../../content/performance-tuning.rst:51
msgid ""
"Defines if archived tickets will be included in the search index (disabled "
"by default). This is advisable to keep the index small on large systems with "
"archived tickets. If this is enabled, archived tickets will be found by full-"
"text searches."
msgstr ""
"确认是否将已归档的工单包括在搜索索引中（默认情况下禁用）。建议在拥有已归档工"
"单的大型系统上，索引尽量小。如果启用此选项，将可以通过全文搜索找到已归档的工"
"单。"

#: ../../content/performance-tuning.rst:73
msgid "``Ticket::SearchIndex::Attribute``"
msgstr "`` Ticket::SearchIndex::Attribute ``"

#: ../../content/performance-tuning.rst:54
msgid "Basic full-text index settings."
msgstr "基础全文字检索设置。"

#: ../../content/performance-tuning.rst:59
msgid "``Ticket::SearchIndex::Attribute`` Setting"
msgstr "``Ticket::SearchIndex::Attribute`` 设置"

#: ../../content/performance-tuning.rst:63
msgid "Run the following command in order to generate a new index:"
msgstr "运行以下命令以便生成新的索引："

#: ../../content/performance-tuning.rst:70
msgid "``WordCountMax``"
msgstr "`` WordCountMax ``"

#: ../../content/performance-tuning.rst:70
msgid ""
"Defines the maximum number of words which will be processed to build up the "
"index. For example only the first 1000 words of an article body are stored "
"in the article search index."
msgstr ""
"定义可以处理建立索引的最大单词数量，例如，文章正文中仅前1000个单词存储在文章"
"搜索索引中。"

#: ../../content/performance-tuning.rst:73
msgid "``WordLengthMin`` and ``WordLengthMax``"
msgstr "``WordLengthMin`` and ``WordLengthMax``"

#: ../../content/performance-tuning.rst:73
msgid ""
"Used as word length boundaries. Only words with a length between these two "
"values are stored in the article search index."
msgstr ""
"字长边界，作为文章搜索索引中上下区间数值，只有在区间数据以内的单词才会存在索"
"引中。"

#: ../../content/performance-tuning.rst:87
msgid "``Ticket::SearchIndex::Filters``"
msgstr "`` Ticket::SearchIndex::Filters ``"

#: ../../content/performance-tuning.rst:76
msgid ""
"Filters based on regular expressions exclude parts of the original text from "
"the full-text index."
msgstr ""

#: ../../content/performance-tuning.rst:81
msgid "``Ticket::SearchIndex::Filters`` Setting"
msgstr "``Ticket::SearchIndex::Filters`` 设置"

#: ../../content/performance-tuning.rst:83
msgid "There are three default filters defined:"
msgstr "定义了三个默认过滤器："

#: ../../content/performance-tuning.rst:85
msgid ""
"The first filter strips out special chars like: , & < > ? \" ! * | ; [ ] ( ) "
"+ $ ^ ="
msgstr "第一个过滤器会去除特殊字符，例如：，＆<>？ “！* |; []（）+ $ ^ ="

#: ../../content/performance-tuning.rst:86
msgid ""
"The second filter strips out words which begin or end with one of following "
"chars: ' : ."
msgstr "第二个过滤器会去除以以下字符之一开头或结尾的单词：'：。"

#: ../../content/performance-tuning.rst:87
msgid ""
"The third filter strips out words which do not contain a word character: a-"
"z, A-Z, 0-9, _"
msgstr "第三个过滤器会去除不包含单词字符的单词：a-z，A-Z，0-9，_"

#: ../../content/performance-tuning.rst:103
msgid "``Ticket::SearchIndex::StopWords``"
msgstr "`` Ticket::SearchIndex::StopWords ``"

#: ../../content/performance-tuning.rst:90
msgid ""
"English stop words for full-text index. These words will be removed from the "
"search index."
msgstr "全文索引的英语停用词，这些单词将从搜索索引中删除。"

#: ../../content/performance-tuning.rst:95
msgid "``Ticket::SearchIndex::StopWords###en`` Setting"
msgstr "``Ticket::SearchIndex::StopWords###en`` 设置"

#: ../../content/performance-tuning.rst:97
msgid ""
"There are so-called stop-words defined for some languages. These stop-words "
"will be skipped while creating the search index."
msgstr "有些语言定义了所谓的停用词。创建搜索索引时，将跳过这些停用词。"

#: ../../content/performance-tuning.rst:100
msgid ""
"If your language is not in the system configuration settings or you want to "
"add more words, you can add them to this setting:"
msgstr ""
"如果您的语言不在系统配置设置中，或者您想添加更多单词，则可以将它们添加到此设"
"置中："

#: ../../content/performance-tuning.rst:102
msgid "``Ticket::SearchIndex::StopWords###Custom``"
msgstr "`` Ticket::SearchIndex::StopWords###Custom ``"

#: ../../content/performance-tuning.rst:106
msgid "Document Search"
msgstr "文档搜索"

#: ../../content/performance-tuning.rst:108
msgid ""
"OTOBO uses Elasticsearch for its document search functionality. For a good "
"introduction into the concepts, installation and usage of Elasticsearch, "
"please follow the `Getting Started guide <https://www.elastic.co/guide/en/"
"elasticsearch/reference/current/getting-started.html>`__."
msgstr ""
"OTOBO使用Elasticsearch作为其文档搜索，要对Elasticsearch的概念、安装和使用进行"
"介绍，请遵循“入门指南<https://www.elastic.co/guide/zh-cn/elasticsearch/"
"reference/current/getting-started.html>” __ 。"

#: ../../content/performance-tuning.rst:112
msgid "Heap Size"
msgstr "堆尺寸"

#: ../../content/performance-tuning.rst:114
msgid ""
"Elasticsearch is written in Java and therefore runs in a Java Virtual "
"Machine (JVM) on any cluster node. Such a JVM uses a part of the memory, "
"called *heap*, which size can be configured in configuration file ``jvm."
"options``."
msgstr ""
"Elasticsearch用Java编写，可以在任何群集节点上的Java虚拟机（JVM）中运行。这样"
"的JVM使用一部分内存，称为*堆*，其大小可以在配置文件``jvm.options''中进行配"
"置。"

#: ../../content/performance-tuning.rst:116
msgid ""
"The heap minimum and maximum configurations are by default set to a value of "
"1 GB and can be modified with the following options:"
msgstr "默认情况下，堆的最小和最大配置设置为1 GB，可以使用以下选项进行修改："

#: ../../content/performance-tuning.rst:118
msgid "``Xms1g``: minimum heap size."
msgstr "``Xms1g`` ：最小堆尺寸。"

#: ../../content/performance-tuning.rst:119
msgid "``Xmx1g``: maximum heap size."
msgstr "``Xmx1g``: maximum heap size."

#: ../../content/performance-tuning.rst:121
msgid ""
"If the ``Xms`` has a lower value than ``Xmx``, the JVM will resize the used "
"heap anytime the current limit is exceeded, until the value of ``Xmx`` is "
"reached. Such a resizing causes the service to pause until it is finished, "
"which may decrease the speed and reactivity of the search or indexing "
"actions. Therefore it is highly recommended to set those configurations to "
"an equal value."
msgstr ""
"如果``Xms''的值比``Xmx''的值低，那么只要超过当前限制，JVM就会调整已使用堆的大"
"小，直到达到``Xmx''的值为止。这种调整大小会导致服务暂停直到完成为止，这可能会"
"降低搜索或索引操作的速度和反应性。因此，强烈建议将这些配置设置为相等的值。"

#: ../../content/performance-tuning.rst:125
msgid ""
"If the maximum heap size is exceeded, the related cluster node stops working "
"and might even shutdown the service."
msgstr ""
"如果超过了堆大小的最大值，则相关的群集节点将停止工作，甚至可能关闭服务。"

#: ../../content/performance-tuning.rst:127
msgid ""
"The higher the heap maximum value is set, the more memory can be used by "
"Elasticsearch, which also increases the possible pauses for garbage "
"collection, done by the JVM. Therefore it is recommended to set a value for "
"``Xmx``, that is not higher than 50% of the physical memory."
msgstr ""
"堆最大值设置得越高，Elasticsearch可以使用更多的内存，这也增加了JVM进行垃圾收"
"集的可能暂停。因此建议为``Xmx''设置一个不大于物理内存50％的值。"

#: ../../content/performance-tuning.rst:129
msgid ""
"For more information and good rules of thumb about the heap size, please "
"follow `the official documentation <https://www.elastic.co/guide/en/"
"elasticsearch/reference/current/heap-size.html>`__."
msgstr ""
"有关更多信息和有关堆大小的良好经验法则，请遵循`官方文档 <https://www.elastic."
"co/guide/en/elasticsearch/reference/current/heap-size.html>`__。"

#: ../../content/performance-tuning.rst:133
msgid "Disk Allocation"
msgstr "磁盘分配"

#: ../../content/performance-tuning.rst:135
msgid ""
"While running the service, Elasticsearch inspects the available disk space. "
"Based on the result, it decides whether to allocate new shards to a cluster "
"node. In some cases it even relocates shards away from a node. This behavior "
"is determined by the current disk capacity. It can be configured by settings "
"in the configuration file *elasticsearch.yml*. Here are some relevant "
"configuration settings. They come with good default values, but might be "
"important in trouble shooting."
msgstr ""
"在服务运行期间，Elasticsearch检查可用的磁盘空间，并因此决定是将新的分片分配给"
"相关的群集节点，还是将分片从该特定节点移开。这种行为将由当前磁盘容量控制，并"
"可以在配置文件“ elasticsearch.yml”中进行配置。随附一些重要的配置，这些配置带"
"有较好的默认值，这很重要。"

#: ../../content/performance-tuning.rst:142
msgid "``cluster.routing.allocation.disk.watermark.low``"
msgstr "`` cluster.routing.allocation.disk.watermark.low ``"

#: ../../content/performance-tuning.rst:141
msgid ""
"Default value of 85%. When this limit is exceeded, Elasticsearch will no "
"longer allocate more shards to the related cluster node. The operation of "
"that node is not influenced and data can still be indexed and searched."
msgstr ""
"默认值为85％。如果超出此限制，Elasticsearch将不会向相关集群节点分配更多的分"
"片。该节点的操作不会受到影响，并且仍然可以对数据进行索引和搜索。"

#: ../../content/performance-tuning.rst:145
msgid "``cluster.routing.allocation.disk.watermark.high``"
msgstr "``cluster.routing.allocation.disk.watermark.high``"

#: ../../content/performance-tuning.rst:145
msgid ""
"Default value of 90%. When this limit is exceeded, Elasticsearch will try to "
"relocate existing shards to other nodes that have enough space available."
msgstr ""
"默认值为90％。如果超出此限制，Elasticsearch将尝试将现有分片重新定位到具有足够"
"可用空间的其他节点（如果可能）。"

#: ../../content/performance-tuning.rst:149
msgid "``cluster.routing.allocation.disk.watermark.flood_stage``"
msgstr "`` cluster.routing.allocation.disk.watermark.flood_stage ``"

#: ../../content/performance-tuning.rst:148
msgid ""
"Default value of 95%. When this limit is exceeded, Elasticsearch will update "
"the configuration of all indices, that have at least one shard allocated to "
"the related cluster node, to read-only index blocks. Specifically, they are "
"flagged with ``index.blocks.read_only_allow_delete``."
msgstr ""
"默认值为95％。如果超出此限制，Elasticsearch将所有索引的配置更新为只读索引块“ "
"index.blocks.read_only_allow_delete”，其中至少一个分片分配给相关的集群节点。"
"从那时起，就不可能将新数据编入此类索引，并且无法进行搜索和删除操作。"

#: ../../content/performance-tuning.rst:149
msgid ""
"After that update, it is no longer possible to index new data to such "
"indices. The indexes are restricted to searches and to delete actions only."
msgstr ""

#: ../../content/performance-tuning.rst:153
msgid ""
"If the flood stage was exceeded and certain indices are configured to read-"
"only mode, such configuration *will not* automatically be changed by "
"Elasticsearch. If the related disks contain enough free space again due to "
"manual actions, it is needed to change the configuration back to normal mode "
"manually."
msgstr ""
"如果超出了洪水阶段，并且某些索引被配置为只读模式，则这种配置*不会*被"
"Elasticsearch自动更改。如果相关磁盘由于手动操作而再次包含足够的可用空间，则需"
"要将配置手动更改回普通模式。"

#: ../../content/performance-tuning.rst:155
msgid ""
"For more information about disk watermarks and disk-based shard allocation, "
"please follow `the official documentation <https://www.elastic.co/guide/en/"
"elasticsearch/reference/current/disk-allocator.html>`__."
msgstr ""
"有关磁盘水印和基于磁盘的分片分配的更多信息，请遵循 `官方文档 <https://www."
"elastic.co/guide/en/elasticsearch/reference/current/disk-allocator.html>`__。"

#: ../../content/performance-tuning.rst:159
msgid "Article Storage"
msgstr "物品存放"

#: ../../content/performance-tuning.rst:161
msgid ""
"There are two different back end modules for the article storage of phone, "
"email and internal articles. The used article storage can be configured in "
"the setting ``Ticket::Article::Backend::MIMEBase::ArticleStorage``."
msgstr ""
"对于电话，电子邮件和内部物品的存储，有两个不同的后端模块。可以在``Ticket :: "
"Article :: Backend :: MIMEBase :: ArticleStorage``中配置使用过的物品存储空"
"间。"

#: ../../content/performance-tuning.rst:168
msgid ""
"``Kernel::System::Ticket::Article::Backend::MIMEBase::ArticleStorageDB``"
msgstr ""
"`` Kernel::System::Ticket::Article::Backend::MIMEBase::ArticleStorageDB ``"

#: ../../content/performance-tuning.rst:164
msgid ""
"This default module will store attachments in the database. It also works "
"with multiple front end servers, but requires much storage space in the "
"database."
msgstr ""
"这个默认模块将附件存储在数据库中，还可以与多个前端服务器一起使用，但是需要很"
"多数据库存储空间。"

#: ../../content/performance-tuning.rst:168
msgid "Don't use this with large setups."
msgstr "不要将其用于大型系统。"

#: ../../content/performance-tuning.rst:175
msgid ""
"``Kernel::System::Ticket::Article::Backend::MIMEBase::ArticleStorageFS``"
msgstr ""
"`` Kernel::System::Ticket::Article::Backend::MIMEBase::ArticleStorageFS ``"

#: ../../content/performance-tuning.rst:171
msgid ""
"Use this module to store attachments on the local file system. It is fast, "
"but if you have multiple front end servers, you must make sure the file "
"system is shared between the servers. Place it on an NFS share or preferably "
"a SAN or similar solution."
msgstr ""
"使用此模块可将附件存储在本地文件系统上。这样速度很快，但是如果你有多个前端服"
"务器，则必须确保文件系统在服务器之间可以共享。可以将其放在NFS共享文件系统，当"
"然最好放在SAN或类似解决方案上。"

#: ../../content/performance-tuning.rst:175
msgid "Recommended for large setups."
msgstr "建议用于大型系统。"

#: ../../content/performance-tuning.rst:177
msgid ""
"You can switch from one back end to the other on the fly. You can switch the "
"back end in the system configuration, and then run this command line utility "
"to put the articles from the database onto the file system or the other way "
"around:"
msgstr ""
"您可以即时从一个后端切换到另一个。您可以在系统配置中切换后端，然后运行此命令"
"行实用程序将物品从数据库放到文件系统上，或者以其他方式："

#: ../../content/performance-tuning.rst:183
msgid "You can use the ``--target`` option to specify the target back end."
msgstr "您可以使用 ``--target`` 选项指定目标后端。"

#: ../../content/performance-tuning.rst:187
msgid ""
"The entire process can take considerable time to run, depending on the "
"number of articles you have and the available CPU power and/or network "
"capacity."
msgstr ""
"根据您拥有的物品数量、可用的CPU能力和/或网络容量，整个过程可能需要花费大量时"
"间才能运行。"

#: ../../content/performance-tuning.rst:189
msgid ""
"If you want to keep old attachments in the database, you can activate the "
"system configuration option ``Ticket::Article::Backend::MIMEBase::"
"CheckAllStorageBackends`` to make sure OTOBO will still find them."
msgstr ""
"如果要将旧附件保留在数据库中，则可以激活系统配置选项``Ticket :: Article :: "
"Backend :: MIMEBase :: CheckAllStorageBackends``以确保OTOBO仍然可以找到它们。"

#: ../../content/performance-tuning.rst:193
msgid "Archiving Tickets"
msgstr "封存工单"

#: ../../content/performance-tuning.rst:195
msgid ""
"As OTOBO can be used as an audit-proof system, deleting closed tickets may "
"not be a good idea. Therefore there is a feature that allows you to archive "
"tickets."
msgstr ""
"由于OTOBO的数据可用作审查证据，因此删除已关闭的工单可能不是一个好主意，这项功"
"能可让您封存工单。"

#: ../../content/performance-tuning.rst:197
msgid ""
"Tickets that match certain criteria can be marked as archived. These tickets "
"are not accessed if you do a regular ticket search or run a generic agent "
"job. The system itself does not have to deal with a huge amount of tickets "
"any longer as only the latest tickets are taken into consideration when "
"using OTOBO. This can result in a huge performance gain on large systems."
msgstr ""
"符合特定条件的故障单可以标记为已存档。这样在你进行常规工单搜索或进行常规话务"
"员工作时，不会访问这些工单。这样系统不再需要处理大量旧工单，而是仅考虑最新的"
"工单，这可以在大型系统上获得巨大的性能提升。"

#: ../../content/performance-tuning.rst:199
msgid "To use the archive feature:"
msgstr "要使用存档功能："

#: ../../content/performance-tuning.rst:201
msgid ""
"Activate the ``Ticket::ArchiveSystem`` setting in the system configuration."
msgstr "在系统配置中激活 ``Ticket::ArchiveSystem``设置。"

#: ../../content/performance-tuning.rst:202
msgid "Define a generic agent job:"
msgstr "定义通用话务员工作："

#: ../../content/performance-tuning.rst:204
msgid "Click on the *Add Job* button in the *Generic Agent* screen."
msgstr "单击*通用话务员*屏幕中的*添加工作*按钮。"

#: ../../content/performance-tuning.rst:205
msgid "*Job Settings*: provide a name for the archiving job."
msgstr "*工作配置*：为封存工作提供一个名字。"

#: ../../content/performance-tuning.rst:206
msgid "*Automatic Execution*: select proper options to schedule this job."
msgstr "*自动化执行*：为工作的时间安排选择合适的选项。"

#: ../../content/performance-tuning.rst:207
msgid ""
"*Select Tickets*: it might be a good idea to only archive those tickets in a "
"closed state that have been closed a few months before."
msgstr "*选择票证*：最好只归档几个月前就已经完成关闭的那些工单。"

#: ../../content/performance-tuning.rst:208
msgid ""
"*Update/Add Ticket Attributes*: set the field *Archive selected tickets* to "
"*archive tickets*."
msgstr "*更新/添加工单属性*：将字段*将所选工单存档*设置为*存档工单*。"

#: ../../content/performance-tuning.rst:209
msgid "Save the job at the end of the page."
msgstr "将工作保存在页面末尾。"

#: ../../content/performance-tuning.rst:210
msgid ""
"Click on the *Run this task* link in the overview table to see the affected "
"tickets."
msgstr "单击概述表中的*运行此任务*的链接，查看受到影响的工单。"

#: ../../content/performance-tuning.rst:211
msgid "Click on the *Run Job* button."
msgstr "点击*运行工作*按钮。"

#: ../../content/performance-tuning.rst:215
msgid "Up to 5000 tickets can be modified by running this job manually."
msgstr "手动运行这项工作最多可以修改5000张工单。"

#: ../../content/performance-tuning.rst:217
msgid ""
"When you search for tickets, the system default is to search tickets which "
"are not archived."
msgstr "搜索工单时，系统默认只搜索未归档的工单。"

#: ../../content/performance-tuning.rst:219
msgid "To search for archived tickets:"
msgstr "要搜索已经归档的工单："

#: ../../content/performance-tuning.rst:221
msgid "Open the ticket search screen."
msgstr "打款工单搜索界面。"

#: ../../content/performance-tuning.rst:222
msgid "Set *Archive search* to *Unarchived tickets* or *All tickets*."
msgstr "将*归档搜索*设置为*未归档工单*或者*所有工单*。"

#: ../../content/performance-tuning.rst:223
msgid "Perform the search."
msgstr "进行搜索。"

#: ../../content/performance-tuning.rst:227
msgid "Caching"
msgstr "缓存"

#: ../../content/performance-tuning.rst:229
msgid ""
"A fast cache module is a great help in terms of performance. We recommend to "
"use a Redis Cache server or to create a ramdisk."
msgstr ""
"快速缓存模块在性能方面有很大的帮助，我们建议使用Redis Cache服务器或创建虚拟硬"
"盘。"

#: ../../content/performance-tuning.rst:232
msgid "Install a Redis Cache Server"
msgstr "安装一个 Redis Cache服务器"

#: ../../content/performance-tuning.rst:234
msgid "Install Redis Server"
msgstr "安装Redis服务器"

#: ../../content/performance-tuning.rst:236
msgid ""
"First of all you need to install the newest Redis Server. The easiest way is "
"to `setup Redis <https://redis.io/topics/quickstart>`__ on the same host as "
"OTOBO and binding it to its default port."
msgstr ""
"首先，你需要安装最新的Redis服务器。最简单的方法是在与OTOBO相同的主机上`配置"
"Redis <https://redis.io/topics/quickstart>`__并将其绑定到其默认端口。"

#: ../../content/performance-tuning.rst:240
msgid "Install Perl module Redis or Redis::Fast"
msgstr "安装Redis Perl 模块或者Redis::Fast"

#: ../../content/performance-tuning.rst:242
msgid ""
"You can choose which Redis module to use: `Redis` or `Redis::Fast` (which is "
"compatible with `Redis` but **~2x faster**). Please use ``otobo.CheckModules."
"pl --list`` to choose the right package for you:"
msgstr ""
"你可以选择要使用的Redis模块：`Redis`或`Redis :: Fast`（与`Redis`兼容，但**快2"
"倍**）。请使用我们的``otobo.CheckModules.pl --list`` 为您选择合适的软件包："

#: ../../content/performance-tuning.rst:249
msgid "Configure OTOBO for Redis"
msgstr "为Redis进行OTOBO设置"

#: ../../content/performance-tuning.rst:251
msgid ""
"Please use the OTOBO `SysConfig` (Admin -> System Configuration) to "
"configure OTOBO properly:"
msgstr "请使用OTOBO`SysConfig`（管理员->系统配置）正确配置OTOBO："

#: ../../content/performance-tuning.rst:264
msgid "RamDisk Caching"
msgstr "虚拟磁盘缓存"

#: ../../content/performance-tuning.rst:266
msgid ""
"OTOBO caches a lot of temporary data in ``/opt/otobo/var/tmp``. Please make "
"sure that this uses a high performance file system and storage. If you have "
"enough RAM, you can also try to put this directory on a ramdisk like this:"
msgstr ""
"OTOBO在/ opt / otobo / var / tmp中缓存了许多临时数据，请确保这里使用的是高性"
"能的文件和存储系统。如果你有足够的RAM，也可以尝试将此目录放在如下所示的虚拟磁"
"盘上："

#: ../../content/performance-tuning.rst:276
msgid "Add persistent mount point in ``/etc/fstab``."
msgstr "在``/ etc / fstab``中添加持久挂载点。"

#: ../../content/performance-tuning.rst:280
msgid ""
"This will be a non-permanent storage that will be lost on server reboot. All "
"your sessions (if you store them in the file system) and your cache data "
"will be lost."
msgstr ""
"这不是一个永久性存储，将会在服务器重启时丢失，从而你的所有会话（如果你将它们"
"存储在文件系统中）和缓存数据都会丢失。"

#: ../../content/performance-tuning.rst:283
msgid "Clustering"
msgstr "集群"

#: ../../content/performance-tuning.rst:285
msgid ""
"For very high loads, it can be required to operate OTOBO on a cluster of "
"multiple front end servers. This is a complex task with many pitfalls. We "
"strongly advise to get in touch with our experts before trying to implement "
"this on your own."
msgstr ""
"对于非常高的生产负载，可能需要在多个前端服务器的群集上运行OTOBO，这项工作很复"
"杂，也有很多陷阱。因此，Rother OSS专门在其 `管理OTOBO <https://otobo.de/>`__ "
"环境中为集群应用提供支持。"

#: ../../content/requirements.rst:12
msgid "Hardware and Software Requirements"
msgstr "软硬件要求"

#: ../../content/requirements.rst:14
#, fuzzy
msgid ""
"The OTOBO web application can be installed on Linux and other Unix "
"derivates, e.g. OpenBSD or FreeBSD. Running OTOBO on Microsoft Windows is "
"not supported."
msgstr ""
"OTOBO可以安装在Linux和其他Unix派生版本（例如OpenBSD或FreeBSD）上，不支持在"
"Microsoft Windows上运行OTOBO。"

#: ../../content/requirements.rst:17
msgid ""
"The web application uses a relational database as backend. So, to run OTOBO, "
"you'll need to run at least a web server and a database server. The web "
"server and the database server may be installed either on the same or on "
"different hosts."
msgstr ""

#: ../../content/requirements.rst:20
msgid ""
"Alternatively, OTOBO can also run under Docker. When running under Docker, "
"the web and the database server are already included in the setup. Support "
"for deployment with Kubernetes is under development."
msgstr ""

#: ../../content/requirements.rst:23
#, fuzzy
msgid ""
"The OTOBO web application requires Perl along with additional Perl modules "
"from CPAN. The modules can be installed either with a Perl package manager "
"or via the package manager of your operating system (rpm, yast, apt-get). "
"There is a console command for checking the module dependencies:"
msgstr ""
"对于Perl，你还需要一些其他模块，这些模块可以与CPAN的Perl一起安装，也可以通过"
"操作系统的软件包管理器（rpm，yast，apt-get）进行安装。"

#: ../../content/requirements.rst:32
#, fuzzy
msgid ""
"If some packages are missing, you can get an install command for your "
"operating system by running the script with the ``--list`` option."
msgstr ""
"如果缺少某些软件包，可以用``--list``选项运行脚本，获取操作系统的安装命令。"

#: ../../content/requirements.rst:38
msgid "The listed commands should then be executed with root privileges."
msgstr "将以root权限执行列出的命令。"

#: ../../content/requirements.rst:40
msgid ""
"The output of the module check script shows the installed packages and the "
"version numbers. Missing modules are marked with a comment."
msgstr ""
"模块检查脚本的输出，会显示已安装的软件包和版本号。缺失的模块会带着注释。"

#: ../../content/requirements.rst:116
msgid "Hardware Requirements"
msgstr "硬件要求"

#: ../../content/requirements.rst:118
msgid ""
"Hardware requirements highly depend on the usage of OTOBO. OTOBO can be used "
"to process a few tickets per month or to process hundreds of tickets per "
"day. The storage requirement also depends on the number of tickets and size "
"of attachments."
msgstr ""
"硬件要求在很大程度上取决于OTOBO的使用情况，因为 OTOBO可以用于每月处理几张工"
"单，或着每天处理数百张工单。而其存储要求还取决于工单的数量和附件的尺寸。"

#: ../../content/requirements.rst:120
msgid "We recommend using a machine for testing purposes with **at least**:"
msgstr "我们建议使用一台计算机进行测试并**至少**具备以下条件："

#: ../../content/requirements.rst:122
msgid "small CPU"
msgstr "小CPU"

#: ../../content/requirements.rst:123
msgid "4 GB RAM"
msgstr "4 GB 内存"

#: ../../content/requirements.rst:124
msgid "10 GB storage"
msgstr "10 GB 存储空间"

#: ../../content/requirements.rst:126
msgid "We recommend using a machine for production purpose with **at least**:"
msgstr "我们建议为生产环境准备一台计算机，并**至少**具备以下条件："

#: ../../content/requirements.rst:128
msgid "3 GHz Xeon or comparable CPU"
msgstr "3 GHz Xeon 或兼容的 CPU"

#: ../../content/requirements.rst:129
msgid "8 GB RAM (16 GB recommend)"
msgstr "8 GB 内存 （建议 16 GB）"

#: ../../content/requirements.rst:130
msgid "40 GB storage"
msgstr "40 GB 存储空间"

#: ../../content/requirements.rst:134
msgid ""
"Hardware requirements depend on the usage of OTOBO. Please contact your "
"OTOBO consultant before deploying any hardware."
msgstr "硬件要求取决于OTOBO的使用，请在部署任何硬件之前，联系你的OTOBO顾问。"

#: ../../content/requirements.rst:137
msgid "Software requirements"
msgstr "软件要求"

#: ../../content/requirements.rst:141
msgid "Perl"
msgstr "Perl"

#: ../../content/requirements.rst:140
msgid "Perl 5.24.0 or higher"
msgstr "Perl 5.24.0 或更高版本"

#: ../../content/requirements.rst:141
#, fuzzy
msgid ""
"Perl packages listed by ``/opt/otobo/bin/otobo.CheckModules.pl --list`` "
"console command"
msgstr "控制台命令``/opt/otobo/bin/otobo.CheckModules.pl``会列出Perl软件包"

#: ../../content/requirements.rst:144
#, fuzzy
msgid "Web Server"
msgstr "Web服务器"

#: ../../content/requirements.rst:144
msgid "Apache HTTP Server Version 2.4"
msgstr ""

#: ../../content/requirements.rst:150
msgid "Databases"
msgstr "数据库"

#: ../../content/requirements.rst:147
msgid "MySQL 5.6 or higher"
msgstr "MySQL 5.6或更高版本"

#: ../../content/requirements.rst:148
msgid "MariaDB"
msgstr "MariaDB"

#: ../../content/requirements.rst:149
msgid "PostgreSQL 9.2 or higher"
msgstr "PostgreSQL 9.2 或更高版本"

#: ../../content/requirements.rst:150
msgid "Oracle 10g or higher"
msgstr "Oracle 10g 或更高版本"

#: ../../content/requirements.rst:155
msgid "Optional"
msgstr "可选"

#: ../../content/requirements.rst:153
msgid "Elasticsearch 7.x (fast search function for live previews)"
msgstr "Elasticsearch 7.x（实时预览的快速搜索功能）"

#: ../../content/requirements.rst:154
#, fuzzy
msgid "Redis (fast caching)"
msgstr "启用Redis进行快速缓存。"

#: ../../content/requirements.rst:155
#, fuzzy
msgid ""
"nginx or any other web server that can be used as a reverse proxy (SSL "
"support and load distribution)"
msgstr "任何其他的可以用作反向代理的Web服务器"

#: ../../content/requirements.rst:162
msgid "Web browsers"
msgstr "网络浏览器"

#: ../../content/requirements.rst:158
msgid "Apple Safari"
msgstr "苹果 Safari"

#: ../../content/requirements.rst:159
msgid "Google Chrome"
msgstr "谷歌 Chrome"

#: ../../content/requirements.rst:160
msgid "Microsoft Internet Explorer 11"
msgstr "微软 Internet Explorer 11"

#: ../../content/requirements.rst:161
msgid "Microsoft Edge"
msgstr "微软 Edge"

#: ../../content/requirements.rst:162
msgid "Mozilla Firefox"
msgstr "Mozilla Firefox"

#: ../../content/requirements.rst:163
msgid "Any other modern web browser with JavaScript support"
msgstr "其他任何支持JavaScript的网络浏览器"

#: ../../content/sso-kerberos.rst:12
msgid "Kerberos Single Sign On in OTOBO Docker installation"
msgstr ""

#: ../../content/sso-kerberos.rst:14
msgid ""
"Please read to the chapter :doc:`installation-docker` for basic information "
"about installing and configure OTOBO. This tutorial assumes that OTOBO has "
"been installed and configured using Docker."
msgstr ""

#: ../../content/sso-kerberos.rst:19
msgid ""
"In the following, we will refer from AD (Active Directory), of course the "
"Kerberos configuration is also possible under LDAP."
msgstr ""

#: ../../content/sso-kerberos.rst:23
msgid "Generate Active Directory User"
msgstr ""

#: ../../content/sso-kerberos.rst:25
msgid ""
"Please create a new Active Directory User with the following settings and "
"save the marked settings:"
msgstr ""

#: ../../content/sso-kerberos.rst:29
msgid ""
"Please use as Username only this syntax: `HTTP/fqdn.from.your.otobo.de`. "
"`fqdn.from.your.otobo.de` needs to be a A-Record DNS entry, not a CNAME! In "
"the next step, it is also possible to use other URLs for OTOBO, they must "
"then point as CNAME to our A-record defined above."
msgstr ""

#: ../../content/sso-kerberos.rst:32
msgid ""
"The username part \"HTTP/\" should be written in capital letters, as "
"Kerberos expects it that way."
msgstr ""

#: ../../content/sso-kerberos.rst:34
msgid ""
"The password doesn't work properly with some special characters (e.g. '&')."
msgstr ""

#: ../../content/sso-kerberos.rst:36
msgid ""
"You have to create a seperate AD-user. You can not use the one that you "
"already use for your LDAP/AD sync."
msgstr ""

#: ../../content/sso-kerberos.rst:43
msgid "Generate Active Directory Keytab file"
msgstr ""

#: ../../content/sso-kerberos.rst:45
msgid ""
"In the next step, we connect to a domain controller of the Active Directory "
"and open a console (cmd) there with administrator privileges. Now we use the "
"tool `ktpass.exe`to generate the needed keytab file:"
msgstr ""

#: ../../content/sso-kerberos.rst:53
msgid ""
"`-princ = HTTP/otrs32-centos6.otrs.local@OTRS.LOCAL -> Picture Number "
"1+@+Picture Number 2`"
msgstr ""

#: ../../content/sso-kerberos.rst:54
msgid ""
"`-mapuser = OTRS\\otrs32-centos6  (Username prä Win 2000) ->  -> Picture "
"Number 3+\\+Picture Number`"
msgstr ""

#: ../../content/sso-kerberos.rst:55
msgid "`-pass = Password from user otrs32-centos6 (Active Directory User)`"
msgstr ""

#: ../../content/sso-kerberos.rst:56
msgid "`-out = c:/krb5.keytab`"
msgstr ""

#: ../../content/sso-kerberos.rst:60
msgid ""
"Please write the domain (@OTRS.LOCAL) always in capital letters. The "
"password must not contain some special characters."
msgstr ""

#: ../../content/sso-kerberos.rst:63
msgid "In the next step please move the krb5.keytab file to the OTOBO Server:"
msgstr ""

#: ../../content/sso-kerberos.rst:74
msgid "Create a new volume for your custom nginx configuration"
msgstr ""

#: ../../content/sso-kerberos.rst:94
#, fuzzy
msgid "Create new OTOBO .env file"
msgstr "2. 创建初始*.env*文件"

#: ../../content/sso-kerberos.rst:96
msgid ""
"First of all we need to move the old file ``/opt/otobo-docker/.env`` to ``."
"env.tmp`` and create a new ``.env`` file including the kerberos settings."
msgstr ""

#: ../../content/sso-kerberos.rst:110
msgid ""
"Now copy your existing configuration options to the new .env file (at least "
"OTOBO_DB_ROOT_PASSWORD, OTOBO_NGINX_SSL_CERTIFICATE, "
"OTOBO_NGINX_SSL_CERTIFICATE_KEY) and insert the following Kerberos settings:"
msgstr ""

#: ../../content/sso-kerberos.rst:113
msgid ""
"# Kerberos keytab OTOBO_NGINX_KERBEROS_KEYTAB=/opt/otobo-docker/nginx-conf/"
"krb5.keytab"
msgstr ""

#: ../../content/sso-kerberos.rst:116
msgid ""
"# Kerberos config (Important, please comment out this option like here!) # "
"In default configuration the krb5.conf file is generated automatically # "
"OTOBO_NGINX_KERBEROS_CONFIG=/opt/otobo-docker/nginx-conf/krb5.conf"
msgstr ""

#: ../../content/sso-kerberos.rst:120
msgid ""
"# Kerberos Service Name OTOBO_NGINX_KERBEROS_SERVICE_NAME=HTTP/otrs32-"
"centos6.otrs.local # -> Picture Number 1"
msgstr ""

#: ../../content/sso-kerberos.rst:123
msgid ""
"# Kerberos REALM OTOBO_NGINX_KERBEROS_REALM=ROTHER-OSS.COM -> OTRS.LOCAL # -"
"> Picture Number 2"
msgstr ""

#: ../../content/sso-kerberos.rst:126
msgid ""
"# Active Directory Domain Controller / Kerberos kdc OTOBO_NGINX_KERBEROS_KDC="
msgstr ""

#: ../../content/sso-kerberos.rst:129
msgid ""
"# Active Directory Domain Controller / Kerberos Admin Server "
"OTOBO_NGINX_KERBEROS_ADMIN_SERVER=rother-oss.com"
msgstr ""

#: ../../content/sso-kerberos.rst:132
#, fuzzy
msgid ""
"# Kerberos Default Domain OTOBO_NGINX_KERBEROS_DEFAULT_DOMAIN=otrs.local"
msgstr "``OTOBO_WEB_HTTP_PORT``"

#: ../../content/sso-kerberos.rst:137
msgid "Start OTOBO"
msgstr ""

#: ../../content/sso-kerberos.rst:139
msgid "After the initial Kerberos configuration we start OTOBO again:"
msgstr ""

#: ../../content/sso-kerberos.rst:148
msgid "Tell OTOBO to use the Kerberos-Authentication"
msgstr ""

#: ../../content/sso-kerberos.rst:150
msgid ""
"In case you have configured AD-Authentication, de-activate it (e.g. by "
"commenting out the respective lines from your Kernel/Config.pm). The "
"authentication will not take place via LDAP anymore."
msgstr ""

#: ../../content/sso-kerberos.rst:153
msgid ""
"To use Kerberos-Authentication take the Kerberos-lines from Kernel/Config/"
"Defaults.pm and put it into you Kernel/Config.pm E.g. these lines could work:"
msgstr ""

#: ../../content/sso-kerberos.rst:166
msgid "Configure Browser to understand Kerberos SSO"
msgstr ""

#: ../../content/sso-kerberos.rst:168
msgid "For SSO to work, the browser must be configured accordingly."
msgstr ""

#: ../../content/sso-kerberos.rst:170
msgid "**Chrome, Edge, Internet Explorer, etc.**"
msgstr ""

#: ../../content/sso-kerberos.rst:172
msgid ""
"Add page under local or trusted pages and activate 'Integrated Windows "
"Authentication' (Internet Options)."
msgstr ""

#: ../../content/sso-kerberos.rst:174
msgid "**Firefox**"
msgstr ""

#: ../../content/sso-kerberos.rst:176
msgid "Enter \"about:config\" in the firefox address line"
msgstr ""

#: ../../content/sso-kerberos.rst:178
#, fuzzy
msgid "and change the following settings:"
msgstr "调整*.env*文件中的以下数值："

#: ../../content/sso-kerberos.rst:180
msgid "network.negotiate-auth.trusted-uris = https:// (or https://otobofqdn)"
msgstr ""

#: ../../content/sso-kerberos.rst:181
msgid "network.negotiate-auth.delegation-uris = http:// (or https://otobofqdn)"
msgstr ""

#: ../../content/sso-kerberos.rst:185
msgid "Debugging and Problems"
msgstr ""

#: ../../content/sso-kerberos.rst:187
msgid ""
"If the Kerberos SSO does not work, please check first if the NGINX container "
"is started:"
msgstr ""

#: ../../content/sso-kerberos.rst:195
msgid "In the next step please check the NGINX logs for more information:"
msgstr ""

#: ../../content/sso-kerberos.rst:203
msgid ""
"If NGINX is running, please login into the NGINX Container and check all "
"needed files:"
msgstr ""

#: ../../content/sso-kerberos.rst:221
msgid "Kerberos debugging"
msgstr ""

#: ../../content/sso-kerberos.rst:228
msgid "Now you are able to debug the Kerberos settings. Examples:"
msgstr ""

#: ../../content/sso-kerberos.rst:242
msgid ""
"In case you stumble upon the issue that apparently the authentication works "
"but the agent is not yet in the database, then your sync (if implemented) "
"might not work. An error 52e (First bind failed) indicates that something is "
"wrong with your Search User. This happens if you use the same user for the "
"AD sync and as a SSO user. Please use seperate AD users for that. In order "
"to not have to create a new keytab and having to repeat the steps mentioned "
"above, it could be easier to create a new user to use in your AD sync "
"(probably in your Kernel/Config.pm)."
msgstr ""

#: ../../content/sso-kerberos.rst:244
msgid ""
"In case SSO is not working properly, make sure: * the user for which it is "
"not working is in Active Directory * the system has to be in the domain * it "
"is properly stated as a trusted page (see 'Configure Browser to understand "
"Kerberos SSO')"
msgstr ""

#: ../../content/updating.rst:12
msgid "Updating"
msgstr "更新"

#: ../../content/updating.rst:16
msgid ""
"It is highly recommended to perform a test update on a separate testing "
"machine first."
msgstr "强烈建议先在单独的测试计算机上对更新进行测试。"

#: ../../content/updating.rst:20
msgid ""
"On Debian systems you may need to manually install some perl packages before "
"upgrading from 10.0 to 10.1"
msgstr ""

#: ../../content/updating.rst:29
msgid "Step 1: Stop All Relevant Services and the OTOBO Daemon"
msgstr "步骤 1：停用所有相关服务和OTOBO守护程序"

#: ../../content/updating.rst:31
msgid ""
"Please make sure there are no more running services or cron jobs that try to "
"access OTOBO. This will depend on your service configuration."
msgstr ""
"请确保没有其他正在运行的服务或cron作业，会尝试访问OTOBO的，当然这将取决于你对"
"服务的配置。"

#: ../../content/updating.rst:39
msgid "Stop OTOBO cron jobs and the daemon (in this order):"
msgstr "停用OTOBO cron作业和守护程序（按照这个顺序）："

#: ../../content/updating.rst:50
msgid "Step 2: Backup Files and Database"
msgstr "步骤 2：备份文件和数据库"

#: ../../content/updating.rst:52
msgid "Create a backup of the hole ``/opt/otobo`` directory and the database."
msgstr "为整个``/opt/otobo``目录和数据库创建备份。"

#: ../../content/updating.rst:55
msgid "Example for a standard installation with Ubuntu and MySQL"
msgstr "一个标准的 Ubuntu 和 MySQL 的安装案例"

#: ../../content/updating.rst:64
msgid ""
"Please check if all files are valid. Now we have a backup with all required "
"data."
msgstr "请检查是否所有文件都有效。现在我们已经拥有了所有需要的数据的备份。"

#: ../../content/updating.rst:68
msgid ""
"Don't proceed without a complete backup of your system. You can use also "
"the :ref:`backup-restore` script for this."
msgstr "没有完整的系统备份，请勿继续。你也可以参考：`backup-restore`脚本。"

#: ../../content/updating.rst:72
msgid "Step 3: Install the New Release"
msgstr "步骤 3：安装新的版本"

#: ../../content/updating.rst:74
msgid ""
"Download the latest otobo release from https://ftp.otobo.org/pub/otobo/. and "
"unpack the source archive (for example, using ``tar``) into the directory ``/"
"root/otobo-update``:"
msgstr ""
"从https://ftp.otobo.org/pub/otobo/下载最新的OTOBO版本软件，打开封装文档（例如"
"使用``tar``命令），并存到目录``/root/otobo-update``："

#: ../../content/updating.rst:86
msgid "Restore Old Configuration Files"
msgstr "恢复旧配置文件"

#: ../../content/updating.rst:88
msgid "We need only copy the file ``Kernel/Config.pm`` in OTOBO 10."
msgstr "在OTOBO 10中，我们只需要拷贝文件``Kernel/Config.pm`` 。"

#: ../../content/updating.rst:97
msgid "Restore Article Data"
msgstr "恢复物品数据"

#: ../../content/updating.rst:99
msgid ""
"If you configured OTOBO to store article data in the file system you have to "
"restore the ``article`` folder to ``/opt/otobo/var/`` or the folder "
"specified in the system configuration."
msgstr ""
"如果你对OTOBO配置，是将物品数据存储在文件系统中，则必须将``article`` 文件夹还"
"原到``/ opt / otobo / var /``或系统配置中指定的文件夹。"

#: ../../content/updating.rst:108
msgid "Restore Already Installed Default Statistics"
msgstr "恢复已经安装的默认统计信息"

#: ../../content/updating.rst:110
msgid ""
"If you have additional packages with default statistics you have to restore "
"the stats XML files with the suffix ``*.installed`` to ``/opt/otobo/var/"
"stats``."
msgstr ""
"如果你还有其他带有默认统计信息的软件包，则必须将后缀为``*.installed`` 的XML统"
"计数据文件恢复到/ opt / otobo / var / stats。"

#: ../../content/updating.rst:119
msgid "Set File Permissions"
msgstr "设置文件许可"

#: ../../content/updating.rst:128
#, fuzzy
msgid "Check Apache configuration files"
msgstr "恢复旧配置文件"

#: ../../content/updating.rst:130
msgid ""
"Newer versions of OTOBO may need you to adjust the apache configuration. "
"From version 10.1 and onwards we moved from CGI to PSGI. Take a look at "
"``scripts/apache2-httpd-vhost-443.include.conf`` to see what settings needs "
"to be adjusted/added."
msgstr ""

#: ../../content/updating.rst:135
msgid "Step 4: Check for new needed perl modules"
msgstr ""

#: ../../content/updating.rst:137
msgid ""
"OTOBO needs new cpan packages for some version jumps. Please check if new "
"packages are needed and install them if necessary."
msgstr ""

#: ../../content/updating.rst:140
msgid "On Debian systems you may need to manually install some packages:"
msgstr ""

#: ../../content/updating.rst:155
#, fuzzy
msgid "Step 5: Update Installed Packages and reconfigure config"
msgstr "步骤 4：更新安装软件包"

#: ../../content/updating.rst:157
msgid ""
"You can use the command below to update all installed packages. This works "
"for all packages that are available from online repositories. You can update "
"other packages later via the package manager (this requires a running OTOBO "
"daemon)."
msgstr ""
"你可以使用下面的命令来更新所有已安装的软件包，这适用于在线存储库中可用的所有"
"软件包。你也可以稍后通过操作系统中的软件包管理器更新其他程序包（这需要运行的"
"OTOBO守护程序）。"

#: ../../content/updating.rst:167
msgid ""
"Step 6: Only for minor or major release upgrades (for example to upgrade "
"from 10.0 to 10.1)"
msgstr ""

#: ../../content/updating.rst:175
#, fuzzy
msgid "Step 7: Start your Services"
msgstr "步骤 5：开始你的服务"

#: ../../content/updating.rst:177
#, fuzzy
msgid "Start OTOBO cron jobs and the daemon (in this order):"
msgstr "停用OTOBO cron作业和守护程序（按照这个顺序）："

#: ../../content/updating.rst:186
msgid ""
"Now the services can be started. This will depend on your service "
"configuration, here is an example:"
msgstr "现在可以启动服务。这将取决于您的服务配置，下面是一个示例："

#: ../../content/updating.rst:194
msgid "Now you can log into your system."
msgstr "现在你可以登陆到你的系统。"

#: ../../content/updating-docker.rst:12
#, fuzzy
msgid "Updating a Docker-based Installation of OTOBO"
msgstr "可以迁移到基于Docker的OTOBO 10"

#: ../../content/updating-docker.rst:14
msgid ""
"For running OTOBO under Docker we need the OTOBO software itself and an "
"environment in which OTOBO can run. The OTOBO Docker image provides the "
"environment and a copy of the OTOBO software. The software itself is "
"installed in the volume *otobo_opt_otobo*. A named volume is used because "
"run time data, e.g. configuration files and installed packages, is stored in "
"the same directory tree."
msgstr ""

#: ../../content/updating-docker.rst:20
msgid "When updating to a new version of OTOBO several things have to happen."
msgstr ""

#: ../../content/updating-docker.rst:22
msgid "The Docker Compose files have to be updated."
msgstr ""

#: ../../content/updating-docker.rst:23
msgid "The Docker Compose config file *.env* has to be checked."
msgstr "更改后的Docker Compose配置可以通过以下方式进行检查。"

#: ../../content/updating-docker.rst:24
msgid "The new Docker image has to be fetched."
msgstr ""

#: ../../content/updating-docker.rst:25
msgid "The volume *otobo_opt_otobo* must be updated."
msgstr "``docker volume inspect otobo_opt_otobo`` 检查一个卷。"

#: ../../content/updating-docker.rst:26
msgid "Some maintainance tasks must be executed."
msgstr ""

#: ../../content/updating-docker.rst:30
msgid ""
"In the sample commands below, the version **10.x.y**, corresponding to the "
"tag **10_x_y**, is used as the example version. Please substitute it with "
"the real version, e.g. **10.0.7**."
msgstr ""

#: ../../content/updating-docker.rst:35
msgid "These instructions apply only to OTOBO 10.0.6 or later."
msgstr "只有OTOBO 10.0.4或更高版本支持以下方法。"

#: ../../content/updating-docker.rst:38
msgid "Updating the Docker Compose files"
msgstr "5. 启动docker-compose映像"

#: ../../content/updating-docker.rst:40
msgid ""
"The OTOBO Docker Compose files can change between releases. Therefore is "
"must be made sure that the correct setup is used."
msgstr ""

#: ../../content/updating-docker.rst:45
msgid ""
"See https://hub.docker.com/r/rotheross/otobo/tags for the available releases."
msgstr ""

#: ../../content/updating-docker.rst:59
#, fuzzy
msgid "Checking the Docker Compose .env file"
msgstr "5. 启动docker-compose映像"

#: ../../content/updating-docker.rst:61
msgid ""
"The file *.env* controls the OTOBO Docker container. Within that file, the "
"variables *OTOBO_IMAGE_OTOBO*, *OTOBO_IMAGE_OTOBO_ELASTICSEARCH*, and "
"*OTOBO_IMAGE_OTOBO_NGINX* declare which images are used. The latest images "
"are used when these variables are not set. If you want to use a specific "
"version, then please set these variables accordingly."
msgstr ""

#: ../../content/updating-docker.rst:67
msgid "Fetch the new Docker images"
msgstr "在Docker情况下"

#: ../../content/updating-docker.rst:69
msgid ""
"Docker compose can be used for fetching the wanted images from https://hub."
"docker.com/r/rotheross/otobo/."
msgstr ""

#: ../../content/updating-docker.rst:80
msgid "Update OTOBO"
msgstr ""

#: ../../content/updating-docker.rst:82
msgid ""
"In this step the volume *otobo_opt_otobo* is updated and the following OTOBO "
"console commands are performed:"
msgstr ""

#: ../../content/updating-docker.rst:84
msgid "Admin::Package::ReinstallAll"
msgstr ""

#: ../../content/updating-docker.rst:85
msgid "Admin::Package::UpgradeAll"
msgstr ""

#: ../../content/updating-docker.rst:86
msgid "Maint::Config::Rebuild"
msgstr ""

#: ../../content/updating-docker.rst:87
msgid "Maint::Cache::Delete"
msgstr ""

#: ../../content/updating-docker.rst:114
msgid ""
"The above listed commands can be automated. For that purpose the script "
"*scripts/update.sh* will be made available in OTOBO 10.0.8. This script runs "
"the commands, starting with the **docker-compose pull** command."
msgstr ""

#~ msgid ""
#~ "`Docker Compose quick start <http://mfg.fhstp.ac.at/development/"
#~ "webdevelopment/docker-compose-ein-quick-start-guide/>`_"
#~ msgstr ""
#~ "`Docker Compose快速启动请参考 <http://mfg.fhstp.ac.at/development/"
#~ "webdevelopment/docker-compose-ein-quick-start-guide/>`_"

#~ msgid "`docker-otrs <https://github.com/juanluisbaptiste/docker-otrs/>`_"
#~ msgstr "`docker-otrs： <https://github.com/juanluisbaptiste/docker-otrs/>`_"

#~ msgid ""
#~ "The project name is used as a prefix for the generated volumes and "
#~ "containers. Must be set because the compose file is located in *scripts/"
#~ "docker-compose* and thus **docker-compose** would be used per default as "
#~ "the project name."
#~ msgstr ""
#~ "项目名称是用作生成的卷和容器的前缀。必须设置，因为编辑的文件位于* "
#~ "scripts / docker-compose *中，默认情况下将使用 **docker-compose**作为项目"
#~ "名称。"

#~ msgid "We will find a way to help you."
#~ msgstr "我们会想办法帮助你。"

#~ msgid "Migration Possibilities"
#~ msgstr "迁移的可能性"

#, fuzzy
#~ msgid "The general strategy support many different combinations:"
#~ msgstr "通常情况下的迁移可以有多种组合。"

#~ msgid "Step 2: Preparing the new OTOBO system and server"
#~ msgstr "步骤 2：准备新的OTOBO系统和服务器"

#~ msgid ""
#~ "Install sshpass and rsysnc if you want to migrate OTRS from another server"
#~ msgstr "如果要从另一台服务器迁移OTRS，请安装sshpass和rsysnc"

#, fuzzy
#~ msgid "Perform the step 3b for migrating to a Docker-based installation."
#~ msgstr "可以迁移到基于Docker的OTOBO 10"

#~ msgid ""
#~ "There are various possibilities for customizing the nginx configuration. "
#~ "One way is to use a locally built image that is derived from the image "
#~ "`otobo-nginx-webproxy`. In such a local image, nginx can be configured in "
#~ "a very flexible way."
#~ msgstr ""
#~ "自定义nginx配置有多种可能性。一种方法是使用从otobo-nginx-webproxy派生的本"
#~ "地镜像。在这样的本地镜像中，可以非常灵活地配置nginx。"

#~ msgid ""
#~ "Another supported approach is to only override the default config "
#~ "template with a customized version. In this case, we have to create a "
#~ "volume that contains the adapted nginx config template, first."
#~ msgstr ""
#~ "另一种可行的方法是使用自定义版本覆盖默认配置模板。在这种情况下，我们必须首"
#~ "先创建一个卷，包含nginx修改后的配置模板。"

#~ msgid ""
#~ "After setting up the volume, the adapted configuration must be activated. "
#~ "In order to achieve this, uncomment or add the following lines in your *."
#~ "env* file:"
#~ msgstr ""
#~ "创立卷之后，必须激活调整后的配置。为此，请取消注释或在* .env *文件中添加以"
#~ "下行："

#~ msgid "*bin/docker/build_docker_images.sh*"
#~ msgstr "*bin/docker/build_docker_images.sh*"

#~ msgid ""
#~ "A 1:1 migration on the same application server with the same database "
#~ "server."
#~ msgstr "在拥有相同数据库服务器的同一个应用服务器上进行1：1迁移。"

#~ msgid ""
#~ "A streamlined migration where the source database is first copied to the "
#~ "target database server."
#~ msgstr "在拥有相同数据库服务器的同一个应用服务器上进行1：1迁移。"

#~ msgid "Copy the otrs database schema to the containerised database server"
#~ msgstr "OTRS数据库模式复制到容器化数据库服务器"

#, fuzzy
#~ msgid ""
#~ "Only the recommended approach is described here. But migration from a "
#~ "running OTRS database is still feasable."
#~ msgstr "这是推荐的方法。但是仍然可以从运行中的OTRS数据库进行迁移。"

#, fuzzy
#~ msgid ""
#~ "In the generic approach, all data in the database tables is copied row by "
#~ "row from the OTRS database into the OTOBO database. This approach is time-"
#~ "consuming and can be optimised. To speed-up the process, we create a "
#~ "temporary copy of the OTRS database on the server used for the OTOBO "
#~ "database. In our case, this is the MariaDB-server running in the "
#~ "container ``otobo_db_1``. After creating the temporary copy, all relevant "
#~ "OTRS tables can be moved into the OTOBO database."
#~ msgstr ""
#~ "通常，数据库表中的所有数据都从OTRS数据库逐行复制到OTOBO数据库。这种方法是"
#~ "耗时的并且可以被优化。为了加快该过程，我们在用于OTOBO数据库的服务器上创建"
#~ "OTRS数据库的临时副本。在我们的例子中，这是在容器``otobo_db_1''中运行的"
#~ "MariaDB服务器。创建临时副本后，所有相关的OTRS表都可以移入OTOBO数据库。"

#, fuzzy
#~ msgid ""
#~ "First of all, we need a dump of the needed OTRS database tables. As the "
#~ "dumped tables are copied into the OTOBO database, we also have to make "
#~ "sure that the character set is converted to *utf8mb4*. The dump is split "
#~ "up into the files *otrs_schema.sql* and *otrs_data.sql* so that the "
#~ "conversion can be done in a safe way."
#~ msgstr ""
#~ "首先，我们需要转储源OTRS数据库。将导入的表单复制到OTOBO数据库时，我们还必"
#~ "须确保将字符集转换为* utf8mb4 *。转储分为* otrs_schema.sql *和* otrs_data."
#~ "sql *文件，以便可以安全的方式进行转换。"

#~ msgid ""
#~ "The provided commands remove any special setup of MySQL collations. In "
#~ "case you need any special collations, make sure to re-add them manually."
#~ msgstr ""
#~ "所提供的命令删除了MySQL校对的特殊设置。如果您需要任何特殊的校对设置，请确"
#~ "保手动将其重新添加。"

#~ msgid ""
#~ "To run OTOBO, you'll also need to use a web server as reverse proxy and a "
#~ "database server. Apart from that, you should install Perl and/or install "
#~ "some additional Perl modules on the OTOBO machine."
#~ msgstr ""
#~ "要运行OTOBO，需要使用一个Web服务器作为反向代理和一个数据库服务器。除此之"
#~ "外，您应该在OTOBO主机上安装Perl和/或一些其他Perl模块。"

#~ msgid ""
#~ "Perl must be installed on the same machine as OTOBO. The database back "
#~ "end and the web server may be installed locally or on another host."
#~ msgstr ""
#~ "Perl必须与OTOBO安装在同一台计算机上。数据库后端和Web服务器可以安装在本地或"
#~ "其他主机上。"

#~ msgid "OTOBO has also a console command for missing modules."
#~ msgstr "OTOBO也有一个控制台命令，用于检查缺失的模块。"

#~ msgid "Apache2"
#~ msgstr "Apache2"

#~ msgid "nginx"
#~ msgstr "nginx"

#~ msgid "Node.js 8.9 or higher (only for development)"
#~ msgstr "Node.js 8.9 或更高版本（仅用于开发）"

#~ msgid "OTRSDynamicFieldAttachment"
#~ msgstr "OTRSDynamicFieldAttachment"

#~ msgid ""
#~ "This manual had been published before OTOBO 10.0.4 was released. This "
#~ "means that the git label rel-10.0.4 might not exist yet."
#~ msgstr ""
#~ "本手册已在OTOBO 10.0.4发布之前就出版了，这意味着git标签rel-10.0.4可能还不"
#~ "存在。"

#~ msgid ""
#~ "Moving tables from one schema to another makes the source schema "
#~ "unusable. So make sure the OTRS database used really is a throwaway copy "
#~ "of the productive OTRS database."
#~ msgstr ""
#~ "将表单从一个模式移动到另一个模式会使源模式不可用。因此，请确保所使用的OTRS"
#~ "数据库一定是生产环境OTRS数据库的一次性复制品。"

#~ msgid ""
#~ "At the moment the Docker Compose environment is not tested in depth for "
#~ "production use. Please use the standard installation process for "
#~ "production use. Brave early adaptors are very welcome to share their "
#~ "experiences."
#~ msgstr ""
#~ "在容器虚拟化环境没有在生产条件下完成测试的情况下，请按照标准安装流程安装生"
#~ "产应用，除非你很清楚自己每个步骤的所有结果。"

#~ msgid "Updating OTOBO using Docker and Docker Compose"
#~ msgstr "用Docker和DockerCompose更新OTOBO"

#~ msgid "Updating to a new patch level release"
#~ msgstr "更新到新的补丁程序版本"

#~ msgid ""
#~ "First make sure that in *.env* the images have either the tag `latest` or "
#~ "the wanted version."
#~ msgstr "首先，请确保在* .env *中，镜像的标签是`最新`或所需版本。"

#~ msgid ""
#~ "After updating you need to reinstall all OTOBO packages and clear the "
#~ "cache."
#~ msgstr "更新后，需要重新安装所有OTOBO软件包并清除缓存。"

#~ msgid "Force an update to or from a devel version"
#~ msgstr "强制更新到开发版本或从开发版本更新"

#~ msgid ""
#~ "Images of devel versions are not upgraded automatically. But the upgrade "
#~ "can be forced. The source of the devel version can either be a local "
#~ "build or a devel image from Docker Hub. Here is an example using the "
#~ "devel image for the OTOBO 10.1.x branch from Docker Hub."
#~ msgstr ""
#~ "开发版本的镜像不会自动升级，但是可以强制升级。开发版本的来源可以是本地构"
#~ "建，也可以是来自Docker Hub的开发镜像。这是一个使用Docker Hub的OTOBO 10.1.x"
#~ "分支的开发镜像的示例。"

#~ msgid ""
#~ "It is irrelevant whether your OTRS/ ((OTRS)) Community Edition was "
#~ "previously installed on two separate servers (application and database "
#~ "servers), or whether you want to change OTOBO to such a configuration."
#~ msgstr ""
#~ "无论你是否将OTRS /（（OTRS））Community Edition安装在两个单独的服务器（应"
#~ "用程序和数据库服务器）上，还是要将OTOBO修改成这样的配置都没有关系。"

#~ msgid "copy */opt/otrs* into an existing volume"
#~ msgstr "将* / opt / otrs *复制到现有的一个卷中"

#~ msgid ""
#~ "For safe copying, we use ``rsync``. But first we need to find out the "
#~ "correct target."
#~ msgstr "为了安全复制，我们使用“ rsync”。但是首先我们需要找出正确的目标。"

#~ msgid ""
#~ "In the Docker case, a local database won't be reachable via ``127.0.0.1`` "
#~ "from within the Docker container. Pick one of the IP-addresses reported "
#~ "by ``hostname --all-ip-addresses`` instead for ``OTRS Server``. In order "
#~ "to make sure that there is a database user who can read the data, it "
#~ "might be worthwhile to create a dedicated user. E.g. ``CREATE USER "
#~ "'otrs_migration'@'%' IDENTIFIED BY 'otrs_migration'`` and ``GRANT SELECT, "
#~ "SHOW VIEW ON otrs.* TO 'otrs_migration'@'%'``."
#~ msgstr ""
#~ "在Docker的情况下，将无法从Docker容器中通过``127.0.0.1''访问本地数据库。你"
#~ "需要选择“主机名--all-ip-addresses”报告的IP地址之一，代替“ OTRS Server”。为"
#~ "了确保至少有一个数据库用户可以读取数据，最好创建一个专用用户，例如 "
#~ "``CREATE USER 'otrs_migration'@'%' IDENTIFIED BY 'otrs_migration'`` 和"
#~ "``GRANT SELECT, SHOW VIEW ON otrs.* TO 'otrs_migration'@'%'``。"

#~ msgid ""
#~ "Apache has difficulties with running two independent applications under "
#~ "mod_perl on the same server. Therefore, if you installed OTOBO on the "
#~ "same server as your OTRS / ((OTRS)) Community Edition, disable mod_perl "
#~ "for OTOBO as long as both systems are running. To disable mod_perl for "
#~ "OTOBO, simply comment out the mod_perl part in the file */opt/otobo/"
#~ "scripts/apache2-httpd.include.conf*. Alternatively, you can deactivate "
#~ "OTRS in the web server before migration."
#~ msgstr ""
#~ "Apache难以在同一服务器上的mod_perl下运行两个独立的应用程序。因此，如果您将"
#~ "OTOBO与OTRS /（（OTRS））Community Edition安装在同一台服务器上，则只要两个"
#~ "系统都在运行，请禁用OTOBO的mod_perl。要禁用OTOBO的mod_perl，只需注释掉文件"
#~ "* / opt / otobo / scripts / apache2-httpd.include.conf *中的mod_perl部分。"
#~ "或者，您可以在迁移之前停用Web服务器中的OTRS。"

#~ msgid ""
#~ "Full-text index regular expression filters to remove parts of the text."
#~ msgstr "全文索引正则表达式过滤器可删除部分文本。"

#~ msgid "`not403 <http://not403.blogspot.com/search/label/otrs>`_"
#~ msgstr "`not403 <http://not403.blogspot.com/search/label/otrs>`_"

#~ msgid "``docker system prune -a`` start over"
#~ msgstr "``docker system prune -a`` 重新开始"

#, fuzzy
#~ msgid ""
#~ "The configuration file *.env* allows you to manage your installation of "
#~ "OTOBO. It must be first created and the adapted by yourself."
#~ msgstr ""
#~ "配置文件* .env *是允许设置OTOBO安装的接口。 * .env *不会自动创建，必须由用"
#~ "户创建和编辑。"

#~ msgid ""
#~ "Two template files are available in the newly created folder *docker-"
#~ "compose*:"
#~ msgstr "新创建的文件夹* docker-compose *中有两个模板文件："

#, fuzzy
#~ msgid "Provide HTTP support via port 80."
#~ msgstr "通过80端口提供HTTP。"

#, fuzzy
#~ msgid "Provide HTTPS support via port 443."
#~ msgstr "通过443端口提供HTTPS。"

#~ msgid ""
#~ "Choose one of the files that suits your needs and rename it to *.env*."
#~ msgstr "选择一个适合你的需求的文件，并更名为*.env*。"

#~ msgid ""
#~ "For productive environments we recommend the use of a web proxy. If you "
#~ "want to install your own web proxy for OTOBO, an extra docker nginx image "
#~ "is available for use. In this case, please rename the *."
#~ "docker_compose_env_https* file to *.env*."
#~ msgstr ""
#~ "对于生产环境，我们建议用一个网络代理。你如果想为OTOBO安装你自己的网络代"
#~ "理，有一个额外的Docker nginx镜像可用。这种情况下，请将*."
#~ "docker_compose_env_https*文件更名为*.env*。"

#~ msgid ""
#~ "Example for installing git, docker, and docker-compose installation on "
#~ "Ubuntu 20.04:"
#~ msgstr "在Ubuntu 20.04上安装Git，Docker和Docker-Compose，举例如下："
